{"version":3,"sources":["../src/python.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","wordRegexp","words","RegExp","join","wordOperators","commonKeywords","commonBuiltins","registerHelper","concat","top","state","scopes","length","defineMode","conf","parserConf","ERRORCLASS","delimiters","singleDelimiters","operators","singleOperators","doubleOperators","doubleDelimiters","tripleDelimiters","i","splice","hangingIndent","indentUnit","myKeywords","myBuiltins","extra_keywords","extra_builtins","py3","version","identifiers","stringPrefixes","keywords","builtins","tokenBase","stream","sol","lastToken","indent","indentation","type","scopeOffset","offset","eatSpace","lineOffset","pushPyScope","dedent","peek","errorToken","style","tokenBaseInner","match","floatLiteral","eat","intLiteral","isFmtString","current","toLowerCase","indexOf","tokenize","tokenStringFactory","formatStringFactory","next","delimiter","tokenOuter","charAt","substr","singleline","OUTCLASS","tokenNestedExpr","depth","inner","tokenString","eol","eatWhile","singleLineStringErrors","isString","pop","push","align","pushBracketScope","column","indented","tokenLexer","beginningOfLine","test","lambda","delimiter_index","slice","startState","basecolumn","token","addErr","textAfter","Pass","scope","closing","electricInput","closeBrackets","triples","lineComment","fold","defineMIME","name","str","split"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"qtype_proforma/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"qtype_proforma/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n                        \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n                        \"for\", \"from\", \"global\", \"if\", \"import\",\n                        \"lambda\", \"pass\", \"raise\", \"return\",\n                        \"try\", \"while\", \"with\", \"yield\", \"in\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n                        \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n                        \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n                        \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n                        \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n                        \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n                        \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n                        \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n                        \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n                        \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n                        \"Ellipsis\", \"__debug__\"];\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function(conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/;\n    //               (Backwards-compatiblity with old, cumbersome config system)\n    var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters,\n                     parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/]\n    for (var i = 0; i < operators.length; i++) if (!operators[i]) operators.splice(i--, 1)\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n\n    var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n    if (parserConf.extra_keywords != undefined)\n      myKeywords = myKeywords.concat(parserConf.extra_keywords);\n\n    if (parserConf.extra_builtins != undefined)\n      myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n\n    var py3 = !(parserConf.version && Number(parserConf.version) < 3)\n    if (py3) {\n      // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n      myKeywords = myKeywords.concat([\"nonlocal\", \"False\", \"True\", \"None\", \"async\", \"await\"]);\n      myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n      var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(fr))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z][_A-Za-z0-9]*/;\n      myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n      myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n                                      \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n                                      \"unichr\", \"unicode\", \"xrange\", \"False\", \"True\", \"None\"]);\n      var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins);\n\n    // tokenizers\n    function tokenBase(stream, state) {\n      var sol = stream.sol() && state.lastToken != \"\\\\\"\n      if (sol) state.indent = stream.indentation()\n      // Handle scope changes\n      if (sol && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset)\n            pushPyScope(state);\n          else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\")\n            state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state))\n            style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state) {\n      if (stream.eatSpace()) return null;\n\n      // Handle Comments\n      if (stream.match(/^#.*/)) return \"comment\";\n\n      // Handle Number Literals\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false;\n        // Floats\n        if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n        if (stream.match(/^[\\d_]+\\.\\d*/)) { floatLiteral = true; }\n        if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return \"number\";\n        }\n        // Integers\n        var intLiteral = false;\n        // Hex\n        if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true;\n        // Binary\n        if (stream.match(/^0b[01_]+/i)) intLiteral = true;\n        // Octal\n        if (stream.match(/^0o[0-7_]+/i)) intLiteral = true;\n        // Decimal\n        if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i);\n          // TODO - Can you have imaginary longs?\n          intLiteral = true;\n        }\n        // Zero by itself with no other piece of number.\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      }\n\n      // Handle Strings\n      if (stream.match(stringPrefixes)) {\n        var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n        if (!isFmtString) {\n          state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        } else {\n          state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        }\n      }\n\n      for (var i = 0; i < operators.length; i++)\n        if (stream.match(operators[i])) return \"operator\"\n\n      if (stream.match(delimiters)) return \"punctuation\";\n\n      if (state.lastToken == \".\" && stream.match(identifiers))\n        return \"property\";\n\n      if (stream.match(keywords) || stream.match(wordOperators))\n        return \"keyword\";\n\n      if (stream.match(builtins))\n        return \"builtin\";\n\n      if (stream.match(/^(self|cls)\\b/))\n        return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\")\n          return \"def\";\n        return \"variable\";\n      }\n\n      // Handle non-detected items\n      stream.next();\n      return ERRORCLASS;\n    }\n\n    function formatStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenNestedExpr(depth) {\n        return function(stream, state) {\n          var inner = tokenBaseInner(stream, state)\n          if (inner == \"punctuation\") {\n            if (stream.current() == \"{\") {\n              state.tokenize = tokenNestedExpr(depth + 1)\n            } else if (stream.current() == \"}\") {\n              if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1)\n              else state.tokenize = tokenString\n            }\n          }\n          return inner\n        }\n      }\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else if (stream.match('{{')) {\n            // ignore {{ in f-str\n            return OUTCLASS;\n          } else if (stream.match('{', false)) {\n            // switch to nested mode\n            state.tokenize = tokenNestedExpr(0)\n            if (stream.current()) return OUTCLASS;\n            else return state.tokenize(stream, state)\n          } else if (stream.match('}}')) {\n            return OUTCLASS;\n          } else if (stream.match('}')) {\n            // single } in f-string is an error\n            return ERRORCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function tokenStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushPyScope(state) {\n      while (top(state).type != \"py\") state.scopes.pop()\n      state.scopes.push({offset: top(state).offset + conf.indentUnit,\n                         type: \"py\",\n                         align: null})\n    }\n\n    function pushBracketScope(stream, state, type) {\n      var align = stream.match(/^([\\s\\[\\{\\(]|#.*)*$/, false) ? null : stream.column() + 1\n      state.scopes.push({offset: state.indent + hangingIndent,\n                         type: type,\n                         align: align})\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n      while (state.scopes.length > 1 && top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) state.beginningOfLine = true;\n\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      // Handle decorators\n      if (state.beginningOfLine && current == \"@\")\n        return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n\n      if (/\\S/.test(current)) state.beginningOfLine = false;\n\n      if ((style == \"variable\" || style == \"builtin\")\n          && state.lastToken == \"meta\")\n        style = \"meta\";\n\n      // Handle scope changes.\n      if (current == \"pass\" || current == \"return\")\n        state.dedent += 1;\n\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\")\n        pushPyScope(state);\n\n      if (current.length == 1 && !/string|comment/.test(style)) {\n        var delimiter_index = \"[({\".indexOf(current);\n        if (delimiter_index != -1)\n          pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n        delimiter_index = \"])}\".indexOf(current);\n        if (delimiter_index != -1) {\n          if (top(state).type == current) state.indent = state.scopes.pop().offset - hangingIndent\n          else return ERRORCLASS;\n        }\n      }\n      if (state.dedent > 0 && stream.eol() && top(state).type == \"py\") {\n        if (state.scopes.length > 1) state.scopes.pop();\n        state.dedent -= 1;\n      }\n\n      return style;\n    }\n\n    var external = {\n      startState: function(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{offset: basecolumn || 0, type: \"py\", align: null}],\n          indent: basecolumn || 0,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n\n        if (style && style != \"comment\")\n          state.lastToken = (style == \"keyword\" || style == \"punctuation\") ? stream.current() : style;\n        if (style == \"punctuation\") style = null;\n\n        if (stream.eol() && state.lambda)\n          state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n\n      indent: function(state, textAfter) {\n        if (state.tokenize != tokenBase)\n          return state.tokenize.isString ? CodeMirror.Pass : 0;\n\n        var scope = top(state), closing = scope.type == textAfter.charAt(0)\n        if (scope.align != null)\n          return scope.align - (closing ? 1 : 0)\n        else\n          return scope.offset - (closing ? hangingIndent : 0)\n      },\n\n      electricInput: /^\\s*[\\}\\]\\)]$/,\n      closeBrackets: {triples: \"'\\\"\"},\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function(str) { return str.split(\" \"); };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \"+\n                          \"extern gil include nogil property public \"+\n                          \"readonly struct union DEF IF ELIF ELSE\")\n  });\n\n});\n"],"file":"python.min.js"}