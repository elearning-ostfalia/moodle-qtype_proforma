{"version":3,"file":"formhelper.min.js","sources":["../src/formhelper.js"],"sourcesContent":["// This file is part of ProFormA Question Type for Moodle\n//\n// ProFormA Question Type for Moodle is free software:\n// you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// ProFormA Question Type for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with ProFormA Question Type for Moodle.\n// If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Helper functions for forms.\n *\n * @package    qtype\n * @subpackage proforma\n * @copyright  2020 Ostfalia Hochschule fuer angewandte Wissenschaften\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author     K.Borm <k.borm[at]ostfalia.de>\n */\n\nfunction showOrHide(id, dependend, needle, optionfield, option) {\n    try {\n        // Get value in depended input.\n        let text = document.getElementById(dependend).value;\n        let remove = true;\n        if (text.search(needle) >= 0) {\n            // It contains the needle text =>\n            // Get selected option in option field (response format)\n            text = document.getElementById(optionfield).value;\n            if (text == option) {\n                // It contains version control => show.\n                remove = false;\n            }\n        }\n        document.getElementById('fitem_' + id).style.display = remove?'none':null;\n    } catch(e) {\n        console.log('error ' + e);\n    }\n}\n\n\n/**\n * hide/show input field for label of version control input value\n *\n * @param {type} id: id of field to hide/show\n * @param {type} dependend: id of field with URI\n * @param {type} needle: '{input}'\n * @param {type} optionfield: if of response format field\n * @param {type} option: version control option\n * @returns {undefined}\n */\nexport const showif = (id, dependend, needle, optionfield, option) => {\n    // Initialise.\n    showOrHide(id, dependend, needle, optionfield, option);\n    // Check if key was pressed in URI text field.\n    document.getElementById(dependend).addEventListener('keyup', function () {\n        showOrHide(id, dependend, needle, optionfield, option);\n    });\n    // Check if response option is changed.\n    document.getElementById(optionfield).addEventListener('change', function () {\n        showOrHide(id, dependend, needle, optionfield, option);\n    });\n};\n\n\n"],"names":["showOrHide","id","dependend","needle","optionfield","option","text","document","getElementById","value","remove","search","style","display","e","console","log","addEventListener"],"mappings":";;;;;;;;;;SA2BSA,WAAWC,GAAIC,UAAWC,OAAQC,YAAaC,gBAG5CC,KAAOC,SAASC,eAAeN,WAAWO,MAC1CC,QAAS,EACTJ,KAAKK,OAAOR,SAAW,IAGvBG,KAAOC,SAASC,eAAeJ,aAAaK,QAChCJ,SAERK,QAAS,GAGjBH,SAASC,eAAe,SAAWP,IAAIW,MAAMC,QAAUH,OAAO,OAAO,KACvE,MAAMI,GACJC,QAAQC,IAAI,SAAWF,mGAeT,SAACb,GAAIC,UAAWC,OAAQC,YAAaC,QAEvDL,WAAWC,GAAIC,UAAWC,OAAQC,YAAaC,QAE/CE,SAASC,eAAeN,WAAWe,iBAAiB,SAAS,WACzDjB,WAAWC,GAAIC,UAAWC,OAAQC,YAAaC,WAGnDE,SAASC,eAAeJ,aAAaa,iBAAiB,UAAU,WAC5DjB,WAAWC,GAAIC,UAAWC,OAAQC,YAAaC"}