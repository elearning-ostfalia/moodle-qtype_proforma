{"version":3,"file":"xml.min.js","sources":["../src/xml.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"qtype_proforma/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"qtype_proforma/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"],"names":["mod","CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","inTag","quote","closure","baseState","tagName","tagStart","test","eol","isInAttribute","stringStartCol","column","style","terminator","depth","Context","startOfLine","prev","context","indent","indented","hasOwnProperty","noIndent","this","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","exports","module","require","define","amd"],"mappings":"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"}