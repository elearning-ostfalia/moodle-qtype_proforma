{"version":3,"file":"zip.min.js","sources":["../../src/zip/zip.js"],"sourcesContent":["(function (global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n\t\t\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.zip = {}));\r\n})(this, (function (exports) { 'use strict';\r\n\r\n\tconst { Array, Object, String, Number, BigInt, Math, Date, Map, Set, Response, URL, Error, Uint8Array, Uint16Array, Uint32Array, DataView, Blob, Promise, TextEncoder, TextDecoder, document, crypto, btoa, TransformStream, ReadableStream, WritableStream, CompressionStream, DecompressionStream, navigator, Worker } = typeof globalThis !== 'undefined' ? globalThis : this || self;\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst MAX_32_BITS = 0xffffffff;\r\n\tconst MAX_16_BITS = 0xffff;\r\n\tconst COMPRESSION_METHOD_DEFLATE = 0x08;\r\n\tconst COMPRESSION_METHOD_STORE = 0x00;\r\n\tconst COMPRESSION_METHOD_AES = 0x63;\r\n\r\n\tconst LOCAL_FILE_HEADER_SIGNATURE = 0x04034b50;\r\n\tconst SPLIT_ZIP_FILE_SIGNATURE = 0x08074b50;\r\n\tconst DATA_DESCRIPTOR_RECORD_SIGNATURE = SPLIT_ZIP_FILE_SIGNATURE;\r\n\tconst CENTRAL_FILE_HEADER_SIGNATURE = 0x02014b50;\r\n\tconst END_OF_CENTRAL_DIR_SIGNATURE = 0x06054b50;\r\n\tconst ZIP64_END_OF_CENTRAL_DIR_SIGNATURE = 0x06064b50;\r\n\tconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE = 0x07064b50;\r\n\tconst END_OF_CENTRAL_DIR_LENGTH = 22;\r\n\tconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH = 20;\r\n\tconst ZIP64_END_OF_CENTRAL_DIR_LENGTH = 56;\r\n\tconst ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH = END_OF_CENTRAL_DIR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LENGTH;\r\n\r\n\tconst EXTRAFIELD_TYPE_ZIP64 = 0x0001;\r\n\tconst EXTRAFIELD_TYPE_AES = 0x9901;\r\n\tconst EXTRAFIELD_TYPE_NTFS = 0x000a;\r\n\tconst EXTRAFIELD_TYPE_NTFS_TAG1 = 0x0001;\r\n\tconst EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP = 0x5455;\r\n\tconst EXTRAFIELD_TYPE_UNICODE_PATH = 0x7075;\r\n\tconst EXTRAFIELD_TYPE_UNICODE_COMMENT = 0x6375;\r\n\r\n\tconst BITFLAG_ENCRYPTED = 0x01;\r\n\tconst BITFLAG_LEVEL = 0x06;\r\n\tconst BITFLAG_DATA_DESCRIPTOR = 0x0008;\r\n\tconst BITFLAG_LANG_ENCODING_FLAG = 0x0800;\r\n\tconst FILE_ATTR_MSDOS_DIR_MASK = 0x10;\r\n\r\n\tconst VERSION_DEFLATE = 0x14;\r\n\tconst VERSION_ZIP64 = 0x2D;\r\n\tconst VERSION_AES = 0x33;\r\n\r\n\tconst DIRECTORY_SIGNATURE = \"/\";\r\n\r\n\tconst MAX_DATE = new Date(2107, 11, 31);\r\n\tconst MIN_DATE = new Date(1980, 0, 1);\r\n\r\n\tconst UNDEFINED_VALUE = undefined;\r\n\tconst UNDEFINED_TYPE$1 = \"undefined\";\r\n\tconst FUNCTION_TYPE$1 = \"function\";\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tclass StreamAdapter {\r\n\r\n\t\tconstructor(Codec) {\r\n\t\t\treturn class extends TransformStream {\r\n\t\t\t\tconstructor(_format, options) {\r\n\t\t\t\t\tconst codec = new Codec(options);\r\n\t\t\t\t\tsuper({\r\n\t\t\t\t\t\ttransform(chunk, controller) {\r\n\t\t\t\t\t\t\tcontroller.enqueue(codec.append(chunk));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tflush(controller) {\r\n\t\t\t\t\t\t\tconst chunk = codec.flush();\r\n\t\t\t\t\t\t\tif (chunk) {\r\n\t\t\t\t\t\t\t\tcontroller.enqueue(chunk);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst MINIMUM_CHUNK_SIZE = 64;\r\n\tlet maxWorkers = 2;\r\n\ttry {\r\n\t\tif (typeof navigator != UNDEFINED_TYPE$1 && navigator.hardwareConcurrency) {\r\n\t\t\tmaxWorkers = navigator.hardwareConcurrency;\r\n\t\t}\r\n\t} catch (_error) {\r\n\t\t// ignored\r\n\t}\r\n\tconst DEFAULT_CONFIGURATION = {\r\n\t\tchunkSize: 512 * 1024,\r\n\t\tmaxWorkers,\r\n\t\tterminateWorkerTimeout: 5000,\r\n\t\tuseWebWorkers: true,\r\n\t\tuseCompressionStream: true,\r\n\t\tworkerScripts: UNDEFINED_VALUE,\r\n\t\tCompressionStreamNative: typeof CompressionStream != UNDEFINED_TYPE$1 && CompressionStream,\r\n\t\tDecompressionStreamNative: typeof DecompressionStream != UNDEFINED_TYPE$1 && DecompressionStream\r\n\t};\r\n\r\n\tconst config = Object.assign({}, DEFAULT_CONFIGURATION);\r\n\r\n\tfunction getConfiguration() {\r\n\t\treturn config;\r\n\t}\r\n\r\n\tfunction getChunkSize(config) {\r\n\t\treturn Math.max(config.chunkSize, MINIMUM_CHUNK_SIZE);\r\n\t}\r\n\r\n\tfunction configure(configuration) {\r\n\t\tconst {\r\n\t\t\tbaseURL,\r\n\t\t\tchunkSize,\r\n\t\t\tmaxWorkers,\r\n\t\t\tterminateWorkerTimeout,\r\n\t\t\tuseCompressionStream,\r\n\t\t\tuseWebWorkers,\r\n\t\t\tDeflate,\r\n\t\t\tInflate,\r\n\t\t\tCompressionStream,\r\n\t\t\tDecompressionStream,\r\n\t\t\tworkerScripts\r\n\t\t} = configuration;\r\n\t\tsetIfDefined(\"baseURL\", baseURL);\r\n\t\tsetIfDefined(\"chunkSize\", chunkSize);\r\n\t\tsetIfDefined(\"maxWorkers\", maxWorkers);\r\n\t\tsetIfDefined(\"terminateWorkerTimeout\", terminateWorkerTimeout);\r\n\t\tsetIfDefined(\"useCompressionStream\", useCompressionStream);\r\n\t\tsetIfDefined(\"useWebWorkers\", useWebWorkers);\r\n\t\tif (Deflate) {\r\n\t\t\tconfig.CompressionStream = new StreamAdapter(Deflate);\r\n\t\t}\r\n\t\tif (Inflate) {\r\n\t\t\tconfig.DecompressionStream = new StreamAdapter(Inflate);\r\n\t\t}\r\n\t\tsetIfDefined(\"CompressionStream\", CompressionStream);\r\n\t\tsetIfDefined(\"DecompressionStream\", DecompressionStream);\r\n\t\tif (workerScripts !== UNDEFINED_VALUE) {\r\n\t\t\tconst { deflate, inflate } = workerScripts;\r\n\t\t\tif (deflate || inflate) {\r\n\t\t\t\tif (!config.workerScripts) {\r\n\t\t\t\t\tconfig.workerScripts = {};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (deflate) {\r\n\t\t\t\tif (!Array.isArray(deflate)) {\r\n\t\t\t\t\tthrow new Error(\"workerScripts.deflate must be an array\");\r\n\t\t\t\t}\r\n\t\t\t\tconfig.workerScripts.deflate = deflate;\r\n\t\t\t}\r\n\t\t\tif (inflate) {\r\n\t\t\t\tif (!Array.isArray(inflate)) {\r\n\t\t\t\t\tthrow new Error(\"workerScripts.inflate must be an array\");\r\n\t\t\t\t}\r\n\t\t\t\tconfig.workerScripts.inflate = inflate;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setIfDefined(propertyName, propertyValue) {\r\n\t\tif (propertyValue !== UNDEFINED_VALUE) {\r\n\t\t\tconfig[propertyName] = propertyValue;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction e(e){const t=()=>URL.createObjectURL(new Blob(['const{Array:e,Object:t,Number:n,Math:r,Error:s,Uint8Array:i,Uint16Array:o,Uint32Array:c,Int32Array:f,Map:a,DataView:l,Promise:u,TextEncoder:w,crypto:h,postMessage:d,TransformStream:p,ReadableStream:y,WritableStream:m,CompressionStream:b,DecompressionStream:g}=self;class k{constructor(e){return class extends p{constructor(t,n){const r=new e(n);super({transform(e,t){t.enqueue(r.append(e))},flush(e){const t=r.flush();t&&e.enqueue(t)}})}}}}const v=[];for(let e=0;256>e;e++){let t=e;for(let e=0;8>e;e++)1&t?t=t>>>1^3988292384:t>>>=1;v[e]=t}class S{constructor(e){this.t=e||-1}append(e){let t=0|this.t;for(let n=0,r=0|e.length;r>n;n++)t=t>>>8^v[255&(t^e[n])];this.t=t}get(){return~this.t}}class z extends p{constructor(){let e;const t=new S;super({transform(e,n){t.append(e),n.enqueue(e)},flush(){const n=new i(4);new l(n.buffer).setUint32(0,t.get()),e.value=n}}),e=this}}const C={concat(e,t){if(0===e.length||0===t.length)return e.concat(t);const n=e[e.length-1],r=C.i(n);return 32===r?e.concat(t):C.o(t,r,0|n,e.slice(0,e.length-1))},l(e){const t=e.length;if(0===t)return 0;const n=e[t-1];return 32*(t-1)+C.i(n)},u(e,t){if(32*e.length<t)return e;const n=(e=e.slice(0,r.ceil(t/32))).length;return t&=31,n>0&&t&&(e[n-1]=C.h(t,e[n-1]&2147483648>>t-1,1)),e},h:(e,t,n)=>32===e?t:(n?0|t:t<<32-e)+1099511627776*e,i:e=>r.round(e/1099511627776)||32,o(e,t,n,r){for(void 0===r&&(r=[]);t>=32;t-=32)r.push(n),n=0;if(0===t)return r.concat(e);for(let s=0;s<e.length;s++)r.push(n|e[s]>>>t),n=e[s]<<32-t;const s=e.length?e[e.length-1]:0,i=C.i(s);return r.push(C.h(t+i&31,t+i>32?n:r.pop(),1)),r}},x={p:{m(e){const t=C.l(e)/8,n=new i(t);let r;for(let s=0;t>s;s++)0==(3&s)&&(r=e[s/4]),n[s]=r>>>24,r<<=8;return n},g(e){const t=[];let n,r=0;for(n=0;n<e.length;n++)r=r<<8|e[n],3==(3&n)&&(t.push(r),r=0);return 3&n&&t.push(C.h(8*(3&n),r)),t}}},_=class{constructor(e){const t=this;t.blockSize=512,t.k=[1732584193,4023233417,2562383102,271733878,3285377520],t.v=[1518500249,1859775393,2400959708,3395469782],e?(t.S=e.S.slice(0),t.C=e.C.slice(0),t._=e._):t.reset()}reset(){const e=this;return e.S=e.k.slice(0),e.C=[],e._=0,e}update(e){const t=this;\"string\"==typeof e&&(e=x.A.g(e));const n=t.C=C.concat(t.C,e),r=t._,i=t._=r+C.l(e);if(i>9007199254740991)throw new s(\"Cannot hash more than 2^53 - 1 bits\");const o=new c(n);let f=0;for(let e=t.blockSize+r-(t.blockSize+r&t.blockSize-1);i>=e;e+=t.blockSize)t.I(o.subarray(16*f,16*(f+1))),f+=1;return n.splice(0,16*f),t}D(){const e=this;let t=e.C;const n=e.S;t=C.concat(t,[C.h(1,1)]);for(let e=t.length+2;15&e;e++)t.push(0);for(t.push(r.floor(e._/4294967296)),t.push(0|e._);t.length;)e.I(t.splice(0,16));return e.reset(),n}V(e,t,n,r){return e>19?e>39?e>59?e>79?void 0:t^n^r:t&n|t&r|n&r:t^n^r:t&n|~t&r}P(e,t){return t<<e|t>>>32-e}I(t){const n=this,s=n.S,i=e(80);for(let e=0;16>e;e++)i[e]=t[e];let o=s[0],c=s[1],f=s[2],a=s[3],l=s[4];for(let e=0;79>=e;e++){16>e||(i[e]=n.P(1,i[e-3]^i[e-8]^i[e-14]^i[e-16]));const t=n.P(5,o)+n.V(e,c,f,a)+l+i[e]+n.v[r.floor(e/20)]|0;l=a,a=f,f=n.P(30,c),c=o,o=t}s[0]=s[0]+o|0,s[1]=s[1]+c|0,s[2]=s[2]+f|0,s[3]=s[3]+a|0,s[4]=s[4]+l|0}},A={getRandomValues(e){const t=new c(e.buffer),n=e=>{let t=987654321;const n=4294967295;return()=>(t=36969*(65535&t)+(t>>16)&n,(((t<<16)+(e=18e3*(65535&e)+(e>>16)&n)&n)/4294967296+.5)*(r.random()>.5?1:-1))};for(let s,i=0;i<e.length;i+=4){const e=n(4294967296*(s||r.random()));s=987654071*e(),t[i/4]=4294967296*e()|0}return e}},I={importKey:e=>new I.R(x.p.g(e)),B(e,t,n,r){if(n=n||1e4,0>r||0>n)throw new s(\"invalid params to pbkdf2\");const i=1+(r>>5)<<2;let o,c,f,a,u;const w=new ArrayBuffer(i),h=new l(w);let d=0;const p=C;for(t=x.p.g(t),u=1;(i||1)>d;u++){for(o=c=e.encrypt(p.concat(t,[u])),f=1;n>f;f++)for(c=e.encrypt(c),a=0;a<c.length;a++)o[a]^=c[a];for(f=0;(i||1)>d&&f<o.length;f++)h.setInt32(d,o[f]),d+=4}return w.slice(0,r/8)},R:class{constructor(e){const t=this,n=t.M=_,r=[[],[]];t.K=[new n,new n];const s=t.K[0].blockSize/32;e.length>s&&(e=(new n).update(e).D());for(let t=0;s>t;t++)r[0][t]=909522486^e[t],r[1][t]=1549556828^e[t];t.K[0].update(r[0]),t.K[1].update(r[1]),t.U=new n(t.K[0])}reset(){const e=this;e.U=new e.M(e.K[0]),e.N=!1}update(e){this.N=!0,this.U.update(e)}digest(){const e=this,t=e.U.D(),n=new e.M(e.K[1]).update(t).D();return e.reset(),n}encrypt(e){if(this.N)throw new s(\"encrypt on already updated hmac called!\");return this.update(e),this.digest(e)}}},D=void 0!==h&&\"function\"==typeof h.getRandomValues,V=\"Invalid password\",P=\"Invalid signature\",R=\"zipjs-abort-check-password\";function B(e){return D?h.getRandomValues(e):A.getRandomValues(e)}const E=16,M={name:\"PBKDF2\"},K=t.assign({hash:{name:\"HMAC\"}},M),U=t.assign({iterations:1e3,hash:{name:\"SHA-1\"}},M),N=[\"deriveBits\"],O=[8,12,16],T=[16,24,32],W=10,j=[0,0,0,0],H=\"undefined\",L=\"function\",F=typeof h!=H,q=F&&h.subtle,G=F&&typeof q!=H,J=x.p,Q=class{constructor(e){const t=this;t.O=[[[],[],[],[],[]],[[],[],[],[],[]]],t.O[0][0][0]||t.T();const n=t.O[0][4],r=t.O[1],i=e.length;let o,c,f,a=1;if(4!==i&&6!==i&&8!==i)throw new s(\"invalid aes key size\");for(t.v=[c=e.slice(0),f=[]],o=i;4*i+28>o;o++){let e=c[o-1];(o%i==0||8===i&&o%i==4)&&(e=n[e>>>24]<<24^n[e>>16&255]<<16^n[e>>8&255]<<8^n[255&e],o%i==0&&(e=e<<8^e>>>24^a<<24,a=a<<1^283*(a>>7))),c[o]=c[o-i]^e}for(let e=0;o;e++,o--){const t=c[3&e?o:o-4];f[e]=4>=o||4>e?t:r[0][n[t>>>24]]^r[1][n[t>>16&255]]^r[2][n[t>>8&255]]^r[3][n[255&t]]}}encrypt(e){return this.W(e,0)}decrypt(e){return this.W(e,1)}T(){const e=this.O[0],t=this.O[1],n=e[4],r=t[4],s=[],i=[];let o,c,f,a;for(let e=0;256>e;e++)i[(s[e]=e<<1^283*(e>>7))^e]=e;for(let l=o=0;!n[l];l^=c||1,o=i[o]||1){let i=o^o<<1^o<<2^o<<3^o<<4;i=i>>8^255&i^99,n[l]=i,r[i]=l,a=s[f=s[c=s[l]]];let u=16843009*a^65537*f^257*c^16843008*l,w=257*s[i]^16843008*i;for(let n=0;4>n;n++)e[n][l]=w=w<<24^w>>>8,t[n][i]=u=u<<24^u>>>8}for(let n=0;5>n;n++)e[n]=e[n].slice(0),t[n]=t[n].slice(0)}W(e,t){if(4!==e.length)throw new s(\"invalid aes block size\");const n=this.v[t],r=n.length/4-2,i=[0,0,0,0],o=this.O[t],c=o[0],f=o[1],a=o[2],l=o[3],u=o[4];let w,h,d,p=e[0]^n[0],y=e[t?3:1]^n[1],m=e[2]^n[2],b=e[t?1:3]^n[3],g=4;for(let e=0;r>e;e++)w=c[p>>>24]^f[y>>16&255]^a[m>>8&255]^l[255&b]^n[g],h=c[y>>>24]^f[m>>16&255]^a[b>>8&255]^l[255&p]^n[g+1],d=c[m>>>24]^f[b>>16&255]^a[p>>8&255]^l[255&y]^n[g+2],b=c[b>>>24]^f[p>>16&255]^a[y>>8&255]^l[255&m]^n[g+3],g+=4,p=w,y=h,m=d;for(let e=0;4>e;e++)i[t?3&-e:e]=u[p>>>24]<<24^u[y>>16&255]<<16^u[m>>8&255]<<8^u[255&b]^n[g++],w=p,p=y,y=m,m=b,b=w;return i}},X=class{constructor(e,t){this.j=e,this.H=t,this.L=t}reset(){this.L=this.H}update(e){return this.F(this.j,e,this.L)}q(e){if(255==(e>>24&255)){let t=e>>16&255,n=e>>8&255,r=255&e;255===t?(t=0,255===n?(n=0,255===r?r=0:++r):++n):++t,e=0,e+=t<<16,e+=n<<8,e+=r}else e+=1<<24;return e}G(e){0===(e[0]=this.q(e[0]))&&(e[1]=this.q(e[1]))}F(e,t,n){let r;if(!(r=t.length))return[];const s=C.l(t);for(let s=0;r>s;s+=4){this.G(n);const r=e.encrypt(n);t[s]^=r[0],t[s+1]^=r[1],t[s+2]^=r[2],t[s+3]^=r[3]}return C.u(t,s)}},Y=I.R;let Z=F&&G&&typeof q.importKey==L,$=F&&G&&typeof q.deriveBits==L;class ee extends p{constructor({password:e,signed:n,encryptionStrength:r,checkPasswordOnly:o}){super({start(){t.assign(this,{ready:new u((e=>this.J=e)),password:e,signed:n,X:r-1,pending:new i})},async transform(e,t){const n=this,{password:r,X:c,J:f,ready:a}=n;r?(await(async(e,t,n,r)=>{const i=await re(e,t,n,ie(r,0,O[t])),o=ie(r,O[t]);if(i[0]!=o[0]||i[1]!=o[1])throw new s(V)})(n,c,r,ie(e,0,O[c]+2)),e=ie(e,O[c]+2),o?t.error(new s(R)):f()):await a;const l=new i(e.length-W-(e.length-W)%E);t.enqueue(ne(n,e,l,0,W,!0))},async flush(e){const{signed:t,Y:n,Z:r,pending:o,ready:c}=this;await c;const f=ie(o,0,o.length-W),a=ie(o,o.length-W);let l=new i;if(f.length){const e=ce(J,f);r.update(e);const t=n.update(e);l=oe(J,t)}if(t){const e=ie(oe(J,r.digest()),0,W);for(let t=0;W>t;t++)if(e[t]!=a[t])throw new s(P)}e.enqueue(l)}})}}class te extends p{constructor({password:e,encryptionStrength:n}){let r;super({start(){t.assign(this,{ready:new u((e=>this.J=e)),password:e,X:n-1,pending:new i})},async transform(e,t){const n=this,{password:r,X:s,J:o,ready:c}=n;let f=new i;r?(f=await(async(e,t,n)=>{const r=B(new i(O[t]));return se(r,await re(e,t,n,r))})(n,s,r),o()):await c;const a=new i(f.length+e.length-e.length%E);a.set(f,0),t.enqueue(ne(n,e,a,f.length,0))},async flush(e){const{Y:t,Z:n,pending:s,ready:o}=this;await o;let c=new i;if(s.length){const e=t.update(ce(J,s));n.update(e),c=oe(J,e)}r.signature=oe(J,n.digest()).slice(0,W),e.enqueue(se(c,r.signature))}}),r=this}}function ne(e,t,n,r,s,o){const{Y:c,Z:f,pending:a}=e,l=t.length-s;let u;for(a.length&&(t=se(a,t),n=((e,t)=>{if(t&&t>e.length){const n=e;(e=new i(t)).set(n,0)}return e})(n,l-l%E)),u=0;l-E>=u;u+=E){const e=ce(J,ie(t,u,u+E));o&&f.update(e);const s=c.update(e);o||f.update(s),n.set(oe(J,s),u+r)}return e.pending=ie(t,u),n}async function re(n,r,s,o){n.password=null;const c=(e=>{if(void 0===w){const t=new i((e=unescape(encodeURIComponent(e))).length);for(let n=0;n<t.length;n++)t[n]=e.charCodeAt(n);return t}return(new w).encode(e)})(s),f=await(async(e,t,n,r,s)=>{if(!Z)return I.importKey(t);try{return await q.importKey(\"raw\",t,n,!1,s)}catch(e){return Z=!1,I.importKey(t)}})(0,c,K,0,N),a=await(async(e,t,n)=>{if(!$)return I.B(t,e.salt,U.iterations,n);try{return await q.deriveBits(e,t,n)}catch(r){return $=!1,I.B(t,e.salt,U.iterations,n)}})(t.assign({salt:o},U),f,8*(2*T[r]+2)),l=new i(a),u=ce(J,ie(l,0,T[r])),h=ce(J,ie(l,T[r],2*T[r])),d=ie(l,2*T[r]);return t.assign(n,{keys:{key:u,$:h,passwordVerification:d},Y:new X(new Q(u),e.from(j)),Z:new Y(h)}),d}function se(e,t){let n=e;return e.length+t.length&&(n=new i(e.length+t.length),n.set(e,0),n.set(t,e.length)),n}function ie(e,t,n){return e.subarray(t,n)}function oe(e,t){return e.m(t)}function ce(e,t){return e.g(t)}class fe extends p{constructor({password:e,passwordVerification:n,checkPasswordOnly:r}){super({start(){t.assign(this,{password:e,passwordVerification:n}),we(this,e)},transform(e,t){const n=this;if(n.password){const t=le(n,e.subarray(0,12));if(n.password=null,t[11]!=n.passwordVerification)throw new s(V);e=e.subarray(12)}r?t.error(new s(R)):t.enqueue(le(n,e))}})}}class ae extends p{constructor({password:e,passwordVerification:n}){super({start(){t.assign(this,{password:e,passwordVerification:n}),we(this,e)},transform(e,t){const n=this;let r,s;if(n.password){n.password=null;const t=B(new i(12));t[11]=n.passwordVerification,r=new i(e.length+t.length),r.set(ue(n,t),0),s=12}else r=new i(e.length),s=0;r.set(ue(n,e),s),t.enqueue(r)}})}}function le(e,t){const n=new i(t.length);for(let r=0;r<t.length;r++)n[r]=de(e)^t[r],he(e,n[r]);return n}function ue(e,t){const n=new i(t.length);for(let r=0;r<t.length;r++)n[r]=de(e)^t[r],he(e,t[r]);return n}function we(e,n){const r=[305419896,591751049,878082192];t.assign(e,{keys:r,ee:new S(r[0]),te:new S(r[2])});for(let t=0;t<n.length;t++)he(e,n.charCodeAt(t))}function he(e,t){let[n,s,i]=e.keys;e.ee.append([t]),n=~e.ee.get(),s=ye(r.imul(ye(s+pe(n)),134775813)+1),e.te.append([s>>>24]),i=~e.te.get(),e.keys=[n,s,i]}function de(e){const t=2|e.keys[2];return pe(r.imul(t,1^t)>>>8)}function pe(e){return 255&e}function ye(e){return 4294967295&e}const me=\"deflate-raw\";class be extends p{constructor(e,{chunkSize:t,CompressionStream:n,CompressionStreamNative:r}){super({});const{compressed:s,encrypted:i,useCompressionStream:o,zipCrypto:c,signed:f,level:a}=e,u=this;let w,h,d=ke(super.readable);i&&!c||!f||(w=new z,d=ze(d,w)),s&&(d=Se(d,o,{level:a,chunkSize:t},r,n)),i&&(c?d=ze(d,new ae(e)):(h=new te(e),d=ze(d,h))),ve(u,d,(async()=>{let e;i&&!c&&(e=h.signature),i&&!c||!f||(e=new l(w.value.buffer).getUint32(0)),u.signature=e}))}}class ge extends p{constructor(e,{chunkSize:t,DecompressionStream:n,DecompressionStreamNative:r}){super({});const{zipCrypto:i,encrypted:o,signed:c,signature:f,compressed:a,useCompressionStream:u}=e;let w,h,d=ke(super.readable);o&&(i?d=ze(d,new fe(e)):(h=new ee(e),d=ze(d,h))),a&&(d=Se(d,u,{chunkSize:t},r,n)),o&&!i||!c||(w=new z,d=ze(d,w)),ve(this,d,(async()=>{if((!o||i)&&c){const e=new l(w.value.buffer);if(f!=e.getUint32(0,!1))throw new s(P)}}))}}function ke(e){return ze(e,new p({transform(e,t){e&&e.length&&t.enqueue(e)}}))}function ve(e,n,r){n=ze(n,new p({flush:r})),t.defineProperty(e,\"readable\",{get:()=>n})}function Se(e,t,n,r,s){try{e=ze(e,new(t&&r?r:s)(me,n))}catch(r){if(!t)throw r;e=ze(e,new s(me,n))}return e}function ze(e,t){return e.pipeThrough(t)}const Ce=\"data\";class xe extends p{constructor(e,n){super({});const r=this,{codecType:s}=e;let i;s.startsWith(\"deflate\")?i=be:s.startsWith(\"inflate\")&&(i=ge);let o=0;const c=new i(e,n),f=super.readable,a=new p({transform(e,t){e&&e.length&&(o+=e.length,t.enqueue(e))},flush(){const{signature:e}=c;t.assign(r,{signature:e,size:o})}});t.defineProperty(r,\"readable\",{get:()=>f.pipeThrough(c).pipeThrough(a)})}}const _e=new a,Ae=new a;let Ie=0;async function De(e){try{const{options:t,scripts:r,config:s}=e;r&&r.length&&importScripts.apply(void 0,r),self.initCodec&&self.initCodec(),s.CompressionStreamNative=self.CompressionStream,s.DecompressionStreamNative=self.DecompressionStream,self.Deflate&&(s.CompressionStream=new k(self.Deflate)),self.Inflate&&(s.DecompressionStream=new k(self.Inflate));const i={highWaterMark:1,size:()=>s.chunkSize},o=e.readable||new y({async pull(e){const t=new u((e=>_e.set(Ie,e)));Ve({type:\"pull\",messageId:Ie}),Ie=(Ie+1)%n.MAX_SAFE_INTEGER;const{value:r,done:s}=await t;e.enqueue(r),s&&e.close()}},i),c=e.writable||new m({async write(e){let t;const r=new u((e=>t=e));Ae.set(Ie,t),Ve({type:Ce,value:e,messageId:Ie}),Ie=(Ie+1)%n.MAX_SAFE_INTEGER,await r}},i),f=new xe(t,s);await o.pipeThrough(f).pipeTo(c,{preventClose:!0,preventAbort:!0});try{await c.close()}catch(e){}const{signature:a,size:l}=f;Ve({type:\"close\",result:{signature:a,size:l}})}catch(e){Pe(e)}}function Ve(e){let{value:t}=e;if(t)if(t.length)try{t=new i(t),e.value=t.buffer,d(e,[e.value])}catch(t){d(e)}else d(e);else d(e)}function Pe(e){const{message:t,stack:n,code:r,name:s}=e;d({error:{message:t,stack:n,code:r,name:s}})}addEventListener(\"message\",(({data:e})=>{const{type:t,messageId:n,value:r,done:s}=e;try{if(\"start\"==t&&De(e),t==Ce){const e=_e.get(n);_e.delete(n),e({value:new i(r),done:s})}if(\"ack\"==t){const e=Ae.get(n);Ae.delete(n),e()}}catch(e){Pe(e)}}));const Re=-2;function Be(t){return Ee(t.map((([t,n])=>new e(t).fill(n,0,t))))}function Ee(t){return t.reduce(((t,n)=>t.concat(e.isArray(n)?Ee(n):n)),[])}const Me=[0,1,2,3].concat(...Be([[2,4],[2,5],[4,6],[4,7],[8,8],[8,9],[16,10],[16,11],[32,12],[32,13],[64,14],[64,15],[2,0],[1,16],[1,17],[2,18],[2,19],[4,20],[4,21],[8,22],[8,23],[16,24],[16,25],[32,26],[32,27],[64,28],[64,29]]));function Ke(){const e=this;function t(e,t){let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1}e.ne=n=>{const s=e.re,i=e.ie.se,o=e.ie.oe;let c,f,a,l=-1;for(n.ce=0,n.fe=573,c=0;o>c;c++)0!==s[2*c]?(n.ae[++n.ce]=l=c,n.le[c]=0):s[2*c+1]=0;for(;2>n.ce;)a=n.ae[++n.ce]=2>l?++l:0,s[2*a]=1,n.le[a]=0,n.ue--,i&&(n.we-=i[2*a+1]);for(e.he=l,c=r.floor(n.ce/2);c>=1;c--)n.de(s,c);a=o;do{c=n.ae[1],n.ae[1]=n.ae[n.ce--],n.de(s,1),f=n.ae[1],n.ae[--n.fe]=c,n.ae[--n.fe]=f,s[2*a]=s[2*c]+s[2*f],n.le[a]=r.max(n.le[c],n.le[f])+1,s[2*c+1]=s[2*f+1]=a,n.ae[1]=a++,n.de(s,1)}while(n.ce>=2);n.ae[--n.fe]=n.ae[1],(t=>{const n=e.re,r=e.ie.se,s=e.ie.pe,i=e.ie.ye,o=e.ie.me;let c,f,a,l,u,w,h=0;for(l=0;15>=l;l++)t.be[l]=0;for(n[2*t.ae[t.fe]+1]=0,c=t.fe+1;573>c;c++)f=t.ae[c],l=n[2*n[2*f+1]+1]+1,l>o&&(l=o,h++),n[2*f+1]=l,f>e.he||(t.be[l]++,u=0,i>f||(u=s[f-i]),w=n[2*f],t.ue+=w*(l+u),r&&(t.we+=w*(r[2*f+1]+u)));if(0!==h){do{for(l=o-1;0===t.be[l];)l--;t.be[l]--,t.be[l+1]+=2,t.be[o]--,h-=2}while(h>0);for(l=o;0!==l;l--)for(f=t.be[l];0!==f;)a=t.ae[--c],a>e.he||(n[2*a+1]!=l&&(t.ue+=(l-n[2*a+1])*n[2*a],n[2*a+1]=l),f--)}})(n),((e,n,r)=>{const s=[];let i,o,c,f=0;for(i=1;15>=i;i++)s[i]=f=f+r[i-1]<<1;for(o=0;n>=o;o++)c=e[2*o+1],0!==c&&(e[2*o]=t(s[c]++,c))})(s,e.he,n.be)}}function Ue(e,t,n,r,s){const i=this;i.se=e,i.pe=t,i.ye=n,i.oe=r,i.me=s}Ke.ge=[0,1,2,3,4,5,6,7].concat(...Be([[2,8],[2,9],[2,10],[2,11],[4,12],[4,13],[4,14],[4,15],[8,16],[8,17],[8,18],[8,19],[16,20],[16,21],[16,22],[16,23],[32,24],[32,25],[32,26],[31,27],[1,28]])),Ke.ke=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],Ke.ve=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],Ke.Se=e=>256>e?Me[e]:Me[256+(e>>>7)],Ke.ze=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Ke.Ce=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],Ke.xe=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],Ke._e=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];const Ne=Be([[144,8],[112,9],[24,7],[8,8]]);Ue.Ae=Ee([12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,19,275,147,403,83,339,211,467,51,307,179,435,115,371,243,499,11,267,139,395,75,331,203,459,43,299,171,427,107,363,235,491,27,283,155,411,91,347,219,475,59,315,187,443,123,379,251,507,7,263,135,391,71,327,199,455,39,295,167,423,103,359,231,487,23,279,151,407,87,343,215,471,55,311,183,439,119,375,247,503,15,271,143,399,79,335,207,463,47,303,175,431,111,367,239,495,31,287,159,415,95,351,223,479,63,319,191,447,127,383,255,511,0,64,32,96,16,80,48,112,8,72,40,104,24,88,56,120,4,68,36,100,20,84,52,116,3,131,67,195,35,163,99,227].map(((e,t)=>[e,Ne[t]])));const Oe=Be([[30,5]]);function Te(e,t,n,r,s){const i=this;i.Ie=e,i.De=t,i.Ve=n,i.Pe=r,i.Re=s}Ue.Be=Ee([0,16,8,24,4,20,12,28,2,18,10,26,6,22,14,30,1,17,9,25,5,21,13,29,3,19,11,27,7,23].map(((e,t)=>[e,Oe[t]]))),Ue.Ee=new Ue(Ue.Ae,Ke.ze,257,286,15),Ue.Me=new Ue(Ue.Be,Ke.Ce,0,30,15),Ue.Ke=new Ue(null,Ke.xe,0,19,7);const We=[new Te(0,0,0,0,0),new Te(4,4,8,4,1),new Te(4,5,16,8,1),new Te(4,6,32,32,1),new Te(4,4,16,16,2),new Te(8,16,32,32,2),new Te(8,16,128,128,2),new Te(8,32,128,256,2),new Te(32,128,258,1024,2),new Te(32,258,258,4096,2)],je=[\"need dictionary\",\"stream end\",\"\",\"\",\"stream error\",\"data error\",\"\",\"buffer error\",\"\",\"\"],He=113,Le=666,Fe=262;function qe(e,t,n,r){const s=e[2*t],i=e[2*n];return i>s||s==i&&r[t]<=r[n]}function Ge(){const e=this;let t,n,s,c,f,a,l,u,w,h,d,p,y,m,b,g,k,v,S,z,C,x,_,A,I,D,V,P,R,B,E,M,K;const U=new Ke,N=new Ke,O=new Ke;let T,W,j,H,L,F;function q(){let t;for(t=0;286>t;t++)E[2*t]=0;for(t=0;30>t;t++)M[2*t]=0;for(t=0;19>t;t++)K[2*t]=0;E[512]=1,e.ue=e.we=0,W=j=0}function G(e,t){let n,r=-1,s=e[1],i=0,o=7,c=4;0===s&&(o=138,c=3),e[2*(t+1)+1]=65535;for(let f=0;t>=f;f++)n=s,s=e[2*(f+1)+1],++i<o&&n==s||(c>i?K[2*n]+=i:0!==n?(n!=r&&K[2*n]++,K[32]++):i>10?K[36]++:K[34]++,i=0,r=n,0===s?(o=138,c=3):n==s?(o=6,c=3):(o=7,c=4))}function J(t){e.Ue[e.pending++]=t}function Q(e){J(255&e),J(e>>>8&255)}function X(e,t){let n;const r=t;F>16-r?(n=e,L|=n<<F&65535,Q(L),L=n>>>16-F,F+=r-16):(L|=e<<F&65535,F+=r)}function Y(e,t){const n=2*e;X(65535&t[n],65535&t[n+1])}function Z(e,t){let n,r,s=-1,i=e[1],o=0,c=7,f=4;for(0===i&&(c=138,f=3),n=0;t>=n;n++)if(r=i,i=e[2*(n+1)+1],++o>=c||r!=i){if(f>o)do{Y(r,K)}while(0!=--o);else 0!==r?(r!=s&&(Y(r,K),o--),Y(16,K),X(o-3,2)):o>10?(Y(18,K),X(o-11,7)):(Y(17,K),X(o-3,3));o=0,s=r,0===i?(c=138,f=3):r==i?(c=6,f=3):(c=7,f=4)}}function $(){16==F?(Q(L),L=0,F=0):8>F||(J(255&L),L>>>=8,F-=8)}function ee(t,n){let s,i,o;if(e.Ne[W]=t,e.Oe[W]=255&n,W++,0===t?E[2*n]++:(j++,t--,E[2*(Ke.ge[n]+256+1)]++,M[2*Ke.Se(t)]++),0==(8191&W)&&V>2){for(s=8*W,i=C-k,o=0;30>o;o++)s+=M[2*o]*(5+Ke.Ce[o]);if(s>>>=3,j<r.floor(W/2)&&s<r.floor(i/2))return!0}return W==T-1}function te(t,n){let r,s,i,o,c=0;if(0!==W)do{r=e.Ne[c],s=e.Oe[c],c++,0===r?Y(s,t):(i=Ke.ge[s],Y(i+256+1,t),o=Ke.ze[i],0!==o&&(s-=Ke.ke[i],X(s,o)),r--,i=Ke.Se(r),Y(i,n),o=Ke.Ce[i],0!==o&&(r-=Ke.ve[i],X(r,o)))}while(W>c);Y(256,t),H=t[513]}function ne(){F>8?Q(L):F>0&&J(255&L),L=0,F=0}function re(t,n,r){X(0+(r?1:0),3),((t,n)=>{ne(),H=8,Q(n),Q(~n),e.Ue.set(u.subarray(t,t+n),e.pending),e.pending+=n})(t,n)}function se(n){((t,n,r)=>{let s,i,o=0;V>0?(U.ne(e),N.ne(e),o=(()=>{let t;for(G(E,U.he),G(M,N.he),O.ne(e),t=18;t>=3&&0===K[2*Ke._e[t]+1];t--);return e.ue+=14+3*(t+1),t})(),s=e.ue+3+7>>>3,i=e.we+3+7>>>3,i>s||(s=i)):s=i=n+5,n+4>s||-1==t?i==s?(X(2+(r?1:0),3),te(Ue.Ae,Ue.Be)):(X(4+(r?1:0),3),((e,t,n)=>{let r;for(X(e-257,5),X(t-1,5),X(n-4,4),r=0;n>r;r++)X(K[2*Ke._e[r]+1],3);Z(E,e-1),Z(M,t-1)})(U.he+1,N.he+1,o+1),te(E,M)):re(t,n,r),q(),r&&ne()})(0>k?-1:k,C-k,n),k=C,t.Te()}function ie(){let e,n,r,s;do{if(s=w-_-C,0===s&&0===C&&0===_)s=f;else if(-1==s)s--;else if(C>=f+f-Fe){u.set(u.subarray(f,f+f),0),x-=f,C-=f,k-=f,e=y,r=e;do{n=65535&d[--r],d[r]=f>n?0:n-f}while(0!=--e);e=f,r=e;do{n=65535&h[--r],h[r]=f>n?0:n-f}while(0!=--e);s+=f}if(0===t.We)return;e=t.je(u,C+_,s),_+=e,3>_||(p=255&u[C],p=(p<<g^255&u[C+1])&b)}while(Fe>_&&0!==t.We)}function oe(e){let t,n,r=I,s=C,i=A;const o=C>f-Fe?C-(f-Fe):0;let c=B;const a=l,w=C+258;let d=u[s+i-1],p=u[s+i];R>A||(r>>=2),c>_&&(c=_);do{if(t=e,u[t+i]==p&&u[t+i-1]==d&&u[t]==u[s]&&u[++t]==u[s+1]){s+=2,t++;do{}while(u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&w>s);if(n=258-(w-s),s=w-258,n>i){if(x=e,i=n,n>=c)break;d=u[s+i-1],p=u[s+i]}}}while((e=65535&h[e&a])>o&&0!=--r);return i>_?_:i}e.le=[],e.be=[],e.ae=[],E=[],M=[],K=[],e.de=(t,n)=>{const r=e.ae,s=r[n];let i=n<<1;for(;i<=e.ce&&(i<e.ce&&qe(t,r[i+1],r[i],e.le)&&i++,!qe(t,s,r[i],e.le));)r[n]=r[i],n=i,i<<=1;r[n]=s},e.He=(t,S,x,W,j,G)=>(W||(W=8),j||(j=8),G||(G=0),t.Le=null,-1==S&&(S=6),1>j||j>9||8!=W||9>x||x>15||0>S||S>9||0>G||G>2?Re:(t.Fe=e,a=x,f=1<<a,l=f-1,m=j+7,y=1<<m,b=y-1,g=r.floor((m+3-1)/3),u=new i(2*f),h=[],d=[],T=1<<j+6,e.Ue=new i(4*T),s=4*T,e.Ne=new o(T),e.Oe=new i(T),V=S,P=G,(t=>(t.qe=t.Ge=0,t.Le=null,e.pending=0,e.Je=0,n=He,c=0,U.re=E,U.ie=Ue.Ee,N.re=M,N.ie=Ue.Me,O.re=K,O.ie=Ue.Ke,L=0,F=0,H=8,q(),(()=>{w=2*f,d[y-1]=0;for(let e=0;y-1>e;e++)d[e]=0;D=We[V].De,R=We[V].Ie,B=We[V].Ve,I=We[V].Pe,C=0,k=0,_=0,v=A=2,z=0,p=0})(),0))(t))),e.Qe=()=>42!=n&&n!=He&&n!=Le?Re:(e.Oe=null,e.Ne=null,e.Ue=null,d=null,h=null,u=null,e.Fe=null,n==He?-3:0),e.Xe=(e,t,n)=>{let r=0;return-1==t&&(t=6),0>t||t>9||0>n||n>2?Re:(We[V].Re!=We[t].Re&&0!==e.qe&&(r=e.Ye(1)),V!=t&&(V=t,D=We[V].De,R=We[V].Ie,B=We[V].Ve,I=We[V].Pe),P=n,r)},e.Ze=(e,t,r)=>{let s,i=r,o=0;if(!t||42!=n)return Re;if(3>i)return 0;for(i>f-Fe&&(i=f-Fe,o=r-i),u.set(t.subarray(o,o+i),0),C=i,k=i,p=255&u[0],p=(p<<g^255&u[1])&b,s=0;i-3>=s;s++)p=(p<<g^255&u[s+2])&b,h[s&l]=d[p],d[p]=s;return 0},e.Ye=(r,i)=>{let o,w,m,I,R;if(i>4||0>i)return Re;if(!r.$e||!r.et&&0!==r.We||n==Le&&4!=i)return r.Le=je[4],Re;if(0===r.tt)return r.Le=je[7],-5;var B;if(t=r,I=c,c=i,42==n&&(w=8+(a-8<<4)<<8,m=(V-1&255)>>1,m>3&&(m=3),w|=m<<6,0!==C&&(w|=32),w+=31-w%31,n=He,J((B=w)>>8&255),J(255&B)),0!==e.pending){if(t.Te(),0===t.tt)return c=-1,0}else if(0===t.We&&I>=i&&4!=i)return t.Le=je[7],-5;if(n==Le&&0!==t.We)return r.Le=je[7],-5;if(0!==t.We||0!==_||0!=i&&n!=Le){switch(R=-1,We[V].Re){case 0:R=(e=>{let n,r=65535;for(r>s-5&&(r=s-5);;){if(1>=_){if(ie(),0===_&&0==e)return 0;if(0===_)break}if(C+=_,_=0,n=k+r,(0===C||C>=n)&&(_=C-n,C=n,se(!1),0===t.tt))return 0;if(C-k>=f-Fe&&(se(!1),0===t.tt))return 0}return se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i);break;case 1:R=(e=>{let n,r=0;for(;;){if(Fe>_){if(ie(),Fe>_&&0==e)return 0;if(0===_)break}if(3>_||(p=(p<<g^255&u[C+2])&b,r=65535&d[p],h[C&l]=d[p],d[p]=C),0===r||(C-r&65535)>f-Fe||2!=P&&(v=oe(r)),3>v)n=ee(0,255&u[C]),_--,C++;else if(n=ee(C-x,v-3),_-=v,v>D||3>_)C+=v,v=0,p=255&u[C],p=(p<<g^255&u[C+1])&b;else{v--;do{C++,p=(p<<g^255&u[C+2])&b,r=65535&d[p],h[C&l]=d[p],d[p]=C}while(0!=--v);C++}if(n&&(se(!1),0===t.tt))return 0}return se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i);break;case 2:R=(e=>{let n,r,s=0;for(;;){if(Fe>_){if(ie(),Fe>_&&0==e)return 0;if(0===_)break}if(3>_||(p=(p<<g^255&u[C+2])&b,s=65535&d[p],h[C&l]=d[p],d[p]=C),A=v,S=x,v=2,0!==s&&D>A&&f-Fe>=(C-s&65535)&&(2!=P&&(v=oe(s)),5>=v&&(1==P||3==v&&C-x>4096)&&(v=2)),3>A||v>A)if(0!==z){if(n=ee(0,255&u[C-1]),n&&se(!1),C++,_--,0===t.tt)return 0}else z=1,C++,_--;else{r=C+_-3,n=ee(C-1-S,A-3),_-=A-1,A-=2;do{++C>r||(p=(p<<g^255&u[C+2])&b,s=65535&d[p],h[C&l]=d[p],d[p]=C)}while(0!=--A);if(z=0,v=2,C++,n&&(se(!1),0===t.tt))return 0}}return 0!==z&&(n=ee(0,255&u[C-1]),z=0),se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i)}if(2!=R&&3!=R||(n=Le),0==R||2==R)return 0===t.tt&&(c=-1),0;if(1==R){if(1==i)X(2,3),Y(256,Ue.Ae),$(),9>1+H+10-F&&(X(2,3),Y(256,Ue.Ae),$()),H=7;else if(re(0,0,!1),3==i)for(o=0;y>o;o++)d[o]=0;if(t.Te(),0===t.tt)return c=-1,0}}return 4!=i?0:1}}function Je(){const e=this;e.nt=0,e.rt=0,e.We=0,e.qe=0,e.tt=0,e.Ge=0}function Qe(e){const t=new Je,n=(o=e&&e.chunkSize?e.chunkSize:65536)+5*(r.floor(o/16383)+1);var o;const c=new i(n);let f=e?e.level:-1;void 0===f&&(f=-1),t.He(f),t.$e=c,this.append=(e,r)=>{let o,f,a=0,l=0,u=0;const w=[];if(e.length){t.nt=0,t.et=e,t.We=e.length;do{if(t.rt=0,t.tt=n,o=t.Ye(0),0!=o)throw new s(\"deflating: \"+t.Le);t.rt&&(t.rt==n?w.push(new i(c)):w.push(c.slice(0,t.rt))),u+=t.rt,r&&t.nt>0&&t.nt!=a&&(r(t.nt),a=t.nt)}while(t.We>0||0===t.tt);return w.length>1?(f=new i(u),w.forEach((e=>{f.set(e,l),l+=e.length}))):f=w[0]||new i,f}},this.flush=()=>{let e,r,o=0,f=0;const a=[];do{if(t.rt=0,t.tt=n,e=t.Ye(4),1!=e&&0!=e)throw new s(\"deflating: \"+t.Le);n-t.tt>0&&a.push(c.slice(0,t.rt)),f+=t.rt}while(t.We>0||0===t.tt);return t.Qe(),r=new i(f),a.forEach((e=>{r.set(e,o),o+=e.length})),r}}Je.prototype={He(e,t){const n=this;return n.Fe=new Ge,t||(t=15),n.Fe.He(n,e,t)},Ye(e){const t=this;return t.Fe?t.Fe.Ye(t,e):Re},Qe(){const e=this;if(!e.Fe)return Re;const t=e.Fe.Qe();return e.Fe=null,t},Xe(e,t){const n=this;return n.Fe?n.Fe.Xe(n,e,t):Re},Ze(e,t){const n=this;return n.Fe?n.Fe.Ze(n,e,t):Re},je(e,t,n){const r=this;let s=r.We;return s>n&&(s=n),0===s?0:(r.We-=s,e.set(r.et.subarray(r.nt,r.nt+s),t),r.nt+=s,r.qe+=s,s)},Te(){const e=this;let t=e.Fe.pending;t>e.tt&&(t=e.tt),0!==t&&(e.$e.set(e.Fe.Ue.subarray(e.Fe.Je,e.Fe.Je+t),e.rt),e.rt+=t,e.Fe.Je+=t,e.Ge+=t,e.tt-=t,e.Fe.pending-=t,0===e.Fe.pending&&(e.Fe.Je=0))}};const Xe=-2,Ye=-3,Ze=-5,$e=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],et=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],tt=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],nt=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],rt=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],st=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],it=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];function ot(){let e,t,n,r,s,i;function o(e,t,o,c,f,a,l,u,w,h,d){let p,y,m,b,g,k,v,S,z,C,x,_,A,I,D;C=0,g=o;do{n[e[t+C]]++,C++,g--}while(0!==g);if(n[0]==o)return l[0]=-1,u[0]=0,0;for(S=u[0],k=1;15>=k&&0===n[k];k++);for(v=k,k>S&&(S=k),g=15;0!==g&&0===n[g];g--);for(m=g,S>g&&(S=g),u[0]=S,I=1<<k;g>k;k++,I<<=1)if(0>(I-=n[k]))return Ye;if(0>(I-=n[g]))return Ye;for(n[g]+=I,i[1]=k=0,C=1,A=2;0!=--g;)i[A]=k+=n[C],A++,C++;g=0,C=0;do{0!==(k=e[t+C])&&(d[i[k]++]=g),C++}while(++g<o);for(o=i[m],i[0]=g=0,C=0,b=-1,_=-S,s[0]=0,x=0,D=0;m>=v;v++)for(p=n[v];0!=p--;){for(;v>_+S;){if(b++,_+=S,D=m-_,D=D>S?S:D,(y=1<<(k=v-_))>p+1&&(y-=p+1,A=v,D>k))for(;++k<D&&(y<<=1)>n[++A];)y-=n[A];if(D=1<<k,h[0]+D>1440)return Ye;s[b]=x=h[0],h[0]+=D,0!==b?(i[b]=g,r[0]=k,r[1]=S,k=g>>>_-S,r[2]=x-s[b-1]-k,w.set(r,3*(s[b-1]+k))):l[0]=x}for(r[1]=v-_,o>C?d[C]<c?(r[0]=256>d[C]?0:96,r[2]=d[C++]):(r[0]=a[d[C]-c]+16+64,r[2]=f[d[C++]-c]):r[0]=192,y=1<<v-_,k=g>>>_;D>k;k+=y)w.set(r,3*(x+k));for(k=1<<v-1;0!=(g&k);k>>>=1)g^=k;for(g^=k,z=(1<<_)-1;(g&z)!=i[b];)b--,_-=S,z=(1<<_)-1}return 0!==I&&1!=m?Ze:0}function c(o){let c;for(e||(e=[],t=[],n=new f(16),r=[],s=new f(15),i=new f(16)),t.length<o&&(t=[]),c=0;o>c;c++)t[c]=0;for(c=0;16>c;c++)n[c]=0;for(c=0;3>c;c++)r[c]=0;s.set(n.subarray(0,15),0),i.set(n.subarray(0,16),0)}this.st=(n,r,s,i,f)=>{let a;return c(19),e[0]=0,a=o(n,0,19,19,null,null,s,r,i,e,t),a==Ye?f.Le=\"oversubscribed dynamic bit lengths tree\":a!=Ze&&0!==r[0]||(f.Le=\"incomplete dynamic bit lengths tree\",a=Ye),a},this.it=(n,r,s,i,f,a,l,u,w)=>{let h;return c(288),e[0]=0,h=o(s,0,n,257,nt,rt,a,i,u,e,t),0!=h||0===i[0]?(h==Ye?w.Le=\"oversubscribed literal/length tree\":-4!=h&&(w.Le=\"incomplete literal/length tree\",h=Ye),h):(c(288),h=o(s,n,r,0,st,it,l,f,u,e,t),0!=h||0===f[0]&&n>257?(h==Ye?w.Le=\"oversubscribed distance tree\":h==Ze?(w.Le=\"incomplete distance tree\",h=Ye):-4!=h&&(w.Le=\"empty distance tree with lengths\",h=Ye),h):0)}}function ct(){const e=this;let t,n,r,s,i=0,o=0,c=0,f=0,a=0,l=0,u=0,w=0,h=0,d=0;function p(e,t,n,r,s,i,o,c){let f,a,l,u,w,h,d,p,y,m,b,g,k,v,S,z;d=c.nt,p=c.We,w=o.ot,h=o.ct,y=o.write,m=y<o.read?o.read-y-1:o.end-y,b=$e[e],g=$e[t];do{for(;20>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;if(f=w&b,a=n,l=r,z=3*(l+f),0!==(u=a[z]))for(;;){if(w>>=a[z+1],h-=a[z+1],0!=(16&u)){for(u&=15,k=a[z+2]+(w&$e[u]),w>>=u,h-=u;15>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;for(f=w&g,a=s,l=i,z=3*(l+f),u=a[z];;){if(w>>=a[z+1],h-=a[z+1],0!=(16&u)){for(u&=15;u>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;if(v=a[z+2]+(w&$e[u]),w>>=u,h-=u,m-=k,v>y){S=y-v;do{S+=o.end}while(0>S);if(u=o.end-S,k>u){if(k-=u,y-S>0&&u>y-S)do{o.lt[y++]=o.lt[S++]}while(0!=--u);else o.lt.set(o.lt.subarray(S,S+u),y),y+=u,S+=u,u=0;S=0}}else S=y-v,y-S>0&&2>y-S?(o.lt[y++]=o.lt[S++],o.lt[y++]=o.lt[S++],k-=2):(o.lt.set(o.lt.subarray(S,S+2),y),y+=2,S+=2,k-=2);if(y-S>0&&k>y-S)do{o.lt[y++]=o.lt[S++]}while(0!=--k);else o.lt.set(o.lt.subarray(S,S+k),y),y+=k,S+=k,k=0;break}if(0!=(64&u))return c.Le=\"invalid distance code\",k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,Ye;f+=a[z+2],f+=w&$e[u],z=3*(l+f),u=a[z]}break}if(0!=(64&u))return 0!=(32&u)?(k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,1):(c.Le=\"invalid literal/length code\",k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,Ye);if(f+=a[z+2],f+=w&$e[u],z=3*(l+f),0===(u=a[z])){w>>=a[z+1],h-=a[z+1],o.lt[y++]=a[z+2],m--;break}}else w>>=a[z+1],h-=a[z+1],o.lt[y++]=a[z+2],m--}while(m>=258&&p>=10);return k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,0}e.init=(e,i,o,c,f,a)=>{t=0,u=e,w=i,r=o,h=c,s=f,d=a,n=null},e.ut=(e,y,m)=>{let b,g,k,v,S,z,C,x=0,_=0,A=0;for(A=y.nt,v=y.We,x=e.ot,_=e.ct,S=e.write,z=S<e.read?e.read-S-1:e.end-S;;)switch(t){case 0:if(z>=258&&v>=10&&(e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,m=p(u,w,r,h,s,d,e,y),A=y.nt,v=y.We,x=e.ot,_=e.ct,S=e.write,z=S<e.read?e.read-S-1:e.end-S,0!=m)){t=1==m?7:9;break}c=u,n=r,o=h,t=1;case 1:for(b=c;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}if(g=3*(o+(x&$e[b])),x>>>=n[g+1],_-=n[g+1],k=n[g],0===k){f=n[g+2],t=6;break}if(0!=(16&k)){a=15&k,i=n[g+2],t=2;break}if(0==(64&k)){c=k,o=g/3+n[g+2];break}if(0!=(32&k)){t=7;break}return t=9,y.Le=\"invalid literal/length code\",m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 2:for(b=a;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}i+=x&$e[b],x>>=b,_-=b,c=w,n=s,o=d,t=3;case 3:for(b=c;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}if(g=3*(o+(x&$e[b])),x>>=n[g+1],_-=n[g+1],k=n[g],0!=(16&k)){a=15&k,l=n[g+2],t=4;break}if(0==(64&k)){c=k,o=g/3+n[g+2];break}return t=9,y.Le=\"invalid distance code\",m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 4:for(b=a;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}l+=x&$e[b],x>>=b,_-=b,t=5;case 5:for(C=S-l;0>C;)C+=e.end;for(;0!==i;){if(0===z&&(S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z&&(e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z)))return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);e.lt[S++]=e.lt[C++],z--,C==e.end&&(C=0),i--}t=0;break;case 6:if(0===z&&(S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z&&(e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z)))return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,e.lt[S++]=f,z--,t=0;break;case 7:if(_>7&&(_-=8,v++,A--),e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,e.read!=e.write)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);t=8;case 8:return m=1,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 9:return m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);default:return m=Xe,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m)}},e.ht=()=>{}}ot.dt=(e,t,n,r)=>(e[0]=9,t[0]=5,n[0]=et,r[0]=tt,0);const ft=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];function at(e,t){const n=this;let r,s=0,o=0,c=0,a=0;const l=[0],u=[0],w=new ct;let h=0,d=new f(4320);const p=new ot;n.ct=0,n.ot=0,n.lt=new i(t),n.end=t,n.read=0,n.write=0,n.reset=(e,t)=>{t&&(t[0]=0),6==s&&w.ht(e),s=0,n.ct=0,n.ot=0,n.read=n.write=0},n.reset(e,null),n.wt=(e,t)=>{let r,s,i;return s=e.rt,i=n.read,r=(i>n.write?n.end:n.write)-i,r>e.tt&&(r=e.tt),0!==r&&t==Ze&&(t=0),e.tt-=r,e.Ge+=r,e.$e.set(n.lt.subarray(i,i+r),s),s+=r,i+=r,i==n.end&&(i=0,n.write==n.end&&(n.write=0),r=n.write-i,r>e.tt&&(r=e.tt),0!==r&&t==Ze&&(t=0),e.tt-=r,e.Ge+=r,e.$e.set(n.lt.subarray(i,i+r),s),s+=r,i+=r),e.rt=s,n.read=i,t},n.ut=(e,t)=>{let i,f,y,m,b,g,k,v;for(m=e.nt,b=e.We,f=n.ot,y=n.ct,g=n.write,k=g<n.read?n.read-g-1:n.end-g;;){let S,z,C,x,_,A,I,D;switch(s){case 0:for(;3>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}switch(i=7&f,h=1&i,i>>>1){case 0:f>>>=3,y-=3,i=7&y,f>>>=i,y-=i,s=1;break;case 1:S=[],z=[],C=[[]],x=[[]],ot.dt(S,z,C,x),w.init(S[0],z[0],C[0],0,x[0],0),f>>>=3,y-=3,s=6;break;case 2:f>>>=3,y-=3,s=3;break;case 3:return f>>>=3,y-=3,s=9,e.Le=\"invalid block type\",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t)}break;case 1:for(;32>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if((~f>>>16&65535)!=(65535&f))return s=9,e.Le=\"invalid stored block lengths\",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);o=65535&f,f=y=0,s=0!==o?2:0!==h?7:0;break;case 2:if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(0===k&&(g==n.end&&0!==n.read&&(g=0,k=g<n.read?n.read-g-1:n.end-g),0===k&&(n.write=g,t=n.wt(e,t),g=n.write,k=g<n.read?n.read-g-1:n.end-g,g==n.end&&0!==n.read&&(g=0,k=g<n.read?n.read-g-1:n.end-g),0===k)))return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(t=0,i=o,i>b&&(i=b),i>k&&(i=k),n.lt.set(e.je(m,i),g),m+=i,b-=i,g+=i,k-=i,0!=(o-=i))break;s=0!==h?7:0;break;case 3:for(;14>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(c=i=16383&f,(31&i)>29||(i>>5&31)>29)return s=9,e.Le=\"too many length or distance symbols\",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(i=258+(31&i)+(i>>5&31),!r||r.length<i)r=[];else for(v=0;i>v;v++)r[v]=0;f>>>=14,y-=14,a=0,s=4;case 4:for(;4+(c>>>10)>a;){for(;3>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}r[ft[a++]]=7&f,f>>>=3,y-=3}for(;19>a;)r[ft[a++]]=0;if(l[0]=7,i=p.st(r,l,u,d,e),0!=i)return(t=i)==Ye&&(r=null,s=9),n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);a=0,s=5;case 5:for(;i=c,258+(31&i)+(i>>5&31)>a;){let o,w;for(i=l[0];i>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(i=d[3*(u[0]+(f&$e[i]))+1],w=d[3*(u[0]+(f&$e[i]))+2],16>w)f>>>=i,y-=i,r[a++]=w;else{for(v=18==w?7:w-14,o=18==w?11:3;i+v>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(f>>>=i,y-=i,o+=f&$e[v],f>>>=v,y-=v,v=a,i=c,v+o>258+(31&i)+(i>>5&31)||16==w&&1>v)return r=null,s=9,e.Le=\"invalid bit length repeat\",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);w=16==w?r[v-1]:0;do{r[v++]=w}while(0!=--o);a=v}}if(u[0]=-1,_=[],A=[],I=[],D=[],_[0]=9,A[0]=6,i=c,i=p.it(257+(31&i),1+(i>>5&31),r,_,A,I,D,d,e),0!=i)return i==Ye&&(r=null,s=9),t=i,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);w.init(_[0],A[0],d,I[0],d,D[0]),s=6;case 6:if(n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,1!=(t=w.ut(n,e,t)))return n.wt(e,t);if(t=0,w.ht(e),m=e.nt,b=e.We,f=n.ot,y=n.ct,g=n.write,k=g<n.read?n.read-g-1:n.end-g,0===h){s=0;break}s=7;case 7:if(n.write=g,t=n.wt(e,t),g=n.write,k=g<n.read?n.read-g-1:n.end-g,n.read!=n.write)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);s=8;case 8:return t=1,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);case 9:return t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);default:return t=Xe,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t)}}},n.ht=e=>{n.reset(e,null),n.lt=null,d=null},n.yt=(e,t,r)=>{n.lt.set(e.subarray(t,t+r),0),n.read=n.write=r},n.bt=()=>1==s?1:0}const lt=13,ut=[0,0,255,255];function wt(){const e=this;function t(e){return e&&e.gt?(e.qe=e.Ge=0,e.Le=null,e.gt.mode=7,e.gt.kt.reset(e,null),0):Xe}e.mode=0,e.method=0,e.vt=[0],e.St=0,e.marker=0,e.zt=0,e.Ct=t=>(e.kt&&e.kt.ht(t),e.kt=null,0),e.xt=(n,r)=>(n.Le=null,e.kt=null,8>r||r>15?(e.Ct(n),Xe):(e.zt=r,n.gt.kt=new at(n,1<<r),t(n),0)),e._t=(e,t)=>{let n,r;if(!e||!e.gt||!e.et)return Xe;const s=e.gt;for(t=4==t?Ze:0,n=Ze;;)switch(s.mode){case 0:if(0===e.We)return n;if(n=t,e.We--,e.qe++,8!=(15&(s.method=e.ft(e.nt++)))){s.mode=lt,e.Le=\"unknown compression method\",s.marker=5;break}if(8+(s.method>>4)>s.zt){s.mode=lt,e.Le=\"invalid win size\",s.marker=5;break}s.mode=1;case 1:if(0===e.We)return n;if(n=t,e.We--,e.qe++,r=255&e.ft(e.nt++),((s.method<<8)+r)%31!=0){s.mode=lt,e.Le=\"incorrect header check\",s.marker=5;break}if(0==(32&r)){s.mode=7;break}s.mode=2;case 2:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St=(255&e.ft(e.nt++))<<24&4278190080,s.mode=3;case 3:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St+=(255&e.ft(e.nt++))<<16&16711680,s.mode=4;case 4:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St+=(255&e.ft(e.nt++))<<8&65280,s.mode=5;case 5:return 0===e.We?n:(n=t,e.We--,e.qe++,s.St+=255&e.ft(e.nt++),s.mode=6,2);case 6:return s.mode=lt,e.Le=\"need dictionary\",s.marker=0,Xe;case 7:if(n=s.kt.ut(e,n),n==Ye){s.mode=lt,s.marker=0;break}if(0==n&&(n=t),1!=n)return n;n=t,s.kt.reset(e,s.vt),s.mode=12;case 12:return e.We=0,1;case lt:return Ye;default:return Xe}},e.At=(e,t,n)=>{let r=0,s=n;if(!e||!e.gt||6!=e.gt.mode)return Xe;const i=e.gt;return s<1<<i.zt||(s=(1<<i.zt)-1,r=n-s),i.kt.yt(t,r,s),i.mode=7,0},e.It=e=>{let n,r,s,i,o;if(!e||!e.gt)return Xe;const c=e.gt;if(c.mode!=lt&&(c.mode=lt,c.marker=0),0===(n=e.We))return Ze;for(r=e.nt,s=c.marker;0!==n&&4>s;)e.ft(r)==ut[s]?s++:s=0!==e.ft(r)?0:4-s,r++,n--;return e.qe+=r-e.nt,e.nt=r,e.We=n,c.marker=s,4!=s?Ye:(i=e.qe,o=e.Ge,t(e),e.qe=i,e.Ge=o,c.mode=7,0)},e.Dt=e=>e&&e.gt&&e.gt.kt?e.gt.kt.bt():Xe}function ht(){}function dt(e){const t=new ht,n=e&&e.chunkSize?r.floor(2*e.chunkSize):131072,o=new i(n);let c=!1;t.xt(),t.$e=o,this.append=(e,r)=>{const f=[];let a,l,u=0,w=0,h=0;if(0!==e.length){t.nt=0,t.et=e,t.We=e.length;do{if(t.rt=0,t.tt=n,0!==t.We||c||(t.nt=0,c=!0),a=t._t(0),c&&a===Ze){if(0!==t.We)throw new s(\"inflating: bad input\")}else if(0!==a&&1!==a)throw new s(\"inflating: \"+t.Le);if((c||1===a)&&t.We===e.length)throw new s(\"inflating: bad input\");t.rt&&(t.rt===n?f.push(new i(o)):f.push(o.slice(0,t.rt))),h+=t.rt,r&&t.nt>0&&t.nt!=u&&(r(t.nt),u=t.nt)}while(t.We>0||0===t.tt);return f.length>1?(l=new i(h),f.forEach((e=>{l.set(e,w),w+=e.length}))):l=f[0]||new i,l}},this.flush=()=>{t.Ct()}}ht.prototype={xt(e){const t=this;return t.gt=new wt,e||(e=15),t.gt.xt(t,e)},_t(e){const t=this;return t.gt?t.gt._t(t,e):Xe},Ct(){const e=this;if(!e.gt)return Xe;const t=e.gt.Ct(e);return e.gt=null,t},It(){const e=this;return e.gt?e.gt.It(e):Xe},At(e,t){const n=this;return n.gt?n.gt.At(n,e,t):Xe},ft(e){return this.et[e]},je(e,t){return this.et.subarray(e,e+t)}},self.initCodec=()=>{self.Deflate=Qe,self.Inflate=dt};\\n'],{type:\"text/javascript\"}));e({workerScripts:{inflate:[t],deflate:[t]}});}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tfunction getMimeType() {\r\n\t\treturn \"application/octet-stream\";\r\n\t}\r\n\r\n\tfunction initShimAsyncCodec(library, options = {}, registerDataHandler) {\r\n\t\treturn {\r\n\t\t\tDeflate: createCodecClass(library.Deflate, options.deflate, registerDataHandler),\r\n\t\t\tInflate: createCodecClass(library.Inflate, options.inflate, registerDataHandler)\r\n\t\t};\r\n\t}\r\n\r\n\tfunction createCodecClass(constructor, constructorOptions, registerDataHandler) {\r\n\t\treturn class {\r\n\r\n\t\t\tconstructor(options) {\r\n\t\t\t\tconst codecAdapter = this;\r\n\t\t\t\tconst onData = data => {\r\n\t\t\t\t\tif (codecAdapter.pendingData) {\r\n\t\t\t\t\t\tconst previousPendingData = codecAdapter.pendingData;\r\n\t\t\t\t\t\tcodecAdapter.pendingData = new Uint8Array(previousPendingData.length + data.length);\r\n\t\t\t\t\t\tconst { pendingData } = codecAdapter;\r\n\t\t\t\t\t\tpendingData.set(previousPendingData, 0);\r\n\t\t\t\t\t\tpendingData.set(data, previousPendingData.length);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcodecAdapter.pendingData = new Uint8Array(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tif (Object.hasOwn(options, \"level\") && options.level === undefined) {\r\n\t\t\t\t\tdelete options.level;\r\n\t\t\t\t}\r\n\t\t\t\tcodecAdapter.codec = new constructor(Object.assign({}, constructorOptions, options));\r\n\t\t\t\tregisterDataHandler(codecAdapter.codec, onData);\r\n\t\t\t}\r\n\t\t\tappend(data) {\r\n\t\t\t\tthis.codec.push(data);\r\n\t\t\t\treturn getResponse(this);\r\n\t\t\t}\r\n\t\t\tflush() {\r\n\t\t\t\tthis.codec.push(new Uint8Array(), true);\r\n\t\t\t\treturn getResponse(this);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction getResponse(codec) {\r\n\t\t\tif (codec.pendingData) {\r\n\t\t\t\tconst output = codec.pendingData;\r\n\t\t\t\tcodec.pendingData = null;\r\n\t\t\t\treturn output;\r\n\t\t\t} else {\r\n\t\t\t\treturn new Uint8Array();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst table = [];\r\n\tfor (let i = 0; i < 256; i++) {\r\n\t\tlet t = i;\r\n\t\tfor (let j = 0; j < 8; j++) {\r\n\t\t\tif (t & 1) {\r\n\t\t\t\tt = (t >>> 1) ^ 0xEDB88320;\r\n\t\t\t} else {\r\n\t\t\t\tt = t >>> 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttable[i] = t;\r\n\t}\r\n\r\n\tclass Crc32 {\r\n\r\n\t\tconstructor(crc) {\r\n\t\t\tthis.crc = crc || -1;\r\n\t\t}\r\n\r\n\t\tappend(data) {\r\n\t\t\tlet crc = this.crc | 0;\r\n\t\t\tfor (let offset = 0, length = data.length | 0; offset < length; offset++) {\r\n\t\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xFF];\r\n\t\t\t}\r\n\t\t\tthis.crc = crc;\r\n\t\t}\r\n\r\n\t\tget() {\r\n\t\t\treturn ~this.crc;\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tclass Crc32Stream extends TransformStream {\r\n\r\n\t\tconstructor() {\r\n\t\t\tlet stream;\r\n\t\t\tconst crc32 = new Crc32();\r\n\t\t\tsuper({\r\n\t\t\t\ttransform(chunk, controller) {\r\n\t\t\t\t\tcrc32.append(chunk);\r\n\t\t\t\t\tcontroller.enqueue(chunk);\r\n\t\t\t\t},\r\n\t\t\t\tflush() {\r\n\t\t\t\t\tconst value = new Uint8Array(4);\r\n\t\t\t\t\tconst dataView = new DataView(value.buffer);\r\n\t\t\t\t\tdataView.setUint32(0, crc32.get());\r\n\t\t\t\t\tstream.value = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tstream = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tfunction encodeText(value) {\r\n\t\tif (typeof TextEncoder == \"undefined\") {\r\n\t\t\tvalue = unescape(encodeURIComponent(value));\r\n\t\t\tconst result = new Uint8Array(value.length);\r\n\t\t\tfor (let i = 0; i < result.length; i++) {\r\n\t\t\t\tresult[i] = value.charCodeAt(i);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t} else {\r\n\t\t\treturn new TextEncoder().encode(value);\r\n\t\t}\r\n\t}\r\n\r\n\t// Derived from https://github.com/xqdoo00o/jszip/blob/master/lib/sjcl.js and https://github.com/bitwiseshiftleft/sjcl\r\n\r\n\t// deno-lint-ignore-file no-this-alias\r\n\r\n\t/*\r\n\t * SJCL is open. You can use, modify and redistribute it under a BSD\r\n\t * license or under the GNU GPL, version 2.0.\r\n\t */\r\n\r\n\t/** @fileOverview Javascript cryptography implementation.\r\n\t *\r\n\t * Crush to remove comments, shorten variable names and\r\n\t * generally reduce transmission size.\r\n\t *\r\n\t * @author Emily Stark\r\n\t * @author Mike Hamburg\r\n\t * @author Dan Boneh\r\n\t */\r\n\r\n\t/*jslint indent: 2, bitwise: false, nomen: false, plusplus: false, white: false, regexp: false */\r\n\r\n\t/** @fileOverview Arrays of bits, encoded as arrays of Numbers.\r\n\t *\r\n\t * @author Emily Stark\r\n\t * @author Mike Hamburg\r\n\t * @author Dan Boneh\r\n\t */\r\n\r\n\t/**\r\n\t * Arrays of bits, encoded as arrays of Numbers.\r\n\t * @namespace\r\n\t * @description\r\n\t * <p>\r\n\t * These objects are the currency accepted by SJCL's crypto functions.\r\n\t * </p>\r\n\t *\r\n\t * <p>\r\n\t * Most of our crypto primitives operate on arrays of 4-byte words internally,\r\n\t * but many of them can take arguments that are not a multiple of 4 bytes.\r\n\t * This library encodes arrays of bits (whose size need not be a multiple of 8\r\n\t * bits) as arrays of 32-bit words.  The bits are packed, big-endian, into an\r\n\t * array of words, 32 bits at a time.  Since the words are double-precision\r\n\t * floating point numbers, they fit some extra data.  We use this (in a private,\r\n\t * possibly-changing manner) to encode the number of bits actually  present\r\n\t * in the last word of the array.\r\n\t * </p>\r\n\t *\r\n\t * <p>\r\n\t * Because bitwise ops clear this out-of-band data, these arrays can be passed\r\n\t * to ciphers like AES which want arrays of words.\r\n\t * </p>\r\n\t */\r\n\tconst bitArray = {\r\n\t\t/**\r\n\t\t * Concatenate two bit arrays.\r\n\t\t * @param {bitArray} a1 The first array.\r\n\t\t * @param {bitArray} a2 The second array.\r\n\t\t * @return {bitArray} The concatenation of a1 and a2.\r\n\t\t */\r\n\t\tconcat(a1, a2) {\r\n\t\t\tif (a1.length === 0 || a2.length === 0) {\r\n\t\t\t\treturn a1.concat(a2);\r\n\t\t\t}\r\n\r\n\t\t\tconst last = a1[a1.length - 1], shift = bitArray.getPartial(last);\r\n\t\t\tif (shift === 32) {\r\n\t\t\t\treturn a1.concat(a2);\r\n\t\t\t} else {\r\n\t\t\t\treturn bitArray._shiftRight(a2, shift, last | 0, a1.slice(0, a1.length - 1));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Find the length of an array of bits.\r\n\t\t * @param {bitArray} a The array.\r\n\t\t * @return {Number} The length of a, in bits.\r\n\t\t */\r\n\t\tbitLength(a) {\r\n\t\t\tconst l = a.length;\r\n\t\t\tif (l === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tconst x = a[l - 1];\r\n\t\t\treturn (l - 1) * 32 + bitArray.getPartial(x);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Truncate an array.\r\n\t\t * @param {bitArray} a The array.\r\n\t\t * @param {Number} len The length to truncate to, in bits.\r\n\t\t * @return {bitArray} A new array, truncated to len bits.\r\n\t\t */\r\n\t\tclamp(a, len) {\r\n\t\t\tif (a.length * 32 < len) {\r\n\t\t\t\treturn a;\r\n\t\t\t}\r\n\t\t\ta = a.slice(0, Math.ceil(len / 32));\r\n\t\t\tconst l = a.length;\r\n\t\t\tlen = len & 31;\r\n\t\t\tif (l > 0 && len) {\r\n\t\t\t\ta[l - 1] = bitArray.partial(len, a[l - 1] & 0x80000000 >> (len - 1), 1);\r\n\t\t\t}\r\n\t\t\treturn a;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Make a partial word for a bit array.\r\n\t\t * @param {Number} len The number of bits in the word.\r\n\t\t * @param {Number} x The bits.\r\n\t\t * @param {Number} [_end=0] Pass 1 if x has already been shifted to the high side.\r\n\t\t * @return {Number} The partial word.\r\n\t\t */\r\n\t\tpartial(len, x, _end) {\r\n\t\t\tif (len === 32) {\r\n\t\t\t\treturn x;\r\n\t\t\t}\r\n\t\t\treturn (_end ? x | 0 : x << (32 - len)) + len * 0x10000000000;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get the number of bits used by a partial word.\r\n\t\t * @param {Number} x The partial word.\r\n\t\t * @return {Number} The number of bits used by the partial word.\r\n\t\t */\r\n\t\tgetPartial(x) {\r\n\t\t\treturn Math.round(x / 0x10000000000) || 32;\r\n\t\t},\r\n\r\n\t\t/** Shift an array right.\r\n\t\t * @param {bitArray} a The array to shift.\r\n\t\t * @param {Number} shift The number of bits to shift.\r\n\t\t * @param {Number} [carry=0] A byte to carry in\r\n\t\t * @param {bitArray} [out=[]] An array to prepend to the output.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_shiftRight(a, shift, carry, out) {\r\n\t\t\tif (out === undefined) {\r\n\t\t\t\tout = [];\r\n\t\t\t}\r\n\r\n\t\t\tfor (; shift >= 32; shift -= 32) {\r\n\t\t\t\tout.push(carry);\r\n\t\t\t\tcarry = 0;\r\n\t\t\t}\r\n\t\t\tif (shift === 0) {\r\n\t\t\t\treturn out.concat(a);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < a.length; i++) {\r\n\t\t\t\tout.push(carry | a[i] >>> shift);\r\n\t\t\t\tcarry = a[i] << (32 - shift);\r\n\t\t\t}\r\n\t\t\tconst last2 = a.length ? a[a.length - 1] : 0;\r\n\t\t\tconst shift2 = bitArray.getPartial(last2);\r\n\t\t\tout.push(bitArray.partial(shift + shift2 & 31, (shift + shift2 > 32) ? carry : out.pop(), 1));\r\n\t\t\treturn out;\r\n\t\t}\r\n\t};\r\n\r\n\t/** @fileOverview Bit array codec implementations.\r\n\t *\r\n\t * @author Emily Stark\r\n\t * @author Mike Hamburg\r\n\t * @author Dan Boneh\r\n\t */\r\n\r\n\t/**\r\n\t * Arrays of bytes\r\n\t * @namespace\r\n\t */\r\n\tconst codec = {\r\n\t\tbytes: {\r\n\t\t\t/** Convert from a bitArray to an array of bytes. */\r\n\t\t\tfromBits(arr) {\r\n\t\t\t\tconst bl = bitArray.bitLength(arr);\r\n\t\t\t\tconst byteLength = bl / 8;\r\n\t\t\t\tconst out = new Uint8Array(byteLength);\r\n\t\t\t\tlet tmp;\r\n\t\t\t\tfor (let i = 0; i < byteLength; i++) {\r\n\t\t\t\t\tif ((i & 3) === 0) {\r\n\t\t\t\t\t\ttmp = arr[i / 4];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tout[i] = tmp >>> 24;\r\n\t\t\t\t\ttmp <<= 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn out;\r\n\t\t\t},\r\n\t\t\t/** Convert from an array of bytes to a bitArray. */\r\n\t\t\ttoBits(bytes) {\r\n\t\t\t\tconst out = [];\r\n\t\t\t\tlet i;\r\n\t\t\t\tlet tmp = 0;\r\n\t\t\t\tfor (i = 0; i < bytes.length; i++) {\r\n\t\t\t\t\ttmp = tmp << 8 | bytes[i];\r\n\t\t\t\t\tif ((i & 3) === 3) {\r\n\t\t\t\t\t\tout.push(tmp);\r\n\t\t\t\t\t\ttmp = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (i & 3) {\r\n\t\t\t\t\tout.push(bitArray.partial(8 * (i & 3), tmp));\r\n\t\t\t\t}\r\n\t\t\t\treturn out;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst hash = {};\r\n\r\n\t/**\r\n\t * Context for a SHA-1 operation in progress.\r\n\t * @constructor\r\n\t */\r\n\thash.sha1 = class {\r\n\t\tconstructor(hash) {\r\n\t\t\tconst sha1 = this;\r\n\t\t\t/**\r\n\t\t\t * The hash's block size, in bits.\r\n\t\t\t * @constant\r\n\t\t\t */\r\n\t\t\tsha1.blockSize = 512;\r\n\t\t\t/**\r\n\t\t\t * The SHA-1 initialization vector.\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tsha1._init = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];\r\n\t\t\t/**\r\n\t\t\t * The SHA-1 hash key.\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tsha1._key = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\r\n\t\t\tif (hash) {\r\n\t\t\t\tsha1._h = hash._h.slice(0);\r\n\t\t\t\tsha1._buffer = hash._buffer.slice(0);\r\n\t\t\t\tsha1._length = hash._length;\r\n\t\t\t} else {\r\n\t\t\t\tsha1.reset();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Reset the hash state.\r\n\t\t * @return this\r\n\t\t */\r\n\t\treset() {\r\n\t\t\tconst sha1 = this;\r\n\t\t\tsha1._h = sha1._init.slice(0);\r\n\t\t\tsha1._buffer = [];\r\n\t\t\tsha1._length = 0;\r\n\t\t\treturn sha1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Input several words to the hash.\r\n\t\t * @param {bitArray|String} data the data to hash.\r\n\t\t * @return this\r\n\t\t */\r\n\t\tupdate(data) {\r\n\t\t\tconst sha1 = this;\r\n\t\t\tif (typeof data === \"string\") {\r\n\t\t\t\tdata = codec.utf8String.toBits(data);\r\n\t\t\t}\r\n\t\t\tconst b = sha1._buffer = bitArray.concat(sha1._buffer, data);\r\n\t\t\tconst ol = sha1._length;\r\n\t\t\tconst nl = sha1._length = ol + bitArray.bitLength(data);\r\n\t\t\tif (nl > 9007199254740991) {\r\n\t\t\t\tthrow new Error(\"Cannot hash more than 2^53 - 1 bits\");\r\n\t\t\t}\r\n\t\t\tconst c = new Uint32Array(b);\r\n\t\t\tlet j = 0;\r\n\t\t\tfor (let i = sha1.blockSize + ol - ((sha1.blockSize + ol) & (sha1.blockSize - 1)); i <= nl;\r\n\t\t\t\t i += sha1.blockSize) {\r\n\t\t\t\tsha1._block(c.subarray(16 * j, 16 * (j + 1)));\r\n\t\t\t\tj += 1;\r\n\t\t\t}\r\n\t\t\tb.splice(0, 16 * j);\r\n\t\t\treturn sha1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Complete hashing and output the hash value.\r\n\t\t * @return {bitArray} The hash value, an array of 5 big-endian words. TODO\r\n\t\t */\r\n\t\tfinalize() {\r\n\t\t\tconst sha1 = this;\r\n\t\t\tlet b = sha1._buffer;\r\n\t\t\tconst h = sha1._h;\r\n\r\n\t\t\t// Round out and push the buffer\r\n\t\t\tb = bitArray.concat(b, [bitArray.partial(1, 1)]);\r\n\t\t\t// Round out the buffer to a multiple of 16 words, less the 2 length words.\r\n\t\t\tfor (let i = b.length + 2; i & 15; i++) {\r\n\t\t\t\tb.push(0);\r\n\t\t\t}\r\n\r\n\t\t\t// append the length\r\n\t\t\tb.push(Math.floor(sha1._length / 0x100000000));\r\n\t\t\tb.push(sha1._length | 0);\r\n\r\n\t\t\twhile (b.length) {\r\n\t\t\t\tsha1._block(b.splice(0, 16));\r\n\t\t\t}\r\n\r\n\t\t\tsha1.reset();\r\n\t\t\treturn h;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The SHA-1 logical functions f(0), f(1), ..., f(79).\r\n\t\t * @private\r\n\t\t */\r\n\t\t_f(t, b, c, d) {\r\n\t\t\tif (t <= 19) {\r\n\t\t\t\treturn (b & c) | (~b & d);\r\n\t\t\t} else if (t <= 39) {\r\n\t\t\t\treturn b ^ c ^ d;\r\n\t\t\t} else if (t <= 59) {\r\n\t\t\t\treturn (b & c) | (b & d) | (c & d);\r\n\t\t\t} else if (t <= 79) {\r\n\t\t\t\treturn b ^ c ^ d;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Circular left-shift operator.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_S(n, x) {\r\n\t\t\treturn (x << n) | (x >>> 32 - n);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Perform one cycle of SHA-1.\r\n\t\t * @param {Uint32Array|bitArray} words one block of words.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_block(words) {\r\n\t\t\tconst sha1 = this;\r\n\t\t\tconst h = sha1._h;\r\n\t\t\t// When words is passed to _block, it has 16 elements. SHA1 _block\r\n\t\t\t// function extends words with new elements (at the end there are 80 elements).\r\n\t\t\t// The problem is that if we use Uint32Array instead of Array,\r\n\t\t\t// the length of Uint32Array cannot be changed. Thus, we replace words with a\r\n\t\t\t// normal Array here.\r\n\t\t\tconst w = Array(80); // do not use Uint32Array here as the instantiation is slower\r\n\t\t\tfor (let j = 0; j < 16; j++) {\r\n\t\t\t\tw[j] = words[j];\r\n\t\t\t}\r\n\r\n\t\t\tlet a = h[0];\r\n\t\t\tlet b = h[1];\r\n\t\t\tlet c = h[2];\r\n\t\t\tlet d = h[3];\r\n\t\t\tlet e = h[4];\r\n\r\n\t\t\tfor (let t = 0; t <= 79; t++) {\r\n\t\t\t\tif (t >= 16) {\r\n\t\t\t\t\tw[t] = sha1._S(1, w[t - 3] ^ w[t - 8] ^ w[t - 14] ^ w[t - 16]);\r\n\t\t\t\t}\r\n\t\t\t\tconst tmp = (sha1._S(5, a) + sha1._f(t, b, c, d) + e + w[t] +\r\n\t\t\t\t\tsha1._key[Math.floor(t / 20)]) | 0;\r\n\t\t\t\te = d;\r\n\t\t\t\td = c;\r\n\t\t\t\tc = sha1._S(30, b);\r\n\t\t\t\tb = a;\r\n\t\t\t\ta = tmp;\r\n\t\t\t}\r\n\r\n\t\t\th[0] = (h[0] + a) | 0;\r\n\t\t\th[1] = (h[1] + b) | 0;\r\n\t\t\th[2] = (h[2] + c) | 0;\r\n\t\t\th[3] = (h[3] + d) | 0;\r\n\t\t\th[4] = (h[4] + e) | 0;\r\n\t\t}\r\n\t};\r\n\r\n\t/** @fileOverview Low-level AES implementation.\r\n\t *\r\n\t * This file contains a low-level implementation of AES, optimized for\r\n\t * size and for efficiency on several browsers.  It is based on\r\n\t * OpenSSL's aes_core.c, a public-domain implementation by Vincent\r\n\t * Rijmen, Antoon Bosselaers and Paulo Barreto.\r\n\t *\r\n\t * An older version of this implementation is available in the public\r\n\t * domain, but this one is (c) Emily Stark, Mike Hamburg, Dan Boneh,\r\n\t * Stanford University 2008-2010 and BSD-licensed for liability\r\n\t * reasons.\r\n\t *\r\n\t * @author Emily Stark\r\n\t * @author Mike Hamburg\r\n\t * @author Dan Boneh\r\n\t */\r\n\r\n\tconst cipher = {};\r\n\r\n\t/**\r\n\t * Schedule out an AES key for both encryption and decryption.  This\r\n\t * is a low-level class.  Use a cipher mode to do bulk encryption.\r\n\t *\r\n\t * @constructor\r\n\t * @param {Array} key The key as an array of 4, 6 or 8 words.\r\n\t */\r\n\tcipher.aes = class {\r\n\t\tconstructor(key) {\r\n\t\t\t/**\r\n\t\t\t * The expanded S-box and inverse S-box tables.  These will be computed\r\n\t\t\t * on the client so that we don't have to send them down the wire.\r\n\t\t\t *\r\n\t\t\t * There are two tables, _tables[0] is for encryption and\r\n\t\t\t * _tables[1] is for decryption.\r\n\t\t\t *\r\n\t\t\t * The first 4 sub-tables are the expanded S-box with MixColumns.  The\r\n\t\t\t * last (_tables[01][4]) is the S-box itself.\r\n\t\t\t *\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tconst aes = this;\r\n\t\t\taes._tables = [[[], [], [], [], []], [[], [], [], [], []]];\r\n\r\n\t\t\tif (!aes._tables[0][0][0]) {\r\n\t\t\t\taes._precompute();\r\n\t\t\t}\r\n\r\n\t\t\tconst sbox = aes._tables[0][4];\r\n\t\t\tconst decTable = aes._tables[1];\r\n\t\t\tconst keyLen = key.length;\r\n\r\n\t\t\tlet i, encKey, decKey, rcon = 1;\r\n\r\n\t\t\tif (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\r\n\t\t\t\tthrow new Error(\"invalid aes key size\");\r\n\t\t\t}\r\n\r\n\t\t\taes._key = [encKey = key.slice(0), decKey = []];\r\n\r\n\t\t\t// schedule encryption keys\r\n\t\t\tfor (i = keyLen; i < 4 * keyLen + 28; i++) {\r\n\t\t\t\tlet tmp = encKey[i - 1];\r\n\r\n\t\t\t\t// apply sbox\r\n\t\t\t\tif (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\r\n\t\t\t\t\ttmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\r\n\r\n\t\t\t\t\t// shift rows and add rcon\r\n\t\t\t\t\tif (i % keyLen === 0) {\r\n\t\t\t\t\t\ttmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\r\n\t\t\t\t\t\trcon = rcon << 1 ^ (rcon >> 7) * 283;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tencKey[i] = encKey[i - keyLen] ^ tmp;\r\n\t\t\t}\r\n\r\n\t\t\t// schedule decryption keys\r\n\t\t\tfor (let j = 0; i; j++, i--) {\r\n\t\t\t\tconst tmp = encKey[j & 3 ? i : i - 4];\r\n\t\t\t\tif (i <= 4 || j < 4) {\r\n\t\t\t\t\tdecKey[j] = tmp;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdecKey[j] = decTable[0][sbox[tmp >>> 24]] ^\r\n\t\t\t\t\t\tdecTable[1][sbox[tmp >> 16 & 255]] ^\r\n\t\t\t\t\t\tdecTable[2][sbox[tmp >> 8 & 255]] ^\r\n\t\t\t\t\t\tdecTable[3][sbox[tmp & 255]];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// public\r\n\t\t/* Something like this might appear here eventually\r\n\t\tname: \"AES\",\r\n\t\tblockSize: 4,\r\n\t\tkeySizes: [4,6,8],\r\n\t\t*/\r\n\r\n\t\t/**\r\n\t\t * Encrypt an array of 4 big-endian words.\r\n\t\t * @param {Array} data The plaintext.\r\n\t\t * @return {Array} The ciphertext.\r\n\t\t */\r\n\t\tencrypt(data) {\r\n\t\t\treturn this._crypt(data, 0);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Decrypt an array of 4 big-endian words.\r\n\t\t * @param {Array} data The ciphertext.\r\n\t\t * @return {Array} The plaintext.\r\n\t\t */\r\n\t\tdecrypt(data) {\r\n\t\t\treturn this._crypt(data, 1);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Expand the S-box tables.\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\t_precompute() {\r\n\t\t\tconst encTable = this._tables[0];\r\n\t\t\tconst decTable = this._tables[1];\r\n\t\t\tconst sbox = encTable[4];\r\n\t\t\tconst sboxInv = decTable[4];\r\n\t\t\tconst d = [];\r\n\t\t\tconst th = [];\r\n\t\t\tlet xInv, x2, x4, x8;\r\n\r\n\t\t\t// Compute double and third tables\r\n\t\t\tfor (let i = 0; i < 256; i++) {\r\n\t\t\t\tth[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\r\n\t\t\t\t// Compute sbox\r\n\t\t\t\tlet s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\r\n\t\t\t\ts = s >> 8 ^ s & 255 ^ 99;\r\n\t\t\t\tsbox[x] = s;\r\n\t\t\t\tsboxInv[s] = x;\r\n\r\n\t\t\t\t// Compute MixColumns\r\n\t\t\t\tx8 = d[x4 = d[x2 = d[x]]];\r\n\t\t\t\tlet tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\r\n\t\t\t\tlet tEnc = d[s] * 0x101 ^ s * 0x1010100;\r\n\r\n\t\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\t\tencTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\r\n\t\t\t\t\tdecTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Compactify.  Considerable speedup on Firefox.\r\n\t\t\tfor (let i = 0; i < 5; i++) {\r\n\t\t\t\tencTable[i] = encTable[i].slice(0);\r\n\t\t\t\tdecTable[i] = decTable[i].slice(0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Encryption and decryption core.\r\n\t\t * @param {Array} input Four words to be encrypted or decrypted.\r\n\t\t * @param dir The direction, 0 for encrypt and 1 for decrypt.\r\n\t\t * @return {Array} The four encrypted or decrypted words.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_crypt(input, dir) {\r\n\t\t\tif (input.length !== 4) {\r\n\t\t\t\tthrow new Error(\"invalid aes block size\");\r\n\t\t\t}\r\n\r\n\t\t\tconst key = this._key[dir];\r\n\r\n\t\t\tconst nInnerRounds = key.length / 4 - 2;\r\n\t\t\tconst out = [0, 0, 0, 0];\r\n\t\t\tconst table = this._tables[dir];\r\n\r\n\t\t\t// load up the tables\r\n\t\t\tconst t0 = table[0];\r\n\t\t\tconst t1 = table[1];\r\n\t\t\tconst t2 = table[2];\r\n\t\t\tconst t3 = table[3];\r\n\t\t\tconst sbox = table[4];\r\n\r\n\t\t\t// state variables a,b,c,d are loaded with pre-whitened data\r\n\t\t\tlet a = input[0] ^ key[0];\r\n\t\t\tlet b = input[dir ? 3 : 1] ^ key[1];\r\n\t\t\tlet c = input[2] ^ key[2];\r\n\t\t\tlet d = input[dir ? 1 : 3] ^ key[3];\r\n\t\t\tlet kIndex = 4;\r\n\t\t\tlet a2, b2, c2;\r\n\r\n\t\t\t// Inner rounds.  Cribbed from OpenSSL.\r\n\t\t\tfor (let i = 0; i < nInnerRounds; i++) {\r\n\t\t\t\ta2 = t0[a >>> 24] ^ t1[b >> 16 & 255] ^ t2[c >> 8 & 255] ^ t3[d & 255] ^ key[kIndex];\r\n\t\t\t\tb2 = t0[b >>> 24] ^ t1[c >> 16 & 255] ^ t2[d >> 8 & 255] ^ t3[a & 255] ^ key[kIndex + 1];\r\n\t\t\t\tc2 = t0[c >>> 24] ^ t1[d >> 16 & 255] ^ t2[a >> 8 & 255] ^ t3[b & 255] ^ key[kIndex + 2];\r\n\t\t\t\td = t0[d >>> 24] ^ t1[a >> 16 & 255] ^ t2[b >> 8 & 255] ^ t3[c & 255] ^ key[kIndex + 3];\r\n\t\t\t\tkIndex += 4;\r\n\t\t\t\ta = a2; b = b2; c = c2;\r\n\t\t\t}\r\n\r\n\t\t\t// Last round.\r\n\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\tout[dir ? 3 & -i : i] =\r\n\t\t\t\t\tsbox[a >>> 24] << 24 ^\r\n\t\t\t\t\tsbox[b >> 16 & 255] << 16 ^\r\n\t\t\t\t\tsbox[c >> 8 & 255] << 8 ^\r\n\t\t\t\t\tsbox[d & 255] ^\r\n\t\t\t\t\tkey[kIndex++];\r\n\t\t\t\ta2 = a; a = b; b = c; c = d; d = a2;\r\n\t\t\t}\r\n\r\n\t\t\treturn out;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Random values\r\n\t * @namespace\r\n\t */\r\n\tconst random = {\r\n\t\t/**\r\n\t\t * Generate random words with pure js, cryptographically not as strong & safe as native implementation.\r\n\t\t * @param {TypedArray} typedArray The array to fill.\r\n\t\t * @return {TypedArray} The random values.\r\n\t\t */\r\n\t\tgetRandomValues(typedArray) {\r\n\t\t\tconst words = new Uint32Array(typedArray.buffer);\r\n\t\t\tconst r = (m_w) => {\r\n\t\t\t\tlet m_z = 0x3ade68b1;\r\n\t\t\t\tconst mask = 0xffffffff;\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tm_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\r\n\t\t\t\t\tm_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\r\n\t\t\t\t\tconst result = ((((m_z << 0x10) + m_w) & mask) / 0x100000000) + .5;\r\n\t\t\t\t\treturn result * (Math.random() > .5 ? 1 : -1);\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\tfor (let i = 0, rcache; i < typedArray.length; i += 4) {\r\n\t\t\t\tconst _r = r((rcache || Math.random()) * 0x100000000);\r\n\t\t\t\trcache = _r() * 0x3ade67b7;\r\n\t\t\t\twords[i / 4] = (_r() * 0x100000000) | 0;\r\n\t\t\t}\r\n\t\t\treturn typedArray;\r\n\t\t}\r\n\t};\r\n\r\n\t/** @fileOverview CTR mode implementation.\r\n\t *\r\n\t * Special thanks to Roy Nicholson for pointing out a bug in our\r\n\t * implementation.\r\n\t *\r\n\t * @author Emily Stark\r\n\t * @author Mike Hamburg\r\n\t * @author Dan Boneh\r\n\t */\r\n\r\n\t/** Brian Gladman's CTR Mode.\r\n\t * @constructor\r\n\t * @param {Object} _prf The aes instance to generate key.\r\n\t * @param {bitArray} _iv The iv for ctr mode, it must be 128 bits.\r\n\t */\r\n\r\n\tconst mode = {};\r\n\r\n\t/**\r\n\t * Brian Gladman's CTR Mode.\r\n\t * @namespace\r\n\t */\r\n\tmode.ctrGladman = class {\r\n\t\tconstructor(prf, iv) {\r\n\t\t\tthis._prf = prf;\r\n\t\t\tthis._initIv = iv;\r\n\t\t\tthis._iv = iv;\r\n\t\t}\r\n\r\n\t\treset() {\r\n\t\t\tthis._iv = this._initIv;\r\n\t\t}\r\n\r\n\t\t/** Input some data to calculate.\r\n\t\t * @param {bitArray} data the data to process, it must be intergral multiple of 128 bits unless it's the last.\r\n\t\t */\r\n\t\tupdate(data) {\r\n\t\t\treturn this.calculate(this._prf, data, this._iv);\r\n\t\t}\r\n\r\n\t\tincWord(word) {\r\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\r\n\t\t\t\tlet b1 = (word >> 16) & 0xff;\r\n\t\t\t\tlet b2 = (word >> 8) & 0xff;\r\n\t\t\t\tlet b3 = word & 0xff;\r\n\r\n\t\t\t\tif (b1 === 0xff) { // overflow b1\r\n\t\t\t\t\tb1 = 0;\r\n\t\t\t\t\tif (b2 === 0xff) {\r\n\t\t\t\t\t\tb2 = 0;\r\n\t\t\t\t\t\tif (b3 === 0xff) {\r\n\t\t\t\t\t\t\tb3 = 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t++b3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t++b2;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++b1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tword = 0;\r\n\t\t\t\tword += (b1 << 16);\r\n\t\t\t\tword += (b2 << 8);\r\n\t\t\t\tword += b3;\r\n\t\t\t} else {\r\n\t\t\t\tword += (0x01 << 24);\r\n\t\t\t}\r\n\t\t\treturn word;\r\n\t\t}\r\n\r\n\t\tincCounter(counter) {\r\n\t\t\tif ((counter[0] = this.incWord(counter[0])) === 0) {\r\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\r\n\t\t\t\tcounter[1] = this.incWord(counter[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcalculate(prf, data, iv) {\r\n\t\t\tlet l;\r\n\t\t\tif (!(l = data.length)) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\tconst bl = bitArray.bitLength(data);\r\n\t\t\tfor (let i = 0; i < l; i += 4) {\r\n\t\t\t\tthis.incCounter(iv);\r\n\t\t\t\tconst e = prf.encrypt(iv);\r\n\t\t\t\tdata[i] ^= e[0];\r\n\t\t\t\tdata[i + 1] ^= e[1];\r\n\t\t\t\tdata[i + 2] ^= e[2];\r\n\t\t\t\tdata[i + 3] ^= e[3];\r\n\t\t\t}\r\n\t\t\treturn bitArray.clamp(data, bl);\r\n\t\t}\r\n\t};\r\n\r\n\tconst misc = {\r\n\t\timportKey(password) {\r\n\t\t\treturn new misc.hmacSha1(codec.bytes.toBits(password));\r\n\t\t},\r\n\t\tpbkdf2(prf, salt, count, length) {\r\n\t\t\tcount = count || 10000;\r\n\t\t\tif (length < 0 || count < 0) {\r\n\t\t\t\tthrow new Error(\"invalid params to pbkdf2\");\r\n\t\t\t}\r\n\t\t\tconst byteLength = ((length >> 5) + 1) << 2;\r\n\t\t\tlet u, ui, i, j, k;\r\n\t\t\tconst arrayBuffer = new ArrayBuffer(byteLength);\r\n\t\t\tconst out = new DataView(arrayBuffer);\r\n\t\t\tlet outLength = 0;\r\n\t\t\tconst b = bitArray;\r\n\t\t\tsalt = codec.bytes.toBits(salt);\r\n\t\t\tfor (k = 1; outLength < (byteLength || 1); k++) {\r\n\t\t\t\tu = ui = prf.encrypt(b.concat(salt, [k]));\r\n\t\t\t\tfor (i = 1; i < count; i++) {\r\n\t\t\t\t\tui = prf.encrypt(ui);\r\n\t\t\t\t\tfor (j = 0; j < ui.length; j++) {\r\n\t\t\t\t\t\tu[j] ^= ui[j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (i = 0; outLength < (byteLength || 1) && i < u.length; i++) {\r\n\t\t\t\t\tout.setInt32(outLength, u[i]);\r\n\t\t\t\t\toutLength += 4;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arrayBuffer.slice(0, length / 8);\r\n\t\t}\r\n\t};\r\n\r\n\t/** @fileOverview HMAC implementation.\r\n\t *\r\n\t * @author Emily Stark\r\n\t * @author Mike Hamburg\r\n\t * @author Dan Boneh\r\n\t */\r\n\r\n\t/** HMAC with the specified hash function.\r\n\t * @constructor\r\n\t * @param {bitArray} key the key for HMAC.\r\n\t * @param {Object} [Hash=hash.sha1] The hash function to use.\r\n\t */\r\n\tmisc.hmacSha1 = class {\r\n\r\n\t\tconstructor(key) {\r\n\t\t\tconst hmac = this;\r\n\t\t\tconst Hash = hmac._hash = hash.sha1;\r\n\t\t\tconst exKey = [[], []];\r\n\t\t\thmac._baseHash = [new Hash(), new Hash()];\r\n\t\t\tconst bs = hmac._baseHash[0].blockSize / 32;\r\n\r\n\t\t\tif (key.length > bs) {\r\n\t\t\t\tkey = new Hash().update(key).finalize();\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < bs; i++) {\r\n\t\t\t\texKey[0][i] = key[i] ^ 0x36363636;\r\n\t\t\t\texKey[1][i] = key[i] ^ 0x5C5C5C5C;\r\n\t\t\t}\r\n\r\n\t\t\thmac._baseHash[0].update(exKey[0]);\r\n\t\t\thmac._baseHash[1].update(exKey[1]);\r\n\t\t\thmac._resultHash = new Hash(hmac._baseHash[0]);\r\n\t\t}\r\n\t\treset() {\r\n\t\t\tconst hmac = this;\r\n\t\t\thmac._resultHash = new hmac._hash(hmac._baseHash[0]);\r\n\t\t\thmac._updated = false;\r\n\t\t}\r\n\r\n\t\tupdate(data) {\r\n\t\t\tconst hmac = this;\r\n\t\t\thmac._updated = true;\r\n\t\t\thmac._resultHash.update(data);\r\n\t\t}\r\n\r\n\t\tdigest() {\r\n\t\t\tconst hmac = this;\r\n\t\t\tconst w = hmac._resultHash.finalize();\r\n\t\t\tconst result = new (hmac._hash)(hmac._baseHash[1]).update(w).finalize();\r\n\r\n\t\t\thmac.reset();\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tencrypt(data) {\r\n\t\t\tif (!this._updated) {\r\n\t\t\t\tthis.update(data);\r\n\t\t\t\treturn this.digest(data);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"encrypt on already updated hmac called!\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst GET_RANDOM_VALUES_SUPPORTED = typeof crypto != \"undefined\" && typeof crypto.getRandomValues == \"function\";\r\n\r\n\tconst ERR_INVALID_PASSWORD = \"Invalid password\";\r\n\tconst ERR_INVALID_SIGNATURE = \"Invalid signature\";\r\n\tconst ERR_ABORT_CHECK_PASSWORD = \"zipjs-abort-check-password\";\r\n\r\n\tfunction getRandomValues(array) {\r\n\t\tif (GET_RANDOM_VALUES_SUPPORTED) {\r\n\t\t\treturn crypto.getRandomValues(array);\r\n\t\t} else {\r\n\t\t\treturn random.getRandomValues(array);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst BLOCK_LENGTH = 16;\r\n\tconst RAW_FORMAT = \"raw\";\r\n\tconst PBKDF2_ALGORITHM = { name: \"PBKDF2\" };\r\n\tconst HASH_ALGORITHM = { name: \"HMAC\" };\r\n\tconst HASH_FUNCTION = \"SHA-1\";\r\n\tconst BASE_KEY_ALGORITHM = Object.assign({ hash: HASH_ALGORITHM }, PBKDF2_ALGORITHM);\r\n\tconst DERIVED_BITS_ALGORITHM = Object.assign({ iterations: 1000, hash: { name: HASH_FUNCTION } }, PBKDF2_ALGORITHM);\r\n\tconst DERIVED_BITS_USAGE = [\"deriveBits\"];\r\n\tconst SALT_LENGTH = [8, 12, 16];\r\n\tconst KEY_LENGTH = [16, 24, 32];\r\n\tconst SIGNATURE_LENGTH = 10;\r\n\tconst COUNTER_DEFAULT_VALUE = [0, 0, 0, 0];\r\n\tconst UNDEFINED_TYPE = \"undefined\";\r\n\tconst FUNCTION_TYPE = \"function\";\r\n\t// deno-lint-ignore valid-typeof\r\n\tconst CRYPTO_API_SUPPORTED = typeof crypto != UNDEFINED_TYPE;\r\n\tconst subtle = CRYPTO_API_SUPPORTED && crypto.subtle;\r\n\tconst SUBTLE_API_SUPPORTED = CRYPTO_API_SUPPORTED && typeof subtle != UNDEFINED_TYPE;\r\n\tconst codecBytes = codec.bytes;\r\n\tconst Aes = cipher.aes;\r\n\tconst CtrGladman = mode.ctrGladman;\r\n\tconst HmacSha1 = misc.hmacSha1;\r\n\r\n\tlet IMPORT_KEY_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.importKey == FUNCTION_TYPE;\r\n\tlet DERIVE_BITS_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.deriveBits == FUNCTION_TYPE;\r\n\r\n\tclass AESDecryptionStream extends TransformStream {\r\n\r\n\t\tconstructor({ password, signed, encryptionStrength, checkPasswordOnly }) {\r\n\t\t\tsuper({\r\n\t\t\t\tstart() {\r\n\t\t\t\t\tObject.assign(this, {\r\n\t\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\r\n\t\t\t\t\t\tpassword,\r\n\t\t\t\t\t\tsigned,\r\n\t\t\t\t\t\tstrength: encryptionStrength - 1,\r\n\t\t\t\t\t\tpending: new Uint8Array()\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync transform(chunk, controller) {\r\n\t\t\t\t\tconst aesCrypto = this;\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tpassword,\r\n\t\t\t\t\t\tstrength,\r\n\t\t\t\t\t\tresolveReady,\r\n\t\t\t\t\t\tready\r\n\t\t\t\t\t} = aesCrypto;\r\n\t\t\t\t\tif (password) {\r\n\t\t\t\t\t\tawait createDecryptionKeys(aesCrypto, strength, password, subarray(chunk, 0, SALT_LENGTH[strength] + 2));\r\n\t\t\t\t\t\tchunk = subarray(chunk, SALT_LENGTH[strength] + 2);\r\n\t\t\t\t\t\tif (checkPasswordOnly) {\r\n\t\t\t\t\t\t\tcontroller.error(new Error(ERR_ABORT_CHECK_PASSWORD));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresolveReady();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait ready;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst output = new Uint8Array(chunk.length - SIGNATURE_LENGTH - ((chunk.length - SIGNATURE_LENGTH) % BLOCK_LENGTH));\r\n\t\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, 0, SIGNATURE_LENGTH, true));\r\n\t\t\t\t},\r\n\t\t\t\tasync flush(controller) {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tsigned,\r\n\t\t\t\t\t\tctr,\r\n\t\t\t\t\t\thmac,\r\n\t\t\t\t\t\tpending,\r\n\t\t\t\t\t\tready\r\n\t\t\t\t\t} = this;\r\n\t\t\t\t\tawait ready;\r\n\t\t\t\t\tconst chunkToDecrypt = subarray(pending, 0, pending.length - SIGNATURE_LENGTH);\r\n\t\t\t\t\tconst originalSignature = subarray(pending, pending.length - SIGNATURE_LENGTH);\r\n\t\t\t\t\tlet decryptedChunkArray = new Uint8Array();\r\n\t\t\t\t\tif (chunkToDecrypt.length) {\r\n\t\t\t\t\t\tconst encryptedChunk = toBits(codecBytes, chunkToDecrypt);\r\n\t\t\t\t\t\thmac.update(encryptedChunk);\r\n\t\t\t\t\t\tconst decryptedChunk = ctr.update(encryptedChunk);\r\n\t\t\t\t\t\tdecryptedChunkArray = fromBits(codecBytes, decryptedChunk);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (signed) {\r\n\t\t\t\t\t\tconst signature = subarray(fromBits(codecBytes, hmac.digest()), 0, SIGNATURE_LENGTH);\r\n\t\t\t\t\t\tfor (let indexSignature = 0; indexSignature < SIGNATURE_LENGTH; indexSignature++) {\r\n\t\t\t\t\t\t\tif (signature[indexSignature] != originalSignature[indexSignature]) {\r\n\t\t\t\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontroller.enqueue(decryptedChunkArray);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tclass AESEncryptionStream extends TransformStream {\r\n\r\n\t\tconstructor({ password, encryptionStrength }) {\r\n\t\t\t// deno-lint-ignore prefer-const\r\n\t\t\tlet stream;\r\n\t\t\tsuper({\r\n\t\t\t\tstart() {\r\n\t\t\t\t\tObject.assign(this, {\r\n\t\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\r\n\t\t\t\t\t\tpassword,\r\n\t\t\t\t\t\tstrength: encryptionStrength - 1,\r\n\t\t\t\t\t\tpending: new Uint8Array()\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync transform(chunk, controller) {\r\n\t\t\t\t\tconst aesCrypto = this;\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tpassword,\r\n\t\t\t\t\t\tstrength,\r\n\t\t\t\t\t\tresolveReady,\r\n\t\t\t\t\t\tready\r\n\t\t\t\t\t} = aesCrypto;\r\n\t\t\t\t\tlet preamble = new Uint8Array();\r\n\t\t\t\t\tif (password) {\r\n\t\t\t\t\t\tpreamble = await createEncryptionKeys(aesCrypto, strength, password);\r\n\t\t\t\t\t\tresolveReady();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait ready;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst output = new Uint8Array(preamble.length + chunk.length - (chunk.length % BLOCK_LENGTH));\r\n\t\t\t\t\toutput.set(preamble, 0);\r\n\t\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, preamble.length, 0));\r\n\t\t\t\t},\r\n\t\t\t\tasync flush(controller) {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tctr,\r\n\t\t\t\t\t\thmac,\r\n\t\t\t\t\t\tpending,\r\n\t\t\t\t\t\tready\r\n\t\t\t\t\t} = this;\r\n\t\t\t\t\tawait ready;\r\n\t\t\t\t\tlet encryptedChunkArray = new Uint8Array();\r\n\t\t\t\t\tif (pending.length) {\r\n\t\t\t\t\t\tconst encryptedChunk = ctr.update(toBits(codecBytes, pending));\r\n\t\t\t\t\t\thmac.update(encryptedChunk);\r\n\t\t\t\t\t\tencryptedChunkArray = fromBits(codecBytes, encryptedChunk);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstream.signature = fromBits(codecBytes, hmac.digest()).slice(0, SIGNATURE_LENGTH);\r\n\t\t\t\t\tcontroller.enqueue(concat(encryptedChunkArray, stream.signature));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tstream = this;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction append(aesCrypto, input, output, paddingStart, paddingEnd, verifySignature) {\r\n\t\tconst {\r\n\t\t\tctr,\r\n\t\t\thmac,\r\n\t\t\tpending\r\n\t\t} = aesCrypto;\r\n\t\tconst inputLength = input.length - paddingEnd;\r\n\t\tif (pending.length) {\r\n\t\t\tinput = concat(pending, input);\r\n\t\t\toutput = expand(output, inputLength - (inputLength % BLOCK_LENGTH));\r\n\t\t}\r\n\t\tlet offset;\r\n\t\tfor (offset = 0; offset <= inputLength - BLOCK_LENGTH; offset += BLOCK_LENGTH) {\r\n\t\t\tconst inputChunk = toBits(codecBytes, subarray(input, offset, offset + BLOCK_LENGTH));\r\n\t\t\tif (verifySignature) {\r\n\t\t\t\thmac.update(inputChunk);\r\n\t\t\t}\r\n\t\t\tconst outputChunk = ctr.update(inputChunk);\r\n\t\t\tif (!verifySignature) {\r\n\t\t\t\thmac.update(outputChunk);\r\n\t\t\t}\r\n\t\t\toutput.set(fromBits(codecBytes, outputChunk), offset + paddingStart);\r\n\t\t}\r\n\t\taesCrypto.pending = subarray(input, offset);\r\n\t\treturn output;\r\n\t}\r\n\r\n\tasync function createDecryptionKeys(decrypt, strength, password, preamble) {\r\n\t\tconst passwordVerificationKey = await createKeys$1(decrypt, strength, password, subarray(preamble, 0, SALT_LENGTH[strength]));\r\n\t\tconst passwordVerification = subarray(preamble, SALT_LENGTH[strength]);\r\n\t\tif (passwordVerificationKey[0] != passwordVerification[0] || passwordVerificationKey[1] != passwordVerification[1]) {\r\n\t\t\tthrow new Error(ERR_INVALID_PASSWORD);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function createEncryptionKeys(encrypt, strength, password) {\r\n\t\tconst salt = getRandomValues(new Uint8Array(SALT_LENGTH[strength]));\r\n\t\tconst passwordVerification = await createKeys$1(encrypt, strength, password, salt);\r\n\t\treturn concat(salt, passwordVerification);\r\n\t}\r\n\r\n\tasync function createKeys$1(aesCrypto, strength, password, salt) {\r\n\t\taesCrypto.password = null;\r\n\t\tconst encodedPassword = encodeText(password);\r\n\t\tconst baseKey = await importKey(RAW_FORMAT, encodedPassword, BASE_KEY_ALGORITHM, false, DERIVED_BITS_USAGE);\r\n\t\tconst derivedBits = await deriveBits(Object.assign({ salt }, DERIVED_BITS_ALGORITHM), baseKey, 8 * ((KEY_LENGTH[strength] * 2) + 2));\r\n\t\tconst compositeKey = new Uint8Array(derivedBits);\r\n\t\tconst key = toBits(codecBytes, subarray(compositeKey, 0, KEY_LENGTH[strength]));\r\n\t\tconst authentication = toBits(codecBytes, subarray(compositeKey, KEY_LENGTH[strength], KEY_LENGTH[strength] * 2));\r\n\t\tconst passwordVerification = subarray(compositeKey, KEY_LENGTH[strength] * 2);\r\n\t\tObject.assign(aesCrypto, {\r\n\t\t\tkeys: {\r\n\t\t\t\tkey,\r\n\t\t\t\tauthentication,\r\n\t\t\t\tpasswordVerification\r\n\t\t\t},\r\n\t\t\tctr: new CtrGladman(new Aes(key), Array.from(COUNTER_DEFAULT_VALUE)),\r\n\t\t\thmac: new HmacSha1(authentication)\r\n\t\t});\r\n\t\treturn passwordVerification;\r\n\t}\r\n\r\n\tasync function importKey(format, password, algorithm, extractable, keyUsages) {\r\n\t\tif (IMPORT_KEY_SUPPORTED) {\r\n\t\t\ttry {\r\n\t\t\t\treturn await subtle.importKey(format, password, algorithm, extractable, keyUsages);\r\n\t\t\t} catch (_error) {\r\n\t\t\t\tIMPORT_KEY_SUPPORTED = false;\r\n\t\t\t\treturn misc.importKey(password);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn misc.importKey(password);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function deriveBits(algorithm, baseKey, length) {\r\n\t\tif (DERIVE_BITS_SUPPORTED) {\r\n\t\t\ttry {\r\n\t\t\t\treturn await subtle.deriveBits(algorithm, baseKey, length);\r\n\t\t\t} catch (_error) {\r\n\t\t\t\tDERIVE_BITS_SUPPORTED = false;\r\n\t\t\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction concat(leftArray, rightArray) {\r\n\t\tlet array = leftArray;\r\n\t\tif (leftArray.length + rightArray.length) {\r\n\t\t\tarray = new Uint8Array(leftArray.length + rightArray.length);\r\n\t\t\tarray.set(leftArray, 0);\r\n\t\t\tarray.set(rightArray, leftArray.length);\r\n\t\t}\r\n\t\treturn array;\r\n\t}\r\n\r\n\tfunction expand(inputArray, length) {\r\n\t\tif (length && length > inputArray.length) {\r\n\t\t\tconst array = inputArray;\r\n\t\t\tinputArray = new Uint8Array(length);\r\n\t\t\tinputArray.set(array, 0);\r\n\t\t}\r\n\t\treturn inputArray;\r\n\t}\r\n\r\n\tfunction subarray(array, begin, end) {\r\n\t\treturn array.subarray(begin, end);\r\n\t}\r\n\r\n\tfunction fromBits(codecBytes, chunk) {\r\n\t\treturn codecBytes.fromBits(chunk);\r\n\t}\r\n\tfunction toBits(codecBytes, chunk) {\r\n\t\treturn codecBytes.toBits(chunk);\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst HEADER_LENGTH = 12;\r\n\r\n\tclass ZipCryptoDecryptionStream extends TransformStream {\r\n\r\n\t\tconstructor({ password, passwordVerification, checkPasswordOnly }) {\r\n\t\t\tsuper({\r\n\t\t\t\tstart() {\r\n\t\t\t\t\tObject.assign(this, {\r\n\t\t\t\t\t\tpassword,\r\n\t\t\t\t\t\tpasswordVerification\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcreateKeys(this, password);\r\n\t\t\t\t},\r\n\t\t\t\ttransform(chunk, controller) {\r\n\t\t\t\t\tconst zipCrypto = this;\r\n\t\t\t\t\tif (zipCrypto.password) {\r\n\t\t\t\t\t\tconst decryptedHeader = decrypt(zipCrypto, chunk.subarray(0, HEADER_LENGTH));\r\n\t\t\t\t\t\tzipCrypto.password = null;\r\n\t\t\t\t\t\tif (decryptedHeader[HEADER_LENGTH - 1] != zipCrypto.passwordVerification) {\r\n\t\t\t\t\t\t\tthrow new Error(ERR_INVALID_PASSWORD);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchunk = chunk.subarray(HEADER_LENGTH);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (checkPasswordOnly) {\r\n\t\t\t\t\t\tcontroller.error(new Error(ERR_ABORT_CHECK_PASSWORD));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontroller.enqueue(decrypt(zipCrypto, chunk));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tclass ZipCryptoEncryptionStream extends TransformStream {\r\n\r\n\t\tconstructor({ password, passwordVerification }) {\r\n\t\t\tsuper({\r\n\t\t\t\tstart() {\r\n\t\t\t\t\tObject.assign(this, {\r\n\t\t\t\t\t\tpassword,\r\n\t\t\t\t\t\tpasswordVerification\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcreateKeys(this, password);\r\n\t\t\t\t},\r\n\t\t\t\ttransform(chunk, controller) {\r\n\t\t\t\t\tconst zipCrypto = this;\r\n\t\t\t\t\tlet output;\r\n\t\t\t\t\tlet offset;\r\n\t\t\t\t\tif (zipCrypto.password) {\r\n\t\t\t\t\t\tzipCrypto.password = null;\r\n\t\t\t\t\t\tconst header = getRandomValues(new Uint8Array(HEADER_LENGTH));\r\n\t\t\t\t\t\theader[HEADER_LENGTH - 1] = zipCrypto.passwordVerification;\r\n\t\t\t\t\t\toutput = new Uint8Array(chunk.length + header.length);\r\n\t\t\t\t\t\toutput.set(encrypt(zipCrypto, header), 0);\r\n\t\t\t\t\t\toffset = HEADER_LENGTH;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toutput = new Uint8Array(chunk.length);\r\n\t\t\t\t\t\toffset = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\toutput.set(encrypt(zipCrypto, chunk), offset);\r\n\t\t\t\t\tcontroller.enqueue(output);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction decrypt(target, input) {\r\n\t\tconst output = new Uint8Array(input.length);\r\n\t\tfor (let index = 0; index < input.length; index++) {\r\n\t\t\toutput[index] = getByte(target) ^ input[index];\r\n\t\t\tupdateKeys(target, output[index]);\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\r\n\tfunction encrypt(target, input) {\r\n\t\tconst output = new Uint8Array(input.length);\r\n\t\tfor (let index = 0; index < input.length; index++) {\r\n\t\t\toutput[index] = getByte(target) ^ input[index];\r\n\t\t\tupdateKeys(target, input[index]);\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\r\n\tfunction createKeys(target, password) {\r\n\t\tconst keys = [0x12345678, 0x23456789, 0x34567890];\r\n\t\tObject.assign(target, {\r\n\t\t\tkeys,\r\n\t\t\tcrcKey0: new Crc32(keys[0]),\r\n\t\t\tcrcKey2: new Crc32(keys[2]),\r\n\t\t});\r\n\t\tfor (let index = 0; index < password.length; index++) {\r\n\t\t\tupdateKeys(target, password.charCodeAt(index));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateKeys(target, byte) {\r\n\t\tlet [key0, key1, key2] = target.keys;\r\n\t\ttarget.crcKey0.append([byte]);\r\n\t\tkey0 = ~target.crcKey0.get();\r\n\t\tkey1 = getInt32(Math.imul(getInt32(key1 + getInt8(key0)), 134775813) + 1);\r\n\t\ttarget.crcKey2.append([key1 >>> 24]);\r\n\t\tkey2 = ~target.crcKey2.get();\r\n\t\ttarget.keys = [key0, key1, key2];\r\n\t}\r\n\r\n\tfunction getByte(target) {\r\n\t\tconst temp = target.keys[2] | 2;\r\n\t\treturn getInt8(Math.imul(temp, (temp ^ 1)) >>> 8);\r\n\t}\r\n\r\n\tfunction getInt8(number) {\r\n\t\treturn number & 0xFF;\r\n\t}\r\n\r\n\tfunction getInt32(number) {\r\n\t\treturn number & 0xFFFFFFFF;\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst COMPRESSION_FORMAT = \"deflate-raw\";\r\n\r\n\tclass DeflateStream extends TransformStream {\r\n\r\n\t\tconstructor(options, { chunkSize, CompressionStream, CompressionStreamNative }) {\r\n\t\t\tsuper({});\r\n\t\t\tconst { compressed, encrypted, useCompressionStream, zipCrypto, signed, level } = options;\r\n\t\t\tconst stream = this;\r\n\t\t\tlet crc32Stream, encryptionStream;\r\n\t\t\tlet readable = filterEmptyChunks(super.readable);\r\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\r\n\t\t\t\tcrc32Stream = new Crc32Stream();\r\n\t\t\t\treadable = pipeThrough(readable, crc32Stream);\r\n\t\t\t}\r\n\t\t\tif (compressed) {\r\n\t\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { level, chunkSize }, CompressionStreamNative, CompressionStream);\r\n\t\t\t}\r\n\t\t\tif (encrypted) {\r\n\t\t\t\tif (zipCrypto) {\r\n\t\t\t\t\treadable = pipeThrough(readable, new ZipCryptoEncryptionStream(options));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tencryptionStream = new AESEncryptionStream(options);\r\n\t\t\t\t\treadable = pipeThrough(readable, encryptionStream);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetReadable(stream, readable, async () => {\r\n\t\t\t\tlet signature;\r\n\t\t\t\tif (encrypted && !zipCrypto) {\r\n\t\t\t\t\tsignature = encryptionStream.signature;\r\n\t\t\t\t}\r\n\t\t\t\tif ((!encrypted || zipCrypto) && signed) {\r\n\t\t\t\t\tsignature = new DataView(crc32Stream.value.buffer).getUint32(0);\r\n\t\t\t\t}\r\n\t\t\t\tstream.signature = signature;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tclass InflateStream extends TransformStream {\r\n\r\n\t\tconstructor(options, { chunkSize, DecompressionStream, DecompressionStreamNative }) {\r\n\t\t\tsuper({});\r\n\t\t\tconst { zipCrypto, encrypted, signed, signature, compressed, useCompressionStream } = options;\r\n\t\t\tlet crc32Stream, decryptionStream;\r\n\t\t\tlet readable = filterEmptyChunks(super.readable);\r\n\t\t\tif (encrypted) {\r\n\t\t\t\tif (zipCrypto) {\r\n\t\t\t\t\treadable = pipeThrough(readable, new ZipCryptoDecryptionStream(options));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdecryptionStream = new AESDecryptionStream(options);\r\n\t\t\t\t\treadable = pipeThrough(readable, decryptionStream);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (compressed) {\r\n\t\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { chunkSize }, DecompressionStreamNative, DecompressionStream);\r\n\t\t\t}\r\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\r\n\t\t\t\tcrc32Stream = new Crc32Stream();\r\n\t\t\t\treadable = pipeThrough(readable, crc32Stream);\r\n\t\t\t}\r\n\t\t\tsetReadable(this, readable, async () => {\r\n\t\t\t\tif ((!encrypted || zipCrypto) && signed) {\r\n\t\t\t\t\tconst dataViewSignature = new DataView(crc32Stream.value.buffer);\r\n\t\t\t\t\tif (signature != dataViewSignature.getUint32(0, false)) {\r\n\t\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction filterEmptyChunks(readable) {\r\n\t\treturn pipeThrough(readable, new TransformStream({\r\n\t\t\ttransform(chunk, controller) {\r\n\t\t\t\tif (chunk && chunk.length) {\r\n\t\t\t\t\tcontroller.enqueue(chunk);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\r\n\tfunction setReadable(stream, readable, flush) {\r\n\t\treadable = pipeThrough(readable, new TransformStream({ flush }));\r\n\t\tObject.defineProperty(stream, \"readable\", {\r\n\t\t\tget() {\r\n\t\t\t\treturn readable;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction pipeThroughCommpressionStream(readable, useCompressionStream, options, CodecStreamNative, CodecStream) {\r\n\t\ttry {\r\n\t\t\tconst CompressionStream = useCompressionStream && CodecStreamNative ? CodecStreamNative : CodecStream;\r\n\t\t\treadable = pipeThrough(readable, new CompressionStream(COMPRESSION_FORMAT, options));\r\n\t\t} catch (error) {\r\n\t\t\tif (useCompressionStream) {\r\n\t\t\t\treadable = pipeThrough(readable, new CodecStream(COMPRESSION_FORMAT, options));\r\n\t\t\t} else {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn readable;\r\n\t}\r\n\r\n\tfunction pipeThrough(readable, transformStream) {\r\n\t\treturn readable.pipeThrough(transformStream);\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst MESSAGE_EVENT_TYPE = \"message\";\r\n\tconst MESSAGE_START = \"start\";\r\n\tconst MESSAGE_PULL = \"pull\";\r\n\tconst MESSAGE_DATA = \"data\";\r\n\tconst MESSAGE_ACK_DATA = \"ack\";\r\n\tconst MESSAGE_CLOSE = \"close\";\r\n\tconst CODEC_DEFLATE = \"deflate\";\r\n\tconst CODEC_INFLATE = \"inflate\";\r\n\r\n\tclass CodecStream extends TransformStream {\r\n\r\n\t\tconstructor(options, config) {\r\n\t\t\tsuper({});\r\n\t\t\tconst codec = this;\r\n\t\t\tconst { codecType } = options;\r\n\t\t\tlet Stream;\r\n\t\t\tif (codecType.startsWith(CODEC_DEFLATE)) {\r\n\t\t\t\tStream = DeflateStream;\r\n\t\t\t} else if (codecType.startsWith(CODEC_INFLATE)) {\r\n\t\t\t\tStream = InflateStream;\r\n\t\t\t}\r\n\t\t\tlet size = 0;\r\n\t\t\tconst stream = new Stream(options, config);\r\n\t\t\tconst readable = super.readable;\r\n\t\t\tconst transformStream = new TransformStream({\r\n\t\t\t\ttransform(chunk, controller) {\r\n\t\t\t\t\tif (chunk && chunk.length) {\r\n\t\t\t\t\t\tsize += chunk.length;\r\n\t\t\t\t\t\tcontroller.enqueue(chunk);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tflush() {\r\n\t\t\t\t\tconst { signature } = stream;\r\n\t\t\t\t\tObject.assign(codec, {\r\n\t\t\t\t\t\tsignature,\r\n\t\t\t\t\t\tsize\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(codec, \"readable\", {\r\n\t\t\t\tget() {\r\n\t\t\t\t\treturn readable.pipeThrough(stream).pipeThrough(transformStream);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\t// deno-lint-ignore valid-typeof\r\n\tconst WEB_WORKERS_SUPPORTED = typeof Worker != UNDEFINED_TYPE$1;\r\n\r\n\tclass CodecWorker {\r\n\r\n\t\tconstructor(workerData, { readable, writable }, { options, config, streamOptions, useWebWorkers, transferStreams, scripts }, onTaskFinished) {\r\n\t\t\tconst { signal } = streamOptions;\r\n\t\t\tObject.assign(workerData, {\r\n\t\t\t\tbusy: true,\r\n\t\t\t\treadable: readable.pipeThrough(new ProgressWatcherStream(readable, streamOptions, config), { signal }),\r\n\t\t\t\twritable,\r\n\t\t\t\toptions: Object.assign({}, options),\r\n\t\t\t\tscripts,\r\n\t\t\t\ttransferStreams,\r\n\t\t\t\tterminate() {\r\n\t\t\t\t\tconst { worker, busy } = workerData;\r\n\t\t\t\t\tif (worker && !busy) {\r\n\t\t\t\t\t\tworker.terminate();\r\n\t\t\t\t\t\tworkerData.interface = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonTaskFinished() {\r\n\t\t\t\t\tworkerData.busy = false;\r\n\t\t\t\t\tonTaskFinished(workerData);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn (useWebWorkers && WEB_WORKERS_SUPPORTED ? createWebWorkerInterface : createWorkerInterface)(workerData, config);\r\n\t\t}\r\n\t}\r\n\r\n\tclass ProgressWatcherStream extends TransformStream {\r\n\r\n\t\tconstructor(readableSource, { onstart, onprogress, size, onend }, { chunkSize }) {\r\n\t\t\tlet chunkOffset = 0;\r\n\t\t\tsuper({\r\n\t\t\t\tstart() {\r\n\t\t\t\t\tif (onstart) {\r\n\t\t\t\t\t\tcallHandler(onstart, size);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tasync transform(chunk, controller) {\r\n\t\t\t\t\tchunkOffset += chunk.length;\r\n\t\t\t\t\tif (onprogress) {\r\n\t\t\t\t\t\tawait callHandler(onprogress, chunkOffset, size);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontroller.enqueue(chunk);\r\n\t\t\t\t},\r\n\t\t\t\tflush() {\r\n\t\t\t\t\treadableSource.size = chunkOffset;\r\n\t\t\t\t\tif (onend) {\r\n\t\t\t\t\t\tcallHandler(onend, chunkOffset);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, { highWaterMark: 1, size: () => chunkSize });\r\n\t\t}\r\n\t}\r\n\r\n\tasync function callHandler(handler, ...parameters) {\r\n\t\ttry {\r\n\t\t\tawait handler(...parameters);\r\n\t\t} catch (_error) {\r\n\t\t\t// ignored\r\n\t\t}\r\n\t}\r\n\r\n\tfunction createWorkerInterface(workerData, config) {\r\n\t\treturn {\r\n\t\t\trun: () => runWorker$1(workerData, config)\r\n\t\t};\r\n\t}\r\n\r\n\tfunction createWebWorkerInterface(workerData, { baseURL, chunkSize }) {\r\n\t\tif (!workerData.interface) {\r\n\t\t\tObject.assign(workerData, {\r\n\t\t\t\tworker: getWebWorker(workerData.scripts[0], baseURL, workerData),\r\n\t\t\t\tinterface: {\r\n\t\t\t\t\trun: () => runWebWorker(workerData, { chunkSize })\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn workerData.interface;\r\n\t}\r\n\r\n\tasync function runWorker$1({ options, readable, writable, onTaskFinished }, config) {\r\n\t\tconst codecStream = new CodecStream(options, config);\r\n\t\ttry {\r\n\t\t\tawait readable.pipeThrough(codecStream).pipeTo(writable, { preventClose: true, preventAbort: true });\r\n\t\t\tconst {\r\n\t\t\t\tsignature,\r\n\t\t\t\tsize\r\n\t\t\t} = codecStream;\r\n\t\t\treturn {\r\n\t\t\t\tsignature,\r\n\t\t\t\tsize\r\n\t\t\t};\r\n\t\t} finally {\r\n\t\t\tonTaskFinished();\r\n\t\t}\r\n\t}\r\n\r\n\tasync function runWebWorker(workerData, config) {\r\n\t\tlet resolveResult, rejectResult;\r\n\t\tconst result = new Promise((resolve, reject) => {\r\n\t\t\tresolveResult = resolve;\r\n\t\t\trejectResult = reject;\r\n\t\t});\r\n\t\tObject.assign(workerData, {\r\n\t\t\treader: null,\r\n\t\t\twriter: null,\r\n\t\t\tresolveResult,\r\n\t\t\trejectResult,\r\n\t\t\tresult\r\n\t\t});\r\n\t\tconst { readable, options, scripts } = workerData;\r\n\t\tconst { writable, closed } = watchClosedStream(workerData.writable);\r\n\t\tconst streamsTransferred = sendMessage({\r\n\t\t\ttype: MESSAGE_START,\r\n\t\t\tscripts: scripts.slice(1),\r\n\t\t\toptions,\r\n\t\t\tconfig,\r\n\t\t\treadable,\r\n\t\t\twritable\r\n\t\t}, workerData);\r\n\t\tif (!streamsTransferred) {\r\n\t\t\tObject.assign(workerData, {\r\n\t\t\t\treader: readable.getReader(),\r\n\t\t\t\twriter: writable.getWriter()\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst resultValue = await result;\r\n\t\ttry {\r\n\t\t\tawait writable.close();\r\n\t\t} catch (_error) {\r\n\t\t\t// ignored\r\n\t\t}\r\n\t\tawait closed;\r\n\t\treturn resultValue;\r\n\t}\r\n\r\n\tfunction watchClosedStream(writableSource) {\r\n\t\tconst writer = writableSource.getWriter();\r\n\t\tlet resolveStreamClosed;\r\n\t\tconst closed = new Promise(resolve => resolveStreamClosed = resolve);\r\n\t\tconst writable = new WritableStream({\r\n\t\t\tasync write(chunk) {\r\n\t\t\t\tawait writer.ready;\r\n\t\t\t\tawait writer.write(chunk);\r\n\t\t\t},\r\n\t\t\tclose() {\r\n\t\t\t\twriter.releaseLock();\r\n\t\t\t\tresolveStreamClosed();\r\n\t\t\t},\r\n\t\t\tabort(reason) {\r\n\t\t\t\treturn writer.abort(reason);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn { writable, closed };\r\n\t}\r\n\r\n\tlet classicWorkersSupported = true;\r\n\tlet transferStreamsSupported = true;\r\n\r\n\tfunction getWebWorker(url, baseURL, workerData) {\r\n\t\tconst workerOptions = { type: \"module\" };\r\n\t\tlet scriptUrl, worker;\r\n\t\t// deno-lint-ignore valid-typeof\r\n\t\tif (typeof url == FUNCTION_TYPE$1) {\r\n\t\t\turl = url();\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tscriptUrl = new URL(url, baseURL);\r\n\t\t} catch (_error) {\r\n\t\t\tscriptUrl = url;\r\n\t\t}\r\n\t\tif (classicWorkersSupported) {\r\n\t\t\ttry {\r\n\t\t\t\tworker = new Worker(scriptUrl);\r\n\t\t\t} catch (_error) {\r\n\t\t\t\tclassicWorkersSupported = false;\r\n\t\t\t\tworker = new Worker(scriptUrl, workerOptions);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tworker = new Worker(scriptUrl, workerOptions);\r\n\t\t}\r\n\t\tworker.addEventListener(MESSAGE_EVENT_TYPE, event => onMessage(event, workerData));\r\n\t\treturn worker;\r\n\t}\r\n\r\n\tfunction sendMessage(message, { worker, writer, onTaskFinished, transferStreams }) {\r\n\t\ttry {\r\n\t\t\tlet { value, readable, writable } = message;\r\n\t\t\tconst transferables = [];\r\n\t\t\tif (value) {\r\n\t\t\t\tconst { buffer, length } = value;\r\n\t\t\t\tif (length != buffer.byteLength) {\r\n\t\t\t\t\tvalue = new Uint8Array(value);\r\n\t\t\t\t}\r\n\t\t\t\tmessage.value = value.buffer;\r\n\t\t\t\ttransferables.push(message.value);\r\n\t\t\t}\r\n\t\t\tif (transferStreams && transferStreamsSupported) {\r\n\t\t\t\tif (readable) {\r\n\t\t\t\t\ttransferables.push(readable);\r\n\t\t\t\t}\r\n\t\t\t\tif (writable) {\r\n\t\t\t\t\ttransferables.push(writable);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tmessage.readable = message.writable = null;\r\n\t\t\t}\r\n\t\t\tif (transferables.length) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tworker.postMessage(message, transferables);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} catch (_error) {\r\n\t\t\t\t\ttransferStreamsSupported = false;\r\n\t\t\t\t\tmessage.readable = message.writable = null;\r\n\t\t\t\t\tworker.postMessage(message);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tworker.postMessage(message);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tif (writer) {\r\n\t\t\t\twriter.releaseLock();\r\n\t\t\t}\r\n\t\t\tonTaskFinished();\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function onMessage({ data }, workerData) {\r\n\t\tconst { type, value, messageId, result, error } = data;\r\n\t\tconst { reader, writer, resolveResult, rejectResult, onTaskFinished } = workerData;\r\n\t\ttry {\r\n\t\t\tif (error) {\r\n\t\t\t\tconst { message, stack, code, name } = error;\r\n\t\t\t\tconst responseError = new Error(message);\r\n\t\t\t\tObject.assign(responseError, { stack, code, name });\r\n\t\t\t\tclose(responseError);\r\n\t\t\t} else {\r\n\t\t\t\tif (type == MESSAGE_PULL) {\r\n\t\t\t\t\tconst { value, done } = await reader.read();\r\n\t\t\t\t\tsendMessage({ type: MESSAGE_DATA, value, done, messageId }, workerData);\r\n\t\t\t\t}\r\n\t\t\t\tif (type == MESSAGE_DATA) {\r\n\t\t\t\t\tawait writer.ready;\r\n\t\t\t\t\tawait writer.write(new Uint8Array(value));\r\n\t\t\t\t\tsendMessage({ type: MESSAGE_ACK_DATA, messageId }, workerData);\r\n\t\t\t\t}\r\n\t\t\t\tif (type == MESSAGE_CLOSE) {\r\n\t\t\t\t\tclose(null, result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tclose(error);\r\n\t\t}\r\n\r\n\t\tfunction close(error, result) {\r\n\t\t\tif (error) {\r\n\t\t\t\trejectResult(error);\r\n\t\t\t} else {\r\n\t\t\t\tresolveResult(result);\r\n\t\t\t}\r\n\t\t\tif (writer) {\r\n\t\t\t\twriter.releaseLock();\r\n\t\t\t}\r\n\t\t\tonTaskFinished();\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tlet pool = [];\r\n\tconst pendingRequests = [];\r\n\r\n\tlet indexWorker = 0;\r\n\r\n\tasync function runWorker(stream, workerOptions) {\r\n\t\tconst { options, config } = workerOptions;\r\n\t\tconst { transferStreams, useWebWorkers, useCompressionStream, codecType, compressed, signed, encrypted } = options;\r\n\t\tconst { workerScripts, maxWorkers, terminateWorkerTimeout } = config;\r\n\t\tworkerOptions.transferStreams = transferStreams || transferStreams === UNDEFINED_VALUE;\r\n\t\tconst streamCopy = !compressed && !signed && !encrypted && !workerOptions.transferStreams;\r\n\t\tworkerOptions.useWebWorkers = !streamCopy && (useWebWorkers || (useWebWorkers === UNDEFINED_VALUE && config.useWebWorkers));\r\n\t\tworkerOptions.scripts = workerOptions.useWebWorkers && workerScripts ? workerScripts[codecType] : [];\r\n\t\toptions.useCompressionStream = useCompressionStream || (useCompressionStream === UNDEFINED_VALUE && config.useCompressionStream);\r\n\t\tlet worker;\r\n\t\tconst workerData = pool.find(workerData => !workerData.busy);\r\n\t\tif (workerData) {\r\n\t\t\tclearTerminateTimeout(workerData);\r\n\t\t\tworker = new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\r\n\t\t} else if (pool.length < maxWorkers) {\r\n\t\t\tconst workerData = { indexWorker };\r\n\t\t\tindexWorker++;\r\n\t\t\tpool.push(workerData);\r\n\t\t\tworker = new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\r\n\t\t} else {\r\n\t\t\tworker = await new Promise(resolve => pendingRequests.push({ resolve, stream, workerOptions }));\r\n\t\t}\r\n\t\treturn worker.run();\r\n\r\n\t\tfunction onTaskFinished(workerData) {\r\n\t\t\tif (pendingRequests.length) {\r\n\t\t\t\tconst [{ resolve, stream, workerOptions }] = pendingRequests.splice(0, 1);\r\n\t\t\t\tresolve(new CodecWorker(workerData, stream, workerOptions, onTaskFinished));\r\n\t\t\t} else if (workerData.worker) {\r\n\t\t\t\tclearTerminateTimeout(workerData);\r\n\t\t\t\tif (Number.isFinite(terminateWorkerTimeout) && terminateWorkerTimeout >= 0) {\r\n\t\t\t\t\tworkerData.terminateTimeout = setTimeout(() => {\r\n\t\t\t\t\t\tpool = pool.filter(data => data != workerData);\r\n\t\t\t\t\t\tworkerData.terminate();\r\n\t\t\t\t\t}, terminateWorkerTimeout);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tpool = pool.filter(data => data != workerData);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clearTerminateTimeout(workerData) {\r\n\t\tconst { terminateTimeout } = workerData;\r\n\t\tif (terminateTimeout) {\r\n\t\t\tclearTimeout(terminateTimeout);\r\n\t\t\tworkerData.terminateTimeout = null;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction terminateWorkers() {\r\n\t\tpool.forEach(workerData => {\r\n\t\t\tclearTerminateTimeout(workerData);\r\n\t\t\tworkerData.terminate();\r\n\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst ERR_HTTP_STATUS = \"HTTP error \";\r\n\tconst ERR_HTTP_RANGE = \"HTTP Range not supported\";\r\n\tconst ERR_ITERATOR_COMPLETED_TOO_SOON = \"Writer iterator completed too soon\";\r\n\r\n\tconst CONTENT_TYPE_TEXT_PLAIN = \"text/plain\";\r\n\tconst HTTP_HEADER_CONTENT_LENGTH = \"Content-Length\";\r\n\tconst HTTP_HEADER_CONTENT_RANGE = \"Content-Range\";\r\n\tconst HTTP_HEADER_ACCEPT_RANGES = \"Accept-Ranges\";\r\n\tconst HTTP_HEADER_RANGE = \"Range\";\r\n\tconst HTTP_HEADER_CONTENT_TYPE = \"Content-Type\";\r\n\tconst HTTP_METHOD_HEAD = \"HEAD\";\r\n\tconst HTTP_METHOD_GET = \"GET\";\r\n\tconst HTTP_RANGE_UNIT = \"bytes\";\r\n\tconst DEFAULT_CHUNK_SIZE = 64 * 1024;\r\n\r\n\tconst PROPERTY_NAME_WRITABLE = \"writable\";\r\n\r\n\tclass Stream {\r\n\r\n\t\tconstructor() {\r\n\t\t\tthis.size = 0;\r\n\t\t}\r\n\r\n\t\tinit() {\r\n\t\t\tthis.initialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tclass Reader extends Stream {\r\n\r\n\t\tget readable() {\r\n\t\t\tconst reader = this;\r\n\t\t\tconst { chunkSize = DEFAULT_CHUNK_SIZE } = reader;\r\n\t\t\tconst readable = new ReadableStream({\r\n\t\t\t\tstart() {\r\n\t\t\t\t\tthis.chunkOffset = 0;\r\n\t\t\t\t},\r\n\t\t\t\tasync pull(controller) {\r\n\t\t\t\t\tconst { offset = 0, size, diskNumberStart } = readable;\r\n\t\t\t\t\tconst { chunkOffset } = this;\r\n\t\t\t\t\tcontroller.enqueue(await readUint8Array(reader, offset + chunkOffset, Math.min(chunkSize, size - chunkOffset), diskNumberStart));\r\n\t\t\t\t\tif (chunkOffset + chunkSize > size) {\r\n\t\t\t\t\t\tcontroller.close();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.chunkOffset += chunkSize;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn readable;\r\n\t\t}\r\n\t}\r\n\r\n\tclass Writer extends Stream {\r\n\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tconst writer = this;\r\n\t\t\tconst writable = new WritableStream({\r\n\t\t\t\twrite(chunk) {\r\n\t\t\t\t\treturn writer.writeUint8Array(chunk);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\r\n\t\t\t\tget() {\r\n\t\t\t\t\treturn writable;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\twriteUint8Array() {\r\n\t\t\t// abstract\r\n\t\t}\r\n\t}\r\n\r\n\tclass Data64URIReader extends Reader {\r\n\r\n\t\tconstructor(dataURI) {\r\n\t\t\tsuper();\r\n\t\t\tlet dataEnd = dataURI.length;\r\n\t\t\twhile (dataURI.charAt(dataEnd - 1) == \"=\") {\r\n\t\t\t\tdataEnd--;\r\n\t\t\t}\r\n\t\t\tconst dataStart = dataURI.indexOf(\",\") + 1;\r\n\t\t\tObject.assign(this, {\r\n\t\t\t\tdataURI,\r\n\t\t\t\tdataStart,\r\n\t\t\t\tsize: Math.floor((dataEnd - dataStart) * 0.75)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treadUint8Array(offset, length) {\r\n\t\t\tconst {\r\n\t\t\t\tdataStart,\r\n\t\t\t\tdataURI\r\n\t\t\t} = this;\r\n\t\t\tconst dataArray = new Uint8Array(length);\r\n\t\t\tconst start = Math.floor(offset / 3) * 4;\r\n\t\t\tconst bytes = atob(dataURI.substring(start + dataStart, Math.ceil((offset + length) / 3) * 4 + dataStart));\r\n\t\t\tconst delta = offset - Math.floor(start / 4) * 3;\r\n\t\t\tfor (let indexByte = delta; indexByte < delta + length; indexByte++) {\r\n\t\t\t\tdataArray[indexByte - delta] = bytes.charCodeAt(indexByte);\r\n\t\t\t}\r\n\t\t\treturn dataArray;\r\n\t\t}\r\n\t}\r\n\r\n\tclass Data64URIWriter extends Writer {\r\n\r\n\t\tconstructor(contentType) {\r\n\t\t\tsuper();\r\n\t\t\tObject.assign(this, {\r\n\t\t\t\tdata: \"data:\" + (contentType || \"\") + \";base64,\",\r\n\t\t\t\tpending: []\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\twriteUint8Array(array) {\r\n\t\t\tconst writer = this;\r\n\t\t\tlet indexArray = 0;\r\n\t\t\tlet dataString = writer.pending;\r\n\t\t\tconst delta = writer.pending.length;\r\n\t\t\twriter.pending = \"\";\r\n\t\t\tfor (indexArray = 0; indexArray < (Math.floor((delta + array.length) / 3) * 3) - delta; indexArray++) {\r\n\t\t\t\tdataString += String.fromCharCode(array[indexArray]);\r\n\t\t\t}\r\n\t\t\tfor (; indexArray < array.length; indexArray++) {\r\n\t\t\t\twriter.pending += String.fromCharCode(array[indexArray]);\r\n\t\t\t}\r\n\t\t\tif (dataString.length > 2) {\r\n\t\t\t\twriter.data += btoa(dataString);\r\n\t\t\t} else {\r\n\t\t\t\twriter.pending = dataString;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetData() {\r\n\t\t\treturn this.data + btoa(this.pending);\r\n\t\t}\r\n\t}\r\n\r\n\tclass BlobReader extends Reader {\r\n\r\n\t\tconstructor(blob) {\r\n\t\t\tsuper();\r\n\t\t\tObject.assign(this, {\r\n\t\t\t\tblob,\r\n\t\t\t\tsize: blob.size\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tasync readUint8Array(offset, length) {\r\n\t\t\tconst reader = this;\r\n\t\t\tconst offsetEnd = offset + length;\r\n\t\t\tconst blob = offset || offsetEnd < reader.size ? reader.blob.slice(offset, offsetEnd) : reader.blob;\r\n\t\t\treturn new Uint8Array(await blob.arrayBuffer());\r\n\t\t}\r\n\t}\r\n\r\n\tclass BlobWriter extends Stream {\r\n\r\n\t\tconstructor(contentType) {\r\n\t\t\tsuper();\r\n\t\t\tconst writer = this;\r\n\t\t\tconst transformStream = new TransformStream();\r\n\t\t\tconst headers = [];\r\n\t\t\tif (contentType) {\r\n\t\t\t\theaders.push([HTTP_HEADER_CONTENT_TYPE, contentType]);\r\n\t\t\t}\r\n\t\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\r\n\t\t\t\tget() {\r\n\t\t\t\t\treturn transformStream.writable;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\twriter.blob = new Response(transformStream.readable, { headers }).blob();\r\n\t\t}\r\n\r\n\t\tgetData() {\r\n\t\t\treturn this.blob;\r\n\t\t}\r\n\t}\r\n\r\n\tclass TextReader extends BlobReader {\r\n\r\n\t\tconstructor(text) {\r\n\t\t\tsuper(new Blob([text], { type: CONTENT_TYPE_TEXT_PLAIN }));\r\n\t\t}\r\n\t}\r\n\r\n\tclass TextWriter extends BlobWriter {\r\n\r\n\t\tconstructor(encoding) {\r\n\t\t\tsuper(encoding);\r\n\t\t\tObject.assign(this, {\r\n\t\t\t\tencoding,\r\n\t\t\t\tutf8: !encoding || encoding.toLowerCase() == \"utf-8\"\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tasync getData() {\r\n\t\t\tconst {\r\n\t\t\t\tencoding,\r\n\t\t\t\tutf8\r\n\t\t\t} = this;\r\n\t\t\tconst blob = await super.getData();\r\n\t\t\tif (blob.text && utf8) {\r\n\t\t\t\treturn blob.text();\r\n\t\t\t} else {\r\n\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tObject.assign(reader, {\r\n\t\t\t\t\t\tonload: ({ target }) => resolve(target.result),\r\n\t\t\t\t\t\tonerror: () => reject(reader.error)\r\n\t\t\t\t\t});\r\n\t\t\t\t\treader.readAsText(blob, encoding);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclass FetchReader extends Reader {\r\n\r\n\t\tconstructor(url, options) {\r\n\t\t\tsuper();\r\n\t\t\tcreateHtpReader(this, url, options);\r\n\t\t}\r\n\r\n\t\tasync init() {\r\n\t\t\tawait initHttpReader(this, sendFetchRequest, getFetchRequestData);\r\n\t\t\tsuper.init();\r\n\t\t}\r\n\r\n\t\treadUint8Array(index, length) {\r\n\t\t\treturn readUint8ArrayHttpReader(this, index, length, sendFetchRequest, getFetchRequestData);\r\n\t\t}\r\n\t}\r\n\r\n\tclass XHRReader extends Reader {\r\n\r\n\t\tconstructor(url, options) {\r\n\t\t\tsuper();\r\n\t\t\tcreateHtpReader(this, url, options);\r\n\t\t}\r\n\r\n\t\tasync init() {\r\n\t\t\tawait initHttpReader(this, sendXMLHttpRequest, getXMLHttpRequestData);\r\n\t\t\tsuper.init();\r\n\t\t}\r\n\r\n\t\treadUint8Array(index, length) {\r\n\t\t\treturn readUint8ArrayHttpReader(this, index, length, sendXMLHttpRequest, getXMLHttpRequestData);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction createHtpReader(httpReader, url, options) {\r\n\t\tconst {\r\n\t\t\tpreventHeadRequest,\r\n\t\t\tuseRangeHeader,\r\n\t\t\tforceRangeRequests\r\n\t\t} = options;\r\n\t\toptions = Object.assign({}, options);\r\n\t\tdelete options.preventHeadRequest;\r\n\t\tdelete options.useRangeHeader;\r\n\t\tdelete options.forceRangeRequests;\r\n\t\tdelete options.useXHR;\r\n\t\tObject.assign(httpReader, {\r\n\t\t\turl,\r\n\t\t\toptions,\r\n\t\t\tpreventHeadRequest,\r\n\t\t\tuseRangeHeader,\r\n\t\t\tforceRangeRequests\r\n\t\t});\r\n\t}\r\n\r\n\tasync function initHttpReader(httpReader, sendRequest, getRequestData) {\r\n\t\tconst {\r\n\t\t\turl,\r\n\t\t\tuseRangeHeader,\r\n\t\t\tforceRangeRequests\r\n\t\t} = httpReader;\r\n\t\tif (isHttpFamily(url) && (useRangeHeader || forceRangeRequests)) {\r\n\t\t\tconst { headers } = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader));\r\n\t\t\tif (!forceRangeRequests && headers.get(HTTP_HEADER_ACCEPT_RANGES) != HTTP_RANGE_UNIT) {\r\n\t\t\t\tthrow new Error(ERR_HTTP_RANGE);\r\n\t\t\t} else {\r\n\t\t\t\tlet contentSize;\r\n\t\t\t\tconst contentRangeHeader = headers.get(HTTP_HEADER_CONTENT_RANGE);\r\n\t\t\t\tif (contentRangeHeader) {\r\n\t\t\t\t\tconst splitHeader = contentRangeHeader.trim().split(/\\s*\\/\\s*/);\r\n\t\t\t\t\tif (splitHeader.length) {\r\n\t\t\t\t\t\tconst headerValue = splitHeader[1];\r\n\t\t\t\t\t\tif (headerValue && headerValue != \"*\") {\r\n\t\t\t\t\t\t\tcontentSize = Number(headerValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (contentSize === UNDEFINED_VALUE) {\r\n\t\t\t\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\r\n\t\t\t\t} else {\r\n\t\t\t\t\thttpReader.size = contentSize;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function readUint8ArrayHttpReader(httpReader, index, length, sendRequest, getRequestData) {\r\n\t\tconst {\r\n\t\t\tuseRangeHeader,\r\n\t\t\tforceRangeRequests,\r\n\t\t\toptions\r\n\t\t} = httpReader;\r\n\t\tif (useRangeHeader || forceRangeRequests) {\r\n\t\t\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader, index, length));\r\n\t\t\tif (response.status != 206) {\r\n\t\t\t\tthrow new Error(ERR_HTTP_RANGE);\r\n\t\t\t}\r\n\t\t\treturn new Uint8Array(await response.arrayBuffer());\r\n\t\t} else {\r\n\t\t\tconst { data } = httpReader;\r\n\t\t\tif (!data) {\r\n\t\t\t\tawait getRequestData(httpReader, options);\r\n\t\t\t}\r\n\t\t\treturn new Uint8Array(httpReader.data.subarray(index, index + length));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getRangeHeaders(httpReader, index = 0, length = 1) {\r\n\t\treturn Object.assign({}, getHeaders(httpReader), { [HTTP_HEADER_RANGE]: HTTP_RANGE_UNIT + \"=\" + index + \"-\" + (index + length - 1) });\r\n\t}\r\n\r\n\tfunction getHeaders({ options }) {\r\n\t\tconst { headers } = options;\r\n\t\tif (headers) {\r\n\t\t\tif (Symbol.iterator in headers) {\r\n\t\t\t\treturn Object.fromEntries(headers);\r\n\t\t\t} else {\r\n\t\t\t\treturn headers;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function getFetchRequestData(httpReader) {\r\n\t\tawait getRequestData(httpReader, sendFetchRequest);\r\n\t}\r\n\r\n\tasync function getXMLHttpRequestData(httpReader) {\r\n\t\tawait getRequestData(httpReader, sendXMLHttpRequest);\r\n\t}\r\n\r\n\tasync function getRequestData(httpReader, sendRequest) {\r\n\t\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getHeaders(httpReader));\r\n\t\thttpReader.data = new Uint8Array(await response.arrayBuffer());\r\n\t\tif (!httpReader.size) {\r\n\t\t\thttpReader.size = httpReader.data.length;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function getContentLength(httpReader, sendRequest, getRequestData) {\r\n\t\tif (httpReader.preventHeadRequest) {\r\n\t\t\tawait getRequestData(httpReader, httpReader.options);\r\n\t\t} else {\r\n\t\t\tconst response = await sendRequest(HTTP_METHOD_HEAD, httpReader, getHeaders(httpReader));\r\n\t\t\tconst contentLength = response.headers.get(HTTP_HEADER_CONTENT_LENGTH);\r\n\t\t\tif (contentLength) {\r\n\t\t\t\thttpReader.size = Number(contentLength);\r\n\t\t\t} else {\r\n\t\t\t\tawait getRequestData(httpReader, httpReader.options);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function sendFetchRequest(method, { options, url }, headers) {\r\n\t\tconst response = await fetch(url, Object.assign({}, options, { method, headers }));\r\n\t\tif (response.status < 400) {\r\n\t\t\treturn response;\r\n\t\t} else {\r\n\t\t\tthrow response.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (response.statusText || response.status));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction sendXMLHttpRequest(method, { url }, headers) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst request = new XMLHttpRequest();\r\n\t\t\trequest.addEventListener(\"load\", () => {\r\n\t\t\t\tif (request.status < 400) {\r\n\t\t\t\t\tconst headers = [];\r\n\t\t\t\t\trequest.getAllResponseHeaders().trim().split(/[\\r\\n]+/).forEach(header => {\r\n\t\t\t\t\t\tconst splitHeader = header.trim().split(/\\s*:\\s*/);\r\n\t\t\t\t\t\tsplitHeader[0] = splitHeader[0].trim().replace(/^[a-z]|-[a-z]/g, value => value.toUpperCase());\r\n\t\t\t\t\t\theaders.push(splitHeader);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresolve({\r\n\t\t\t\t\t\tstatus: request.status,\r\n\t\t\t\t\t\tarrayBuffer: () => request.response,\r\n\t\t\t\t\t\theaders: new Map(headers)\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject(request.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (request.statusText || request.status)));\r\n\t\t\t\t}\r\n\t\t\t}, false);\r\n\t\t\trequest.addEventListener(\"error\", event => reject(event.detail.error), false);\r\n\t\t\trequest.open(method, url);\r\n\t\t\tif (headers) {\r\n\t\t\t\tfor (const entry of Object.entries(headers)) {\r\n\t\t\t\t\trequest.setRequestHeader(entry[0], entry[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trequest.responseType = \"arraybuffer\";\r\n\t\t\trequest.send();\r\n\t\t});\r\n\t}\r\n\r\n\tclass HttpReader extends Reader {\r\n\r\n\t\tconstructor(url, options = {}) {\r\n\t\t\tsuper();\r\n\t\t\tObject.assign(this, {\r\n\t\t\t\turl,\r\n\t\t\t\treader: options.useXHR ? new XHRReader(url, options) : new FetchReader(url, options)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tset size(value) {\r\n\t\t\t// ignored\r\n\t\t}\r\n\r\n\t\tget size() {\r\n\t\t\treturn this.reader.size;\r\n\t\t}\r\n\r\n\t\tasync init() {\r\n\t\t\tawait this.reader.init();\r\n\t\t\tsuper.init();\r\n\t\t}\r\n\r\n\t\treadUint8Array(index, length) {\r\n\t\t\treturn this.reader.readUint8Array(index, length);\r\n\t\t}\r\n\t}\r\n\r\n\tclass HttpRangeReader extends HttpReader {\r\n\r\n\t\tconstructor(url, options = {}) {\r\n\t\t\toptions.useRangeHeader = true;\r\n\t\t\tsuper(url, options);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tclass Uint8ArrayReader extends Reader {\r\n\r\n\t\tconstructor(array) {\r\n\t\t\tsuper();\r\n\t\t\tObject.assign(this, {\r\n\t\t\t\tarray,\r\n\t\t\t\tsize: array.length\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treadUint8Array(index, length) {\r\n\t\t\treturn this.array.slice(index, index + length);\r\n\t\t}\r\n\t}\r\n\r\n\tclass Uint8ArrayWriter extends Writer {\r\n\r\n\t\tinit(initSize = 0) {\r\n\t\t\tObject.assign(this, {\r\n\t\t\t\toffset: 0,\r\n\t\t\t\tarray: new Uint8Array(initSize)\r\n\t\t\t});\r\n\t\t\tsuper.init();\r\n\t\t}\r\n\r\n\t\twriteUint8Array(array) {\r\n\t\t\tconst writer = this;\r\n\t\t\tif (writer.offset + array.length > writer.array.length) {\r\n\t\t\t\tconst previousArray = writer.array;\r\n\t\t\t\twriter.array = new Uint8Array(previousArray.length + array.length);\r\n\t\t\t\twriter.array.set(previousArray);\r\n\t\t\t}\r\n\t\t\twriter.array.set(array, writer.offset);\r\n\t\t\twriter.offset += array.length;\r\n\t\t}\r\n\r\n\t\tgetData() {\r\n\t\t\treturn this.array;\r\n\t\t}\r\n\t}\r\n\r\n\tclass SplitDataReader extends Reader {\r\n\r\n\t\tconstructor(readers) {\r\n\t\t\tsuper();\r\n\t\t\tthis.readers = readers;\r\n\t\t}\r\n\r\n\t\tasync init() {\r\n\t\t\tconst reader = this;\r\n\t\t\tconst { readers } = reader;\r\n\t\t\treader.lastDiskNumber = 0;\r\n\t\t\tawait Promise.all(readers.map(async diskReader => {\r\n\t\t\t\tawait diskReader.init();\r\n\t\t\t\treader.size += diskReader.size;\r\n\t\t\t}));\r\n\t\t\tsuper.init();\r\n\t\t}\r\n\r\n\t\tasync readUint8Array(offset, length, diskNumber = 0) {\r\n\t\t\tconst reader = this;\r\n\t\t\tconst { readers } = this;\r\n\t\t\tlet result;\r\n\t\t\tlet currentDiskNumber = diskNumber;\r\n\t\t\tif (currentDiskNumber == -1) {\r\n\t\t\t\tcurrentDiskNumber = readers.length - 1;\r\n\t\t\t}\r\n\t\t\tlet currentReaderOffset = offset;\r\n\t\t\twhile (currentReaderOffset >= readers[currentDiskNumber].size) {\r\n\t\t\t\tcurrentReaderOffset -= readers[currentDiskNumber].size;\r\n\t\t\t\tcurrentDiskNumber++;\r\n\t\t\t}\r\n\t\t\tconst currentReader = readers[currentDiskNumber];\r\n\t\t\tconst currentReaderSize = currentReader.size;\r\n\t\t\tif (currentReaderOffset + length <= currentReaderSize) {\r\n\t\t\t\tresult = await readUint8Array(currentReader, currentReaderOffset, length);\r\n\t\t\t} else {\r\n\t\t\t\tconst chunkLength = currentReaderSize - currentReaderOffset;\r\n\t\t\t\tresult = new Uint8Array(length);\r\n\t\t\t\tresult.set(await readUint8Array(currentReader, currentReaderOffset, chunkLength));\r\n\t\t\t\tresult.set(await reader.readUint8Array(offset + chunkLength, length - chunkLength, diskNumber), chunkLength);\r\n\t\t\t}\r\n\t\t\treader.lastDiskNumber = Math.max(currentDiskNumber, reader.lastDiskNumber);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tclass SplitDataWriter extends Stream {\r\n\r\n\t\tconstructor(writerGenerator, maxSize = 4294967295) {\r\n\t\t\tsuper();\r\n\t\t\tconst zipWriter = this;\r\n\t\t\tObject.assign(zipWriter, {\r\n\t\t\t\tdiskNumber: 0,\r\n\t\t\t\tdiskOffset: 0,\r\n\t\t\t\tsize: 0,\r\n\t\t\t\tmaxSize,\r\n\t\t\t\tavailableSize: maxSize\r\n\t\t\t});\r\n\t\t\tlet diskSourceWriter, diskWritable, diskWriter;\r\n\t\t\tconst writable = new WritableStream({\r\n\t\t\t\tasync write(chunk) {\r\n\t\t\t\t\tconst { availableSize } = zipWriter;\r\n\t\t\t\t\tif (!diskWriter) {\r\n\t\t\t\t\t\tconst { value, done } = await writerGenerator.next();\r\n\t\t\t\t\t\tif (done && !value) {\r\n\t\t\t\t\t\t\tthrow new Error(ERR_ITERATOR_COMPLETED_TOO_SOON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdiskSourceWriter = value;\r\n\t\t\t\t\t\t\tdiskSourceWriter.size = 0;\r\n\t\t\t\t\t\t\tif (diskSourceWriter.maxSize) {\r\n\t\t\t\t\t\t\t\tzipWriter.maxSize = diskSourceWriter.maxSize;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tzipWriter.availableSize = zipWriter.maxSize;\r\n\t\t\t\t\t\t\tawait initStream(diskSourceWriter);\r\n\t\t\t\t\t\t\tdiskWritable = value.writable;\r\n\t\t\t\t\t\t\tdiskWriter = diskWritable.getWriter();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tawait this.write(chunk);\r\n\t\t\t\t\t} else if (chunk.length >= availableSize) {\r\n\t\t\t\t\t\tawait writeChunk(chunk.slice(0, availableSize));\r\n\t\t\t\t\t\tawait closeDisk();\r\n\t\t\t\t\t\tzipWriter.diskOffset += diskSourceWriter.size;\r\n\t\t\t\t\t\tzipWriter.diskNumber++;\r\n\t\t\t\t\t\tdiskWriter = null;\r\n\t\t\t\t\t\tawait this.write(chunk.slice(availableSize));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait writeChunk(chunk);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tasync close() {\r\n\t\t\t\t\tawait diskWriter.ready;\r\n\t\t\t\t\tawait closeDisk();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tObject.defineProperty(zipWriter, PROPERTY_NAME_WRITABLE, {\r\n\t\t\t\tget() {\r\n\t\t\t\t\treturn writable;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tasync function writeChunk(chunk) {\r\n\t\t\t\tconst chunkLength = chunk.length;\r\n\t\t\t\tif (chunkLength) {\r\n\t\t\t\t\tawait diskWriter.ready;\r\n\t\t\t\t\tawait diskWriter.write(chunk);\r\n\t\t\t\t\tdiskSourceWriter.size += chunkLength;\r\n\t\t\t\t\tzipWriter.size += chunkLength;\r\n\t\t\t\t\tzipWriter.availableSize -= chunkLength;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tasync function closeDisk() {\r\n\t\t\t\tdiskWritable.size = diskSourceWriter.size;\r\n\t\t\t\tawait diskWriter.close();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isHttpFamily(url) {\r\n\t\tconst { baseURL } = getConfiguration();\r\n\t\tconst { protocol } = new URL(url, baseURL);\r\n\t\treturn protocol == \"http:\" || protocol == \"https:\";\r\n\t}\r\n\r\n\tasync function initStream(stream, initSize) {\r\n\t\tif (stream.init && !stream.initialized) {\r\n\t\t\tawait stream.init(initSize);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initReader(reader) {\r\n\t\tif (Array.isArray(reader)) {\r\n\t\t\treader = new SplitDataReader(reader);\r\n\t\t}\r\n\t\tif (reader instanceof ReadableStream) {\r\n\t\t\treader = {\r\n\t\t\t\treadable: reader\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn reader;\r\n\t}\r\n\r\n\tfunction initWriter(writer) {\r\n\t\tif (writer.writable === UNDEFINED_VALUE && typeof writer.next == FUNCTION_TYPE$1) {\r\n\t\t\twriter = new SplitDataWriter(writer);\r\n\t\t}\r\n\t\tif (writer instanceof WritableStream) {\r\n\t\t\twriter = {\r\n\t\t\t\twritable: writer\r\n\t\t\t};\r\n\t\t}\r\n\t\tconst { writable } = writer;\r\n\t\tif (writable.size === UNDEFINED_VALUE) {\r\n\t\t\twritable.size = 0;\r\n\t\t}\r\n\t\tconst splitZipFile = writer instanceof SplitDataWriter;\r\n\t\tif (!splitZipFile) {\r\n\t\t\tObject.assign(writer, {\r\n\t\t\t\tdiskNumber: 0,\r\n\t\t\t\tdiskOffset: 0,\r\n\t\t\t\tavailableSize: Infinity,\r\n\t\t\t\tmaxSize: Infinity\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn writer;\r\n\t}\r\n\r\n\tfunction readUint8Array(reader, offset, size, diskNumber) {\r\n\t\treturn reader.readUint8Array(offset, size, diskNumber);\r\n\t}\r\n\r\n\tconst SplitZipReader = SplitDataReader;\r\n\tconst SplitZipWriter = SplitDataWriter;\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\t/* global TextDecoder */\r\n\r\n\tconst CP437 = \"\\0☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \".split(\"\");\r\n\tconst VALID_CP437 = CP437.length == 256;\r\n\r\n\tfunction decodeCP437(stringValue) {\r\n\t\tif (VALID_CP437) {\r\n\t\t\tlet result = \"\";\r\n\t\t\tfor (let indexCharacter = 0; indexCharacter < stringValue.length; indexCharacter++) {\r\n\t\t\t\tresult += CP437[stringValue[indexCharacter]];\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t} else {\r\n\t\t\treturn new TextDecoder().decode(stringValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tfunction decodeText(value, encoding) {\r\n\t\tif (encoding && encoding.trim().toLowerCase() == \"cp437\") {\r\n\t\t\treturn decodeCP437(value);\r\n\t\t} else {\r\n\t\t\treturn new TextDecoder(encoding).decode(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst PROPERTY_NAME_FILENAME = \"filename\";\r\n\tconst PROPERTY_NAME_RAW_FILENAME = \"rawFilename\";\r\n\tconst PROPERTY_NAME_COMMENT = \"comment\";\r\n\tconst PROPERTY_NAME_RAW_COMMENT = \"rawComment\";\r\n\tconst PROPERTY_NAME_UNCOMPPRESSED_SIZE = \"uncompressedSize\";\r\n\tconst PROPERTY_NAME_COMPPRESSED_SIZE = \"compressedSize\";\r\n\tconst PROPERTY_NAME_OFFSET = \"offset\";\r\n\tconst PROPERTY_NAME_DISK_NUMBER_START = \"diskNumberStart\";\r\n\tconst PROPERTY_NAME_LAST_MODIFICATION_DATE = \"lastModDate\";\r\n\tconst PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE = \"rawLastModDate\";\r\n\tconst PROPERTY_NAME_LAST_ACCESS_DATE = \"lastAccessDate\";\r\n\tconst PROPERTY_NAME_RAW_LAST_ACCESS_DATE = \"rawLastAccessDate\";\r\n\tconst PROPERTY_NAME_CREATION_DATE = \"creationDate\";\r\n\tconst PROPERTY_NAME_RAW_CREATION_DATE = \"rawCreationDate\";\r\n\tconst PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE = \"internalFileAttribute\";\r\n\tconst PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE = \"externalFileAttribute\";\r\n\tconst PROPERTY_NAME_MS_DOS_COMPATIBLE = \"msDosCompatible\";\r\n\tconst PROPERTY_NAME_ZIP64 = \"zip64\";\r\n\r\n\tconst PROPERTY_NAMES = [\r\n\t\tPROPERTY_NAME_FILENAME, PROPERTY_NAME_RAW_FILENAME, PROPERTY_NAME_COMPPRESSED_SIZE, PROPERTY_NAME_UNCOMPPRESSED_SIZE,\r\n\t\tPROPERTY_NAME_LAST_MODIFICATION_DATE, PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE, PROPERTY_NAME_COMMENT, PROPERTY_NAME_RAW_COMMENT,\r\n\t\tPROPERTY_NAME_LAST_ACCESS_DATE, PROPERTY_NAME_CREATION_DATE, PROPERTY_NAME_OFFSET, PROPERTY_NAME_DISK_NUMBER_START,\r\n\t\tPROPERTY_NAME_DISK_NUMBER_START, PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE, PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\r\n\t\tPROPERTY_NAME_MS_DOS_COMPATIBLE, PROPERTY_NAME_ZIP64,\r\n\t\t\"directory\", \"bitFlag\", \"encrypted\", \"signature\", \"filenameUTF8\", \"commentUTF8\", \"compressionMethod\", \"version\", \"versionMadeBy\",\r\n\t\t\"extraField\", \"rawExtraField\", \"extraFieldZip64\", \"extraFieldUnicodePath\", \"extraFieldUnicodeComment\", \"extraFieldAES\", \"extraFieldNTFS\",\r\n\t\t\"extraFieldExtendedTimestamp\"];\r\n\r\n\tclass Entry {\r\n\r\n\t\tconstructor(data) {\r\n\t\t\tPROPERTY_NAMES.forEach(name => this[name] = data[name]);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst ERR_BAD_FORMAT = \"File format is not recognized\";\r\n\tconst ERR_EOCDR_NOT_FOUND = \"End of central directory not found\";\r\n\tconst ERR_EOCDR_ZIP64_NOT_FOUND = \"End of Zip64 central directory not found\";\r\n\tconst ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND = \"End of Zip64 central directory locator not found\";\r\n\tconst ERR_CENTRAL_DIRECTORY_NOT_FOUND = \"Central directory header not found\";\r\n\tconst ERR_LOCAL_FILE_HEADER_NOT_FOUND = \"Local file header not found\";\r\n\tconst ERR_EXTRAFIELD_ZIP64_NOT_FOUND = \"Zip64 extra field not found\";\r\n\tconst ERR_ENCRYPTED = \"File contains encrypted entry\";\r\n\tconst ERR_UNSUPPORTED_ENCRYPTION = \"Encryption method not supported\";\r\n\tconst ERR_UNSUPPORTED_COMPRESSION = \"Compression method not supported\";\r\n\tconst ERR_SPLIT_ZIP_FILE = \"Split zip file\";\r\n\tconst CHARSET_UTF8 = \"utf-8\";\r\n\tconst CHARSET_CP437 = \"cp437\";\r\n\tconst ZIP64_PROPERTIES = [\r\n\t\t[PROPERTY_NAME_UNCOMPPRESSED_SIZE, MAX_32_BITS],\r\n\t\t[PROPERTY_NAME_COMPPRESSED_SIZE, MAX_32_BITS],\r\n\t\t[PROPERTY_NAME_OFFSET, MAX_32_BITS],\r\n\t\t[PROPERTY_NAME_DISK_NUMBER_START, MAX_16_BITS]\r\n\t];\r\n\tconst ZIP64_EXTRACTION = {\r\n\t\t[MAX_16_BITS]: {\r\n\t\t\tgetValue: getUint32,\r\n\t\t\tbytes: 4\r\n\t\t},\r\n\t\t[MAX_32_BITS]: {\r\n\t\t\tgetValue: getBigUint64,\r\n\t\t\tbytes: 8\r\n\t\t}\r\n\t};\r\n\r\n\tclass ZipReader {\r\n\r\n\t\tconstructor(reader, options = {}) {\r\n\t\t\tObject.assign(this, {\r\n\t\t\t\treader: initReader(reader),\r\n\t\t\t\toptions,\r\n\t\t\t\tconfig: getConfiguration()\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tasync* getEntriesGenerator(options = {}) {\r\n\t\t\tconst zipReader = this;\r\n\t\t\tlet { reader } = zipReader;\r\n\t\t\tconst { config } = zipReader;\r\n\t\t\tawait initStream(reader);\r\n\t\t\tif (reader.size === UNDEFINED_VALUE || !reader.readUint8Array) {\r\n\t\t\t\treader = new BlobReader(await new Response(reader.readable).blob());\r\n\t\t\t\tawait initStream(reader);\r\n\t\t\t}\r\n\t\t\tif (reader.size < END_OF_CENTRAL_DIR_LENGTH) {\r\n\t\t\t\tthrow new Error(ERR_BAD_FORMAT);\r\n\t\t\t}\r\n\t\t\treader.chunkSize = getChunkSize(config);\r\n\t\t\tconst endOfDirectoryInfo = await seekSignature(reader, END_OF_CENTRAL_DIR_SIGNATURE, reader.size, END_OF_CENTRAL_DIR_LENGTH, MAX_16_BITS * 16);\r\n\t\t\tif (!endOfDirectoryInfo) {\r\n\t\t\t\tconst signatureArray = await readUint8Array(reader, 0, 4);\r\n\t\t\t\tconst signatureView = getDataView$1(signatureArray);\r\n\t\t\t\tif (getUint32(signatureView) == SPLIT_ZIP_FILE_SIGNATURE) {\r\n\t\t\t\t\tthrow new Error(ERR_SPLIT_ZIP_FILE);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(ERR_EOCDR_NOT_FOUND);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst endOfDirectoryView = getDataView$1(endOfDirectoryInfo);\r\n\t\t\tlet directoryDataLength = getUint32(endOfDirectoryView, 12);\r\n\t\t\tlet directoryDataOffset = getUint32(endOfDirectoryView, 16);\r\n\t\t\tconst commentOffset = endOfDirectoryInfo.offset;\r\n\t\t\tconst commentLength = getUint16(endOfDirectoryView, 20);\r\n\t\t\tconst appendedDataOffset = commentOffset + END_OF_CENTRAL_DIR_LENGTH + commentLength;\r\n\t\t\tlet lastDiskNumber = getUint16(endOfDirectoryView, 4);\r\n\t\t\tconst expectedLastDiskNumber = reader.lastDiskNumber || 0;\r\n\t\t\tlet diskNumber = getUint16(endOfDirectoryView, 6);\r\n\t\t\tlet filesLength = getUint16(endOfDirectoryView, 8);\r\n\t\t\tlet prependedDataLength = 0;\r\n\t\t\tlet startOffset = 0;\r\n\t\t\tif (directoryDataOffset == MAX_32_BITS || directoryDataLength == MAX_32_BITS || filesLength == MAX_16_BITS || diskNumber == MAX_16_BITS) {\r\n\t\t\t\tconst endOfDirectoryLocatorArray = await readUint8Array(reader, endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH, ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH);\r\n\t\t\t\tconst endOfDirectoryLocatorView = getDataView$1(endOfDirectoryLocatorArray);\r\n\t\t\t\tif (getUint32(endOfDirectoryLocatorView, 0) != ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE) {\r\n\t\t\t\t\tthrow new Error(ERR_EOCDR_ZIP64_NOT_FOUND);\r\n\t\t\t\t}\r\n\t\t\t\tdirectoryDataOffset = getBigUint64(endOfDirectoryLocatorView, 8);\r\n\t\t\t\tlet endOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH, -1);\r\n\t\t\t\tlet endOfDirectoryView = getDataView$1(endOfDirectoryArray);\r\n\t\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH - ZIP64_END_OF_CENTRAL_DIR_LENGTH;\r\n\t\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\r\n\t\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\r\n\t\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\r\n\t\t\t\t\tprependedDataLength = directoryDataOffset - originalDirectoryDataOffset;\r\n\t\t\t\t\tendOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH, -1);\r\n\t\t\t\t\tendOfDirectoryView = getDataView$1(endOfDirectoryArray);\r\n\t\t\t\t}\r\n\t\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE) {\r\n\t\t\t\t\tthrow new Error(ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND);\r\n\t\t\t\t}\r\n\t\t\t\tif (lastDiskNumber == MAX_16_BITS) {\r\n\t\t\t\t\tlastDiskNumber = getUint32(endOfDirectoryView, 16);\r\n\t\t\t\t}\r\n\t\t\t\tif (diskNumber == MAX_16_BITS) {\r\n\t\t\t\t\tdiskNumber = getUint32(endOfDirectoryView, 20);\r\n\t\t\t\t}\r\n\t\t\t\tif (filesLength == MAX_16_BITS) {\r\n\t\t\t\t\tfilesLength = getBigUint64(endOfDirectoryView, 32);\r\n\t\t\t\t}\r\n\t\t\t\tif (directoryDataLength == MAX_32_BITS) {\r\n\t\t\t\t\tdirectoryDataLength = getBigUint64(endOfDirectoryView, 40);\r\n\t\t\t\t}\r\n\t\t\t\tdirectoryDataOffset -= directoryDataLength;\r\n\t\t\t}\r\n\t\t\tif (expectedLastDiskNumber != lastDiskNumber) {\r\n\t\t\t\tthrow new Error(ERR_SPLIT_ZIP_FILE);\r\n\t\t\t}\r\n\t\t\tif (directoryDataOffset < 0 || directoryDataOffset >= reader.size) {\r\n\t\t\t\tthrow new Error(ERR_BAD_FORMAT);\r\n\t\t\t}\r\n\t\t\tlet offset = 0;\r\n\t\t\tlet directoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\r\n\t\t\tlet directoryView = getDataView$1(directoryArray);\r\n\t\t\tif (directoryDataLength) {\r\n\t\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - directoryDataLength;\r\n\t\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\r\n\t\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\r\n\t\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\r\n\t\t\t\t\tprependedDataLength = directoryDataOffset - originalDirectoryDataOffset;\r\n\t\t\t\t\tdirectoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\r\n\t\t\t\t\tdirectoryView = getDataView$1(directoryArray);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (directoryDataOffset < 0 || directoryDataOffset >= reader.size) {\r\n\t\t\t\tthrow new Error(ERR_BAD_FORMAT);\r\n\t\t\t}\r\n\t\t\tconst filenameEncoding = getOptionValue$1(zipReader, options, \"filenameEncoding\");\r\n\t\t\tconst commentEncoding = getOptionValue$1(zipReader, options, \"commentEncoding\");\r\n\t\t\tfor (let indexFile = 0; indexFile < filesLength; indexFile++) {\r\n\t\t\t\tconst fileEntry = new ZipEntry(reader, config, zipReader.options);\r\n\t\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE) {\r\n\t\t\t\t\tthrow new Error(ERR_CENTRAL_DIRECTORY_NOT_FOUND);\r\n\t\t\t\t}\r\n\t\t\t\treadCommonHeader(fileEntry, directoryView, offset + 6);\r\n\t\t\t\tconst languageEncodingFlag = Boolean(fileEntry.bitFlag.languageEncodingFlag);\r\n\t\t\t\tconst filenameOffset = offset + 46;\r\n\t\t\t\tconst extraFieldOffset = filenameOffset + fileEntry.filenameLength;\r\n\t\t\t\tconst commentOffset = extraFieldOffset + fileEntry.extraFieldLength;\r\n\t\t\t\tconst versionMadeBy = getUint16(directoryView, offset + 4);\r\n\t\t\t\tconst msDosCompatible = (versionMadeBy & 0) == 0;\r\n\t\t\t\tconst rawFilename = directoryArray.subarray(filenameOffset, extraFieldOffset);\r\n\t\t\t\tconst commentLength = getUint16(directoryView, offset + 32);\r\n\t\t\t\tconst endOffset = commentOffset + commentLength;\r\n\t\t\t\tconst rawComment = directoryArray.subarray(commentOffset, endOffset);\r\n\t\t\t\tconst filenameUTF8 = languageEncodingFlag;\r\n\t\t\t\tconst commentUTF8 = languageEncodingFlag;\r\n\t\t\t\tconst directory = msDosCompatible && ((getUint8(directoryView, offset + 38) & FILE_ATTR_MSDOS_DIR_MASK) == FILE_ATTR_MSDOS_DIR_MASK);\r\n\t\t\t\tconst offsetFileEntry = getUint32(directoryView, offset + 42) + prependedDataLength;\r\n\t\t\t\tObject.assign(fileEntry, {\r\n\t\t\t\t\tversionMadeBy,\r\n\t\t\t\t\tmsDosCompatible,\r\n\t\t\t\t\tcompressedSize: 0,\r\n\t\t\t\t\tuncompressedSize: 0,\r\n\t\t\t\t\tcommentLength,\r\n\t\t\t\t\tdirectory,\r\n\t\t\t\t\toffset: offsetFileEntry,\r\n\t\t\t\t\tdiskNumberStart: getUint16(directoryView, offset + 34),\r\n\t\t\t\t\tinternalFileAttribute: getUint16(directoryView, offset + 36),\r\n\t\t\t\t\texternalFileAttribute: getUint32(directoryView, offset + 38),\r\n\t\t\t\t\trawFilename,\r\n\t\t\t\t\tfilenameUTF8,\r\n\t\t\t\t\tcommentUTF8,\r\n\t\t\t\t\trawExtraField: directoryArray.subarray(extraFieldOffset, commentOffset)\r\n\t\t\t\t});\r\n\t\t\t\tconst [filename, comment] = await Promise.all([\r\n\t\t\t\t\tdecodeText(rawFilename, filenameUTF8 ? CHARSET_UTF8 : filenameEncoding || CHARSET_CP437),\r\n\t\t\t\t\tdecodeText(rawComment, commentUTF8 ? CHARSET_UTF8 : commentEncoding || CHARSET_CP437)\r\n\t\t\t\t]);\r\n\t\t\t\tObject.assign(fileEntry, {\r\n\t\t\t\t\trawComment,\r\n\t\t\t\t\tfilename,\r\n\t\t\t\t\tcomment,\r\n\t\t\t\t\tdirectory: directory || filename.endsWith(DIRECTORY_SIGNATURE)\r\n\t\t\t\t});\r\n\t\t\t\tstartOffset = Math.max(offsetFileEntry, startOffset);\r\n\t\t\t\tawait readCommonFooter(fileEntry, fileEntry, directoryView, offset + 6);\r\n\t\t\t\tconst entry = new Entry(fileEntry);\r\n\t\t\t\tentry.getData = (writer, options) => fileEntry.getData(writer, entry, options);\r\n\t\t\t\toffset = endOffset;\r\n\t\t\t\tconst { onprogress } = options;\r\n\t\t\t\tif (onprogress) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait onprogress(indexFile + 1, filesLength, new Entry(fileEntry));\r\n\t\t\t\t\t} catch (_error) {\r\n\t\t\t\t\t\t// ignored\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tyield entry;\r\n\t\t\t}\r\n\t\t\tconst extractPrependedData = getOptionValue$1(zipReader, options, \"extractPrependedData\");\r\n\t\t\tconst extractAppendedData = getOptionValue$1(zipReader, options, \"extractAppendedData\");\r\n\t\t\tif (extractPrependedData) {\r\n\t\t\t\tzipReader.prependedData = startOffset > 0 ? await readUint8Array(reader, 0, startOffset) : new Uint8Array();\r\n\t\t\t}\r\n\t\t\tzipReader.comment = commentLength ? await readUint8Array(reader, commentOffset + END_OF_CENTRAL_DIR_LENGTH, commentLength) : new Uint8Array();\r\n\t\t\tif (extractAppendedData) {\r\n\t\t\t\tzipReader.appendedData = appendedDataOffset < reader.size ? await readUint8Array(reader, appendedDataOffset, reader.size - appendedDataOffset) : new Uint8Array();\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tasync getEntries(options = {}) {\r\n\t\t\tconst entries = [];\r\n\t\t\tfor await (const entry of this.getEntriesGenerator(options)) {\r\n\t\t\t\tentries.push(entry);\r\n\t\t\t}\r\n\t\t\treturn entries;\r\n\t\t}\r\n\r\n\t\tasync close() {\r\n\t\t}\r\n\t}\r\n\r\n\tclass ZipEntry {\r\n\r\n\t\tconstructor(reader, config, options) {\r\n\t\t\tObject.assign(this, {\r\n\t\t\t\treader,\r\n\t\t\t\tconfig,\r\n\t\t\t\toptions\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tasync getData(writer, fileEntry, options = {}) {\r\n\t\t\tconst zipEntry = this;\r\n\t\t\tconst {\r\n\t\t\t\treader,\r\n\t\t\t\toffset,\r\n\t\t\t\tdiskNumberStart,\r\n\t\t\t\textraFieldAES,\r\n\t\t\t\tcompressionMethod,\r\n\t\t\t\tconfig,\r\n\t\t\t\tbitFlag,\r\n\t\t\t\tsignature,\r\n\t\t\t\trawLastModDate,\r\n\t\t\t\tuncompressedSize,\r\n\t\t\t\tcompressedSize\r\n\t\t\t} = zipEntry;\r\n\t\t\tconst localDirectory = zipEntry.localDirectory = {};\r\n\t\t\tconst dataArray = await readUint8Array(reader, offset, 30, diskNumberStart);\r\n\t\t\tconst dataView = getDataView$1(dataArray);\r\n\t\t\tlet password = getOptionValue$1(zipEntry, options, \"password\");\r\n\t\t\tpassword = password && password.length && password;\r\n\t\t\tif (extraFieldAES) {\r\n\t\t\t\tif (extraFieldAES.originalCompressionMethod != COMPRESSION_METHOD_AES) {\r\n\t\t\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (compressionMethod != COMPRESSION_METHOD_STORE && compressionMethod != COMPRESSION_METHOD_DEFLATE) {\r\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\r\n\t\t\t}\r\n\t\t\tif (getUint32(dataView, 0) != LOCAL_FILE_HEADER_SIGNATURE) {\r\n\t\t\t\tthrow new Error(ERR_LOCAL_FILE_HEADER_NOT_FOUND);\r\n\t\t\t}\r\n\t\t\treadCommonHeader(localDirectory, dataView, 4);\r\n\t\t\tlocalDirectory.rawExtraField = localDirectory.extraFieldLength ?\r\n\t\t\t\tawait readUint8Array(reader, offset + 30 + localDirectory.filenameLength, localDirectory.extraFieldLength, diskNumberStart) :\r\n\t\t\t\tnew Uint8Array();\r\n\t\t\tawait readCommonFooter(zipEntry, localDirectory, dataView, 4);\r\n\t\t\tObject.assign(fileEntry, {\r\n\t\t\t\tlastAccessDate: localDirectory.lastAccessDate,\r\n\t\t\t\tcreationDate: localDirectory.creationDate\r\n\t\t\t});\r\n\t\t\tconst encrypted = zipEntry.encrypted && localDirectory.encrypted;\r\n\t\t\tconst zipCrypto = encrypted && !extraFieldAES;\r\n\t\t\tif (encrypted) {\r\n\t\t\t\tif (!zipCrypto && extraFieldAES.strength === UNDEFINED_VALUE) {\r\n\t\t\t\t\tthrow new Error(ERR_UNSUPPORTED_ENCRYPTION);\r\n\t\t\t\t} else if (!password) {\r\n\t\t\t\t\tthrow new Error(ERR_ENCRYPTED);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst dataOffset = offset + 30 + localDirectory.filenameLength + localDirectory.extraFieldLength;\r\n\t\t\tconst readable = reader.readable;\r\n\t\t\treadable.diskNumberStart = diskNumberStart;\r\n\t\t\treadable.offset = dataOffset;\r\n\t\t\tlet size = readable.size = compressedSize;\r\n\t\t\tconst signal = getOptionValue$1(zipEntry, options, \"signal\");\r\n\t\t\tconst checkPasswordOnly = getOptionValue$1(zipEntry, options, \"checkPasswordOnly\");\r\n\t\t\tif (checkPasswordOnly) {\r\n\t\t\t\twriter = new WritableStream();\r\n\t\t\t}\r\n\t\t\twriter = initWriter(writer);\r\n\t\t\tawait initStream(writer, uncompressedSize);\r\n\t\t\tconst { writable } = writer;\r\n\t\t\tconst { onstart, onprogress, onend } = options;\r\n\t\t\tconst workerOptions = {\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tcodecType: CODEC_INFLATE,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\tzipCrypto,\r\n\t\t\t\t\tencryptionStrength: extraFieldAES && extraFieldAES.strength,\r\n\t\t\t\t\tsigned: getOptionValue$1(zipEntry, options, \"checkSignature\"),\r\n\t\t\t\t\tpasswordVerification: zipCrypto && (bitFlag.dataDescriptor ? ((rawLastModDate >>> 8) & 0xFF) : ((signature >>> 24) & 0xFF)),\r\n\t\t\t\t\tsignature,\r\n\t\t\t\t\tcompressed: compressionMethod != 0,\r\n\t\t\t\t\tencrypted,\r\n\t\t\t\t\tuseWebWorkers: getOptionValue$1(zipEntry, options, \"useWebWorkers\"),\r\n\t\t\t\t\tuseCompressionStream: getOptionValue$1(zipEntry, options, \"useCompressionStream\"),\r\n\t\t\t\t\ttransferStreams: getOptionValue$1(zipEntry, options, \"transferStreams\"),\r\n\t\t\t\t\tcheckPasswordOnly\r\n\t\t\t\t},\r\n\t\t\t\tconfig,\r\n\t\t\t\tstreamOptions: { signal, size, onstart, onprogress, onend }\r\n\t\t\t};\r\n\t\t\tlet outputSize = 0;\r\n\t\t\ttry {\r\n\t\t\t\t({ outputSize } = (await runWorker({ readable, writable }, workerOptions)));\r\n\t\t\t} catch (error) {\r\n\t\t\t\tif (!checkPasswordOnly || error.message != ERR_ABORT_CHECK_PASSWORD) {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t} finally {\r\n\t\t\t\tconst preventClose = getOptionValue$1(zipEntry, options, \"preventClose\");\r\n\t\t\t\twritable.size += outputSize;\r\n\t\t\t\tif (!preventClose && !writable.locked) {\r\n\t\t\t\t\tawait writable.close();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn checkPasswordOnly ? undefined : writer.getData ? writer.getData() : writable;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction readCommonHeader(directory, dataView, offset) {\r\n\t\tconst rawBitFlag = directory.rawBitFlag = getUint16(dataView, offset + 2);\r\n\t\tconst encrypted = (rawBitFlag & BITFLAG_ENCRYPTED) == BITFLAG_ENCRYPTED;\r\n\t\tconst rawLastModDate = getUint32(dataView, offset + 6);\r\n\t\tObject.assign(directory, {\r\n\t\t\tencrypted,\r\n\t\t\tversion: getUint16(dataView, offset),\r\n\t\t\tbitFlag: {\r\n\t\t\t\tlevel: (rawBitFlag & BITFLAG_LEVEL) >> 1,\r\n\t\t\t\tdataDescriptor: (rawBitFlag & BITFLAG_DATA_DESCRIPTOR) == BITFLAG_DATA_DESCRIPTOR,\r\n\t\t\t\tlanguageEncodingFlag: (rawBitFlag & BITFLAG_LANG_ENCODING_FLAG) == BITFLAG_LANG_ENCODING_FLAG\r\n\t\t\t},\r\n\t\t\trawLastModDate,\r\n\t\t\tlastModDate: getDate(rawLastModDate),\r\n\t\t\tfilenameLength: getUint16(dataView, offset + 22),\r\n\t\t\textraFieldLength: getUint16(dataView, offset + 24)\r\n\t\t});\r\n\t}\r\n\r\n\tasync function readCommonFooter(fileEntry, directory, dataView, offset) {\r\n\t\tconst { rawExtraField } = directory;\r\n\t\tconst extraField = directory.extraField = new Map();\r\n\t\tconst rawExtraFieldView = getDataView$1(new Uint8Array(rawExtraField));\r\n\t\tlet offsetExtraField = 0;\r\n\t\ttry {\r\n\t\t\twhile (offsetExtraField < rawExtraField.length) {\r\n\t\t\t\tconst type = getUint16(rawExtraFieldView, offsetExtraField);\r\n\t\t\t\tconst size = getUint16(rawExtraFieldView, offsetExtraField + 2);\r\n\t\t\t\textraField.set(type, {\r\n\t\t\t\t\ttype,\r\n\t\t\t\t\tdata: rawExtraField.slice(offsetExtraField + 4, offsetExtraField + 4 + size)\r\n\t\t\t\t});\r\n\t\t\t\toffsetExtraField += 4 + size;\r\n\t\t\t}\r\n\t\t} catch (_error) {\r\n\t\t\t// ignored\r\n\t\t}\r\n\t\tconst compressionMethod = getUint16(dataView, offset + 4);\r\n\t\tObject.assign(directory, {\r\n\t\t\tsignature: getUint32(dataView, offset + 10),\r\n\t\t\tuncompressedSize: getUint32(dataView, offset + 18),\r\n\t\t\tcompressedSize: getUint32(dataView, offset + 14)\r\n\t\t});\r\n\t\tconst extraFieldZip64 = extraField.get(EXTRAFIELD_TYPE_ZIP64);\r\n\t\tif (extraFieldZip64) {\r\n\t\t\treadExtraFieldZip64(extraFieldZip64, directory);\r\n\t\t\tdirectory.extraFieldZip64 = extraFieldZip64;\r\n\t\t}\r\n\t\tconst extraFieldUnicodePath = extraField.get(EXTRAFIELD_TYPE_UNICODE_PATH);\r\n\t\tif (extraFieldUnicodePath) {\r\n\t\t\tawait readExtraFieldUnicode(extraFieldUnicodePath, PROPERTY_NAME_FILENAME, PROPERTY_NAME_RAW_FILENAME, directory, fileEntry);\r\n\t\t\tdirectory.extraFieldUnicodePath = extraFieldUnicodePath;\r\n\t\t}\r\n\t\tconst extraFieldUnicodeComment = extraField.get(EXTRAFIELD_TYPE_UNICODE_COMMENT);\r\n\t\tif (extraFieldUnicodeComment) {\r\n\t\t\tawait readExtraFieldUnicode(extraFieldUnicodeComment, PROPERTY_NAME_COMMENT, PROPERTY_NAME_RAW_COMMENT, directory, fileEntry);\r\n\t\t\tdirectory.extraFieldUnicodeComment = extraFieldUnicodeComment;\r\n\t\t}\r\n\t\tconst extraFieldAES = extraField.get(EXTRAFIELD_TYPE_AES);\r\n\t\tif (extraFieldAES) {\r\n\t\t\treadExtraFieldAES(extraFieldAES, directory, compressionMethod);\r\n\t\t\tdirectory.extraFieldAES = extraFieldAES;\r\n\t\t} else {\r\n\t\t\tdirectory.compressionMethod = compressionMethod;\r\n\t\t}\r\n\t\tconst extraFieldNTFS = extraField.get(EXTRAFIELD_TYPE_NTFS);\r\n\t\tif (extraFieldNTFS) {\r\n\t\t\treadExtraFieldNTFS(extraFieldNTFS, directory);\r\n\t\t\tdirectory.extraFieldNTFS = extraFieldNTFS;\r\n\t\t}\r\n\t\tconst extraFieldExtendedTimestamp = extraField.get(EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\r\n\t\tif (extraFieldExtendedTimestamp) {\r\n\t\t\treadExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory);\r\n\t\t\tdirectory.extraFieldExtendedTimestamp = extraFieldExtendedTimestamp;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction readExtraFieldZip64(extraFieldZip64, directory) {\r\n\t\tdirectory.zip64 = true;\r\n\t\tconst extraFieldView = getDataView$1(extraFieldZip64.data);\r\n\t\tconst missingProperties = ZIP64_PROPERTIES.filter(([propertyName, max]) => directory[propertyName] == max);\r\n\t\tfor (let indexMissingProperty = 0, offset = 0; indexMissingProperty < missingProperties.length; indexMissingProperty++) {\r\n\t\t\tconst [propertyName, max] = missingProperties[indexMissingProperty];\r\n\t\t\tif (directory[propertyName] == max) {\r\n\t\t\t\tconst extraction = ZIP64_EXTRACTION[max];\r\n\t\t\t\tdirectory[propertyName] = extraFieldZip64[propertyName] = extraction.getValue(extraFieldView, offset);\r\n\t\t\t\toffset += extraction.bytes;\r\n\t\t\t} else if (extraFieldZip64[propertyName]) {\r\n\t\t\t\tthrow new Error(ERR_EXTRAFIELD_ZIP64_NOT_FOUND);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function readExtraFieldUnicode(extraFieldUnicode, propertyName, rawPropertyName, directory, fileEntry) {\r\n\t\tconst extraFieldView = getDataView$1(extraFieldUnicode.data);\r\n\t\tconst crc32 = new Crc32();\r\n\t\tcrc32.append(fileEntry[rawPropertyName]);\r\n\t\tconst dataViewSignature = getDataView$1(new Uint8Array(4));\r\n\t\tdataViewSignature.setUint32(0, crc32.get(), true);\r\n\t\tObject.assign(extraFieldUnicode, {\r\n\t\t\tversion: getUint8(extraFieldView, 0),\r\n\t\t\tsignature: getUint32(extraFieldView, 1),\r\n\t\t\t[propertyName]: await decodeText(extraFieldUnicode.data.subarray(5)),\r\n\t\t\tvalid: !fileEntry.bitFlag.languageEncodingFlag && extraFieldUnicode.signature == getUint32(dataViewSignature, 0)\r\n\t\t});\r\n\t\tif (extraFieldUnicode.valid) {\r\n\t\t\tdirectory[propertyName] = extraFieldUnicode[propertyName];\r\n\t\t\tdirectory[propertyName + \"UTF8\"] = true;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction readExtraFieldAES(extraFieldAES, directory, compressionMethod) {\r\n\t\tconst extraFieldView = getDataView$1(extraFieldAES.data);\r\n\t\tconst strength = getUint8(extraFieldView, 4);\r\n\t\tObject.assign(extraFieldAES, {\r\n\t\t\tvendorVersion: getUint8(extraFieldView, 0),\r\n\t\t\tvendorId: getUint8(extraFieldView, 2),\r\n\t\t\tstrength,\r\n\t\t\toriginalCompressionMethod: compressionMethod,\r\n\t\t\tcompressionMethod: getUint16(extraFieldView, 5)\r\n\t\t});\r\n\t\tdirectory.compressionMethod = extraFieldAES.compressionMethod;\r\n\t}\r\n\r\n\tfunction readExtraFieldNTFS(extraFieldNTFS, directory) {\r\n\t\tconst extraFieldView = getDataView$1(extraFieldNTFS.data);\r\n\t\tlet offsetExtraField = 4;\r\n\t\tlet tag1Data;\r\n\t\ttry {\r\n\t\t\twhile (offsetExtraField < extraFieldNTFS.data.length && !tag1Data) {\r\n\t\t\t\tconst tagValue = getUint16(extraFieldView, offsetExtraField);\r\n\t\t\t\tconst attributeSize = getUint16(extraFieldView, offsetExtraField + 2);\r\n\t\t\t\tif (tagValue == EXTRAFIELD_TYPE_NTFS_TAG1) {\r\n\t\t\t\t\ttag1Data = extraFieldNTFS.data.slice(offsetExtraField + 4, offsetExtraField + 4 + attributeSize);\r\n\t\t\t\t}\r\n\t\t\t\toffsetExtraField += 4 + attributeSize;\r\n\t\t\t}\r\n\t\t} catch (_error) {\r\n\t\t\t// ignored\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tif (tag1Data && tag1Data.length == 24) {\r\n\t\t\t\tconst tag1View = getDataView$1(tag1Data);\r\n\t\t\t\tconst rawLastModDate = tag1View.getBigUint64(0, true);\r\n\t\t\t\tconst rawLastAccessDate = tag1View.getBigUint64(8, true);\r\n\t\t\t\tconst rawCreationDate = tag1View.getBigUint64(16, true);\r\n\t\t\t\tObject.assign(extraFieldNTFS, {\r\n\t\t\t\t\trawLastModDate,\r\n\t\t\t\t\trawLastAccessDate,\r\n\t\t\t\t\trawCreationDate\r\n\t\t\t\t});\r\n\t\t\t\tconst lastModDate = getDateNTFS(rawLastModDate);\r\n\t\t\t\tconst lastAccessDate = getDateNTFS(rawLastAccessDate);\r\n\t\t\t\tconst creationDate = getDateNTFS(rawCreationDate);\r\n\t\t\t\tconst extraFieldData = { lastModDate, lastAccessDate, creationDate };\r\n\t\t\t\tObject.assign(extraFieldNTFS, extraFieldData);\r\n\t\t\t\tObject.assign(directory, extraFieldData);\r\n\t\t\t}\r\n\t\t} catch (_error) {\r\n\t\t\t// ignored\r\n\t\t}\r\n\t}\r\n\r\n\tfunction readExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory) {\r\n\t\tconst extraFieldView = getDataView$1(extraFieldExtendedTimestamp.data);\r\n\t\tconst flags = getUint8(extraFieldView, 0);\r\n\t\tconst timeProperties = [];\r\n\t\tconst timeRawProperties = [];\r\n\t\tif ((flags & 0x1) == 0x1) {\r\n\t\t\ttimeProperties.push(PROPERTY_NAME_LAST_MODIFICATION_DATE);\r\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE);\r\n\t\t}\r\n\t\tif ((flags & 0x2) == 0x2) {\r\n\t\t\ttimeProperties.push(PROPERTY_NAME_LAST_ACCESS_DATE);\r\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_ACCESS_DATE);\r\n\t\t}\r\n\t\tif ((flags & 0x4) == 0x4) {\r\n\t\t\ttimeProperties.push(PROPERTY_NAME_CREATION_DATE);\r\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_CREATION_DATE);\r\n\t\t}\r\n\t\tlet offset = 1;\r\n\t\ttimeProperties.forEach((propertyName, indexProperty) => {\r\n\t\t\tif (extraFieldExtendedTimestamp.data.length >= offset + 4) {\r\n\t\t\t\tconst time = getUint32(extraFieldView, offset);\r\n\t\t\t\tdirectory[propertyName] = extraFieldExtendedTimestamp[propertyName] = new Date(time * 1000);\r\n\t\t\t\tconst rawPropertyName = timeRawProperties[indexProperty];\r\n\t\t\t\textraFieldExtendedTimestamp[rawPropertyName] = time;\r\n\t\t\t}\r\n\t\t\toffset += 4;\r\n\t\t});\r\n\t}\r\n\r\n\tasync function seekSignature(reader, signature, startOffset, minimumBytes, maximumLength) {\r\n\t\tconst signatureArray = new Uint8Array(4);\r\n\t\tconst signatureView = getDataView$1(signatureArray);\r\n\t\tsetUint32$1(signatureView, 0, signature);\r\n\t\tconst maximumBytes = minimumBytes + maximumLength;\r\n\t\treturn (await seek(minimumBytes)) || await seek(Math.min(maximumBytes, startOffset));\r\n\r\n\t\tasync function seek(length) {\r\n\t\t\tconst offset = startOffset - length;\r\n\t\t\tconst bytes = await readUint8Array(reader, offset, length);\r\n\t\t\tfor (let indexByte = bytes.length - minimumBytes; indexByte >= 0; indexByte--) {\r\n\t\t\t\tif (bytes[indexByte] == signatureArray[0] && bytes[indexByte + 1] == signatureArray[1] &&\r\n\t\t\t\t\tbytes[indexByte + 2] == signatureArray[2] && bytes[indexByte + 3] == signatureArray[3]) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\toffset: offset + indexByte,\r\n\t\t\t\t\t\tbuffer: bytes.slice(indexByte, indexByte + minimumBytes).buffer\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getOptionValue$1(zipReader, options, name) {\r\n\t\treturn options[name] === UNDEFINED_VALUE ? zipReader.options[name] : options[name];\r\n\t}\r\n\r\n\tfunction getDate(timeRaw) {\r\n\t\tconst date = (timeRaw & 0xffff0000) >> 16, time = timeRaw & 0x0000ffff;\r\n\t\ttry {\r\n\t\t\treturn new Date(1980 + ((date & 0xFE00) >> 9), ((date & 0x01E0) >> 5) - 1, date & 0x001F, (time & 0xF800) >> 11, (time & 0x07E0) >> 5, (time & 0x001F) * 2, 0);\r\n\t\t} catch (_error) {\r\n\t\t\t// ignored\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getDateNTFS(timeRaw) {\r\n\t\treturn new Date((Number((timeRaw / BigInt(10000)) - BigInt(11644473600000))));\r\n\t}\r\n\r\n\tfunction getUint8(view, offset) {\r\n\t\treturn view.getUint8(offset);\r\n\t}\r\n\r\n\tfunction getUint16(view, offset) {\r\n\t\treturn view.getUint16(offset, true);\r\n\t}\r\n\r\n\tfunction getUint32(view, offset) {\r\n\t\treturn view.getUint32(offset, true);\r\n\t}\r\n\r\n\tfunction getBigUint64(view, offset) {\r\n\t\treturn Number(view.getBigUint64(offset, true));\r\n\t}\r\n\r\n\tfunction setUint32$1(view, offset, value) {\r\n\t\tview.setUint32(offset, value, true);\r\n\t}\r\n\r\n\tfunction getDataView$1(array) {\r\n\t\treturn new DataView(array.buffer);\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tconst ERR_DUPLICATED_NAME = \"File already exists\";\r\n\tconst ERR_INVALID_COMMENT = \"Zip file comment exceeds 64KB\";\r\n\tconst ERR_INVALID_ENTRY_COMMENT = \"File entry comment exceeds 64KB\";\r\n\tconst ERR_INVALID_ENTRY_NAME = \"File entry name exceeds 64KB\";\r\n\tconst ERR_INVALID_VERSION = \"Version exceeds 65535\";\r\n\tconst ERR_INVALID_ENCRYPTION_STRENGTH = \"The strength must equal 1, 2, or 3\";\r\n\tconst ERR_INVALID_EXTRAFIELD_TYPE = \"Extra field type exceeds 65535\";\r\n\tconst ERR_INVALID_EXTRAFIELD_DATA = \"Extra field data exceeds 64KB\";\r\n\tconst ERR_UNSUPPORTED_FORMAT = \"Zip64 is not supported (make sure 'keepOrder' is set to 'true')\";\r\n\r\n\tconst EXTRAFIELD_DATA_AES = new Uint8Array([0x07, 0x00, 0x02, 0x00, 0x41, 0x45, 0x03, 0x00, 0x00]);\r\n\r\n\tlet workers = 0;\r\n\tconst pendingEntries = [];\r\n\r\n\tclass ZipWriter {\r\n\r\n\t\tconstructor(writer, options = {}) {\r\n\t\t\twriter = initWriter(writer);\r\n\t\t\tObject.assign(this, {\r\n\t\t\t\twriter,\r\n\t\t\t\taddSplitZipSignature: writer instanceof SplitDataWriter,\r\n\t\t\t\toptions,\r\n\t\t\t\tconfig: getConfiguration(),\r\n\t\t\t\tfiles: new Map(),\r\n\t\t\t\tfilenames: new Set(),\r\n\t\t\t\toffset: writer.writable.size,\r\n\t\t\t\tpendingEntriesSize: 0,\r\n\t\t\t\tpendingAddFileCalls: new Set(),\r\n\t\t\t\tbufferedWrites: 0\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tasync add(name = \"\", reader, options = {}) {\r\n\t\t\tconst zipWriter = this;\r\n\t\t\tconst {\r\n\t\t\t\tpendingAddFileCalls,\r\n\t\t\t\tconfig\r\n\t\t\t} = zipWriter;\r\n\t\t\tif (workers < config.maxWorkers) {\r\n\t\t\t\tworkers++;\r\n\t\t\t} else {\r\n\t\t\t\tawait new Promise(resolve => pendingEntries.push(resolve));\r\n\t\t\t}\r\n\t\t\tlet promiseAddFile;\r\n\t\t\ttry {\r\n\t\t\t\tname = name.trim();\r\n\t\t\t\tif (zipWriter.filenames.has(name)) {\r\n\t\t\t\t\tthrow new Error(ERR_DUPLICATED_NAME);\r\n\t\t\t\t}\r\n\t\t\t\tzipWriter.filenames.add(name);\r\n\t\t\t\tpromiseAddFile = addFile(zipWriter, name, reader, options);\r\n\t\t\t\tpendingAddFileCalls.add(promiseAddFile);\r\n\t\t\t\treturn await promiseAddFile;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tzipWriter.filenames.delete(name);\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\tpendingAddFileCalls.delete(promiseAddFile);\r\n\t\t\t\tconst pendingEntry = pendingEntries.shift();\r\n\t\t\t\tif (pendingEntry) {\r\n\t\t\t\t\tpendingEntry();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tworkers--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tasync close(comment = new Uint8Array(), options = {}) {\r\n\t\t\tconst zipWriter = this;\r\n\t\t\tconst { pendingAddFileCalls, writer } = this;\r\n\t\t\tconst { writable } = writer;\r\n\t\t\twhile (pendingAddFileCalls.size) {\r\n\t\t\t\tawait Promise.all(Array.from(pendingAddFileCalls));\r\n\t\t\t}\r\n\t\t\tawait closeFile(this, comment, options);\r\n\t\t\tconst preventClose = getOptionValue(zipWriter, options, \"preventClose\");\r\n\t\t\tif (!preventClose) {\r\n\t\t\t\tawait writable.close();\r\n\t\t\t}\r\n\t\t\treturn writer.getData ? writer.getData() : writable;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function addFile(zipWriter, name, reader, options) {\r\n\t\tname = name.trim();\r\n\t\tif (options.directory && (!name.endsWith(DIRECTORY_SIGNATURE))) {\r\n\t\t\tname += DIRECTORY_SIGNATURE;\r\n\t\t} else {\r\n\t\t\toptions.directory = name.endsWith(DIRECTORY_SIGNATURE);\r\n\t\t}\r\n\t\tconst rawFilename = encodeText(name);\r\n\t\tif (getLength(rawFilename) > MAX_16_BITS) {\r\n\t\t\tthrow new Error(ERR_INVALID_ENTRY_NAME);\r\n\t\t}\r\n\t\tconst comment = options.comment || \"\";\r\n\t\tconst rawComment = encodeText(comment);\r\n\t\tif (getLength(rawComment) > MAX_16_BITS) {\r\n\t\t\tthrow new Error(ERR_INVALID_ENTRY_COMMENT);\r\n\t\t}\r\n\t\tconst version = getOptionValue(zipWriter, options, \"version\", VERSION_DEFLATE);\r\n\t\tif (version > MAX_16_BITS) {\r\n\t\t\tthrow new Error(ERR_INVALID_VERSION);\r\n\t\t}\r\n\t\tconst versionMadeBy = getOptionValue(zipWriter, options, \"versionMadeBy\", 20);\r\n\t\tif (versionMadeBy > MAX_16_BITS) {\r\n\t\t\tthrow new Error(ERR_INVALID_VERSION);\r\n\t\t}\r\n\t\tconst lastModDate = getOptionValue(zipWriter, options, PROPERTY_NAME_LAST_MODIFICATION_DATE, new Date());\r\n\t\tconst lastAccessDate = getOptionValue(zipWriter, options, PROPERTY_NAME_LAST_ACCESS_DATE);\r\n\t\tconst creationDate = getOptionValue(zipWriter, options, PROPERTY_NAME_CREATION_DATE);\r\n\t\tconst msDosCompatible = getOptionValue(zipWriter, options, PROPERTY_NAME_MS_DOS_COMPATIBLE, true);\r\n\t\tconst internalFileAttribute = getOptionValue(zipWriter, options, PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE, 0);\r\n\t\tconst externalFileAttribute = getOptionValue(zipWriter, options, PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE, 0);\r\n\t\tconst password = getOptionValue(zipWriter, options, \"password\");\r\n\t\tconst encryptionStrength = getOptionValue(zipWriter, options, \"encryptionStrength\", 3);\r\n\t\tconst zipCrypto = getOptionValue(zipWriter, options, \"zipCrypto\");\r\n\t\tconst extendedTimestamp = getOptionValue(zipWriter, options, \"extendedTimestamp\", true);\r\n\t\tconst keepOrder = getOptionValue(zipWriter, options, \"keepOrder\", true);\r\n\t\tconst level = getOptionValue(zipWriter, options, \"level\");\r\n\t\tconst useWebWorkers = getOptionValue(zipWriter, options, \"useWebWorkers\");\r\n\t\tconst bufferedWrite = getOptionValue(zipWriter, options, \"bufferedWrite\");\r\n\t\tconst dataDescriptorSignature = getOptionValue(zipWriter, options, \"dataDescriptorSignature\", false);\r\n\t\tconst signal = getOptionValue(zipWriter, options, \"signal\");\r\n\t\tconst useCompressionStream = getOptionValue(zipWriter, options, \"useCompressionStream\");\r\n\t\tlet dataDescriptor = getOptionValue(zipWriter, options, \"dataDescriptor\", true);\r\n\t\tlet zip64 = getOptionValue(zipWriter, options, PROPERTY_NAME_ZIP64);\r\n\t\tif (password !== UNDEFINED_VALUE && encryptionStrength !== UNDEFINED_VALUE && (encryptionStrength < 1 || encryptionStrength > 3)) {\r\n\t\t\tthrow new Error(ERR_INVALID_ENCRYPTION_STRENGTH);\r\n\t\t}\r\n\t\tlet rawExtraField = new Uint8Array();\r\n\t\tconst { extraField } = options;\r\n\t\tif (extraField) {\r\n\t\t\tlet extraFieldSize = 0;\r\n\t\t\tlet offset = 0;\r\n\t\t\textraField.forEach(data => extraFieldSize += 4 + getLength(data));\r\n\t\t\trawExtraField = new Uint8Array(extraFieldSize);\r\n\t\t\textraField.forEach((data, type) => {\r\n\t\t\t\tif (type > MAX_16_BITS) {\r\n\t\t\t\t\tthrow new Error(ERR_INVALID_EXTRAFIELD_TYPE);\r\n\t\t\t\t}\r\n\t\t\t\tif (getLength(data) > MAX_16_BITS) {\r\n\t\t\t\t\tthrow new Error(ERR_INVALID_EXTRAFIELD_DATA);\r\n\t\t\t\t}\r\n\t\t\t\tarraySet(rawExtraField, new Uint16Array([type]), offset);\r\n\t\t\t\tarraySet(rawExtraField, new Uint16Array([getLength(data)]), offset + 2);\r\n\t\t\t\tarraySet(rawExtraField, data, offset + 4);\r\n\t\t\t\toffset += 4 + getLength(data);\r\n\t\t\t});\r\n\t\t}\r\n\t\tlet maximumCompressedSize = 0;\r\n\t\tlet maximumEntrySize = 0;\r\n\t\tlet uncompressedSize = 0;\r\n\t\tconst zip64Enabled = zip64 === true;\r\n\t\tif (reader) {\r\n\t\t\treader = initReader(reader);\r\n\t\t\tawait initStream(reader);\r\n\t\t\tif (reader.size === UNDEFINED_VALUE) {\r\n\t\t\t\tdataDescriptor = true;\r\n\t\t\t\tif (zip64 || zip64 === UNDEFINED_VALUE) {\r\n\t\t\t\t\tzip64 = true;\r\n\t\t\t\t\tmaximumCompressedSize = MAX_32_BITS;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tuncompressedSize = reader.size;\r\n\t\t\t\tmaximumCompressedSize = getMaximumCompressedSize(uncompressedSize);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst { diskOffset, diskNumber, maxSize } = zipWriter.writer;\r\n\t\tconst zip64UncompressedSize = zip64Enabled || uncompressedSize >= MAX_32_BITS;\r\n\t\tconst zip64CompressedSize = zip64Enabled || maximumCompressedSize >= MAX_32_BITS;\r\n\t\tconst zip64Offset = zip64Enabled || zipWriter.offset + zipWriter.pendingEntriesSize - diskOffset >= MAX_32_BITS;\r\n\t\tconst supportZip64SplitFile = getOptionValue(zipWriter, options, \"supportZip64SplitFile\", true);\r\n\t\tconst zip64DiskNumberStart = (supportZip64SplitFile && zip64Enabled) || diskNumber + Math.ceil(zipWriter.pendingEntriesSize / maxSize) >= MAX_16_BITS;\r\n\t\tif (zip64Offset || zip64UncompressedSize || zip64CompressedSize || zip64DiskNumberStart) {\r\n\t\t\tif (zip64 === false || !keepOrder) {\r\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\r\n\t\t\t} else {\r\n\t\t\t\tzip64 = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tzip64 = zip64 || false;\r\n\t\toptions = Object.assign({}, options, {\r\n\t\t\trawFilename,\r\n\t\t\trawComment,\r\n\t\t\tversion,\r\n\t\t\tversionMadeBy,\r\n\t\t\tlastModDate,\r\n\t\t\tlastAccessDate,\r\n\t\t\tcreationDate,\r\n\t\t\trawExtraField,\r\n\t\t\tzip64,\r\n\t\t\tzip64UncompressedSize,\r\n\t\t\tzip64CompressedSize,\r\n\t\t\tzip64Offset,\r\n\t\t\tzip64DiskNumberStart,\r\n\t\t\tpassword,\r\n\t\t\tlevel,\r\n\t\t\tuseWebWorkers,\r\n\t\t\tencryptionStrength,\r\n\t\t\textendedTimestamp,\r\n\t\t\tzipCrypto,\r\n\t\t\tbufferedWrite,\r\n\t\t\tkeepOrder,\r\n\t\t\tdataDescriptor,\r\n\t\t\tdataDescriptorSignature,\r\n\t\t\tsignal,\r\n\t\t\tmsDosCompatible,\r\n\t\t\tinternalFileAttribute,\r\n\t\t\texternalFileAttribute,\r\n\t\t\tuseCompressionStream\r\n\t\t});\r\n\t\tconst headerInfo = getHeaderInfo(options);\r\n\t\tconst dataDescriptorInfo = getDataDescriptorInfo(options);\r\n\t\tmaximumEntrySize = getLength(headerInfo.localHeaderArray, dataDescriptorInfo.dataDescriptorArray) + maximumCompressedSize;\r\n\t\tzipWriter.pendingEntriesSize += maximumEntrySize;\r\n\t\tlet fileEntry;\r\n\t\ttry {\r\n\t\t\tfileEntry = await getFileEntry(zipWriter, name, reader, { headerInfo, dataDescriptorInfo }, options);\r\n\t\t} finally {\r\n\t\t\tzipWriter.pendingEntriesSize -= maximumEntrySize;\r\n\t\t}\r\n\t\tObject.assign(fileEntry, { name, comment, extraField });\r\n\t\treturn new Entry(fileEntry);\r\n\t}\r\n\r\n\tasync function getFileEntry(zipWriter, name, reader, entryInfo, options) {\r\n\t\tconst {\r\n\t\t\tfiles,\r\n\t\t\twriter\r\n\t\t} = zipWriter;\r\n\t\tconst {\r\n\t\t\tkeepOrder,\r\n\t\t\tdataDescriptor,\r\n\t\t\tsignal\r\n\t\t} = options;\r\n\t\tconst {\r\n\t\t\theaderInfo\r\n\t\t} = entryInfo;\r\n\t\tconst previousFileEntry = Array.from(files.values()).pop();\r\n\t\tlet fileEntry = {};\r\n\t\tlet bufferedWrite;\r\n\t\tlet releaseLockWriter;\r\n\t\tlet releaseLockCurrentFileEntry;\r\n\t\tlet writingBufferedEntryData;\r\n\t\tlet writingEntryData;\r\n\t\tlet fileWriter;\r\n\t\tfiles.set(name, fileEntry);\r\n\t\ttry {\r\n\t\t\tlet lockPreviousFileEntry;\r\n\t\t\tif (keepOrder) {\r\n\t\t\t\tlockPreviousFileEntry = previousFileEntry && previousFileEntry.lock;\r\n\t\t\t\trequestLockCurrentFileEntry();\r\n\t\t\t}\r\n\t\t\tif (options.bufferedWrite || zipWriter.writerLocked || (zipWriter.bufferedWrites && keepOrder) || !dataDescriptor) {\r\n\t\t\t\tfileWriter = new BlobWriter();\r\n\t\t\t\tfileWriter.writable.size = 0;\r\n\t\t\t\tbufferedWrite = true;\r\n\t\t\t\tzipWriter.bufferedWrites++;\r\n\t\t\t\tawait initStream(writer);\r\n\t\t\t} else {\r\n\t\t\t\tfileWriter = writer;\r\n\t\t\t\tawait requestLockWriter();\r\n\t\t\t}\r\n\t\t\tawait initStream(fileWriter);\r\n\t\t\tconst { writable } = writer;\r\n\t\t\tlet { diskOffset } = writer;\r\n\t\t\tif (zipWriter.addSplitZipSignature) {\r\n\t\t\t\tdelete zipWriter.addSplitZipSignature;\r\n\t\t\t\tconst signatureArray = new Uint8Array(4);\r\n\t\t\t\tconst signatureArrayView = getDataView(signatureArray);\r\n\t\t\t\tsetUint32(signatureArrayView, 0, SPLIT_ZIP_FILE_SIGNATURE);\r\n\t\t\t\tawait writeData(writable, signatureArray);\r\n\t\t\t\tzipWriter.offset += 4;\r\n\t\t\t}\r\n\t\t\tif (!bufferedWrite) {\r\n\t\t\t\tawait lockPreviousFileEntry;\r\n\t\t\t\tawait skipDiskIfNeeded(writable);\r\n\t\t\t}\r\n\t\t\tconst { diskNumber } = writer;\r\n\t\t\twritingEntryData = true;\r\n\t\t\tfileEntry.diskNumberStart = diskNumber;\r\n\t\t\tfileEntry = await createFileEntry(reader, fileWriter, fileEntry, entryInfo, zipWriter.config, options);\r\n\t\t\twritingEntryData = false;\r\n\t\t\tfiles.set(name, fileEntry);\r\n\t\t\tfileEntry.filename = name;\r\n\t\t\tif (bufferedWrite) {\r\n\t\t\t\tawait fileWriter.writable.close();\r\n\t\t\t\tlet blob = await fileWriter.getData();\r\n\t\t\t\tawait lockPreviousFileEntry;\r\n\t\t\t\tawait requestLockWriter();\r\n\t\t\t\twritingBufferedEntryData = true;\r\n\t\t\t\tif (!dataDescriptor) {\r\n\t\t\t\t\tblob = await writeExtraHeaderInfo(fileEntry, blob, writable, options);\r\n\t\t\t\t}\r\n\t\t\t\tawait skipDiskIfNeeded(writable);\r\n\t\t\t\tfileEntry.diskNumberStart = writer.diskNumber;\r\n\t\t\t\tdiskOffset = writer.diskOffset;\r\n\t\t\t\tawait blob.stream().pipeTo(writable, { preventClose: true, preventAbort: true, signal });\r\n\t\t\t\twritable.size += blob.size;\r\n\t\t\t\twritingBufferedEntryData = false;\r\n\t\t\t}\r\n\t\t\tfileEntry.offset = zipWriter.offset - diskOffset;\r\n\t\t\tif (fileEntry.zip64) {\r\n\t\t\t\tsetZip64ExtraInfo(fileEntry, options);\r\n\t\t\t} else if (fileEntry.offset >= MAX_32_BITS) {\r\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\r\n\t\t\t}\r\n\t\t\tzipWriter.offset += fileEntry.length;\r\n\t\t\treturn fileEntry;\r\n\t\t} catch (error) {\r\n\t\t\tif ((bufferedWrite && writingBufferedEntryData) || (!bufferedWrite && writingEntryData)) {\r\n\t\t\t\tzipWriter.hasCorruptedEntries = true;\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\terror.corruptedEntry = true;\r\n\t\t\t\t\t} catch (_error) {\r\n\t\t\t\t\t\t// ignored\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (bufferedWrite) {\r\n\t\t\t\t\tzipWriter.offset += fileWriter.writable.size;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tzipWriter.offset = fileWriter.writable.size;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfiles.delete(name);\r\n\t\t\tthrow error;\r\n\t\t} finally {\r\n\t\t\tif (bufferedWrite) {\r\n\t\t\t\tzipWriter.bufferedWrites--;\r\n\t\t\t}\r\n\t\t\tif (releaseLockCurrentFileEntry) {\r\n\t\t\t\treleaseLockCurrentFileEntry();\r\n\t\t\t}\r\n\t\t\tif (releaseLockWriter) {\r\n\t\t\t\treleaseLockWriter();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction requestLockCurrentFileEntry() {\r\n\t\t\tfileEntry.lock = new Promise(resolve => releaseLockCurrentFileEntry = resolve);\r\n\t\t}\r\n\r\n\t\tasync function requestLockWriter() {\r\n\t\t\tzipWriter.writerLocked = true;\r\n\t\t\tconst { lockWriter } = zipWriter;\r\n\t\t\tzipWriter.lockWriter = new Promise(resolve => releaseLockWriter = () => {\r\n\t\t\t\tzipWriter.writerLocked = false;\r\n\t\t\t\tresolve();\r\n\t\t\t});\r\n\t\t\tawait lockWriter;\r\n\t\t}\r\n\r\n\t\tasync function skipDiskIfNeeded(writable) {\r\n\t\t\tif (headerInfo.localHeaderArray.length > writer.availableSize) {\r\n\t\t\t\twriter.availableSize = 0;\r\n\t\t\t\tawait writeData(writable, new Uint8Array());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function createFileEntry(reader, writer, { diskNumberStart, lock }, entryInfo, config, options) {\r\n\t\tconst {\r\n\t\t\theaderInfo,\r\n\t\t\tdataDescriptorInfo\r\n\t\t} = entryInfo;\r\n\t\tconst {\r\n\t\t\tlocalHeaderArray,\r\n\t\t\theaderArray,\r\n\t\t\tlastModDate,\r\n\t\t\trawLastModDate,\r\n\t\t\tencrypted,\r\n\t\t\tcompressed,\r\n\t\t\tversion,\r\n\t\t\tcompressionMethod,\r\n\t\t\trawExtraFieldExtendedTimestamp,\r\n\t\t\trawExtraFieldNTFS,\r\n\t\t\trawExtraFieldAES\r\n\t\t} = headerInfo;\r\n\t\tconst { dataDescriptorArray } = dataDescriptorInfo;\r\n\t\tconst {\r\n\t\t\trawFilename,\r\n\t\t\tlastAccessDate,\r\n\t\t\tcreationDate,\r\n\t\t\tpassword,\r\n\t\t\tlevel,\r\n\t\t\tzip64,\r\n\t\t\tzip64UncompressedSize,\r\n\t\t\tzip64CompressedSize,\r\n\t\t\tzip64Offset,\r\n\t\t\tzip64DiskNumberStart,\r\n\t\t\tzipCrypto,\r\n\t\t\tdataDescriptor,\r\n\t\t\tdirectory,\r\n\t\t\tversionMadeBy,\r\n\t\t\trawComment,\r\n\t\t\trawExtraField,\r\n\t\t\tuseWebWorkers,\r\n\t\t\tonstart,\r\n\t\t\tonprogress,\r\n\t\t\tonend,\r\n\t\t\tsignal,\r\n\t\t\tencryptionStrength,\r\n\t\t\textendedTimestamp,\r\n\t\t\tmsDosCompatible,\r\n\t\t\tinternalFileAttribute,\r\n\t\t\texternalFileAttribute,\r\n\t\t\tuseCompressionStream\r\n\t\t} = options;\r\n\t\tconst fileEntry = {\r\n\t\t\tlock,\r\n\t\t\tversionMadeBy,\r\n\t\t\tzip64,\r\n\t\t\tdirectory: Boolean(directory),\r\n\t\t\tfilenameUTF8: true,\r\n\t\t\trawFilename,\r\n\t\t\tcommentUTF8: true,\r\n\t\t\trawComment,\r\n\t\t\trawExtraFieldExtendedTimestamp,\r\n\t\t\trawExtraFieldNTFS,\r\n\t\t\trawExtraFieldAES,\r\n\t\t\trawExtraField,\r\n\t\t\textendedTimestamp,\r\n\t\t\tmsDosCompatible,\r\n\t\t\tinternalFileAttribute,\r\n\t\t\texternalFileAttribute,\r\n\t\t\tdiskNumberStart\r\n\t\t};\r\n\t\tlet compressedSize = 0;\r\n\t\tlet uncompressedSize = 0;\r\n\t\tlet signature;\r\n\t\tconst { writable } = writer;\r\n\t\tif (reader) {\r\n\t\t\treader.chunkSize = getChunkSize(config);\r\n\t\t\tawait writeData(writable, localHeaderArray);\r\n\t\t\tconst readable = reader.readable;\r\n\t\t\tconst size = readable.size = reader.size;\r\n\t\t\tconst workerOptions = {\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tcodecType: CODEC_DEFLATE,\r\n\t\t\t\t\tlevel,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\tencryptionStrength,\r\n\t\t\t\t\tzipCrypto: encrypted && zipCrypto,\r\n\t\t\t\t\tpasswordVerification: encrypted && zipCrypto && (rawLastModDate >> 8) & 0xFF,\r\n\t\t\t\t\tsigned: true,\r\n\t\t\t\t\tcompressed,\r\n\t\t\t\t\tencrypted,\r\n\t\t\t\t\tuseWebWorkers,\r\n\t\t\t\t\tuseCompressionStream,\r\n\t\t\t\t\ttransferStreams: false\r\n\t\t\t\t},\r\n\t\t\t\tconfig,\r\n\t\t\t\tstreamOptions: { signal, size, onstart, onprogress, onend }\r\n\t\t\t};\r\n\t\t\tconst result = await runWorker({ readable, writable }, workerOptions);\r\n\t\t\twritable.size += result.size;\r\n\t\t\tsignature = result.signature;\r\n\t\t\tuncompressedSize = reader.size = readable.size;\r\n\t\t\tcompressedSize = result.size;\r\n\t\t} else {\r\n\t\t\tawait writeData(writable, localHeaderArray);\r\n\t\t}\r\n\t\tlet rawExtraFieldZip64;\r\n\t\tif (zip64) {\r\n\t\t\tlet rawExtraFieldZip64Length = 4;\r\n\t\t\tif (zip64UncompressedSize) {\r\n\t\t\t\trawExtraFieldZip64Length += 8;\r\n\t\t\t}\r\n\t\t\tif (zip64CompressedSize) {\r\n\t\t\t\trawExtraFieldZip64Length += 8;\r\n\t\t\t}\r\n\t\t\tif (zip64Offset) {\r\n\t\t\t\trawExtraFieldZip64Length += 8;\r\n\t\t\t}\r\n\t\t\tif (zip64DiskNumberStart) {\r\n\t\t\t\trawExtraFieldZip64Length += 4;\r\n\t\t\t}\r\n\t\t\trawExtraFieldZip64 = new Uint8Array(rawExtraFieldZip64Length);\r\n\t\t} else {\r\n\t\t\trawExtraFieldZip64 = new Uint8Array();\r\n\t\t}\r\n\t\tsetEntryInfo({\r\n\t\t\tsignature,\r\n\t\t\trawExtraFieldZip64,\r\n\t\t\tcompressedSize,\r\n\t\t\tuncompressedSize,\r\n\t\t\theaderInfo,\r\n\t\t\tdataDescriptorInfo\r\n\t\t}, options);\r\n\t\tif (dataDescriptor) {\r\n\t\t\tawait writeData(writable, dataDescriptorArray);\r\n\t\t}\r\n\t\tObject.assign(fileEntry, {\r\n\t\t\tuncompressedSize,\r\n\t\t\tcompressedSize,\r\n\t\t\tlastModDate,\r\n\t\t\trawLastModDate,\r\n\t\t\tcreationDate,\r\n\t\t\tlastAccessDate,\r\n\t\t\tencrypted,\r\n\t\t\tlength: getLength(localHeaderArray, dataDescriptorArray) + compressedSize,\r\n\t\t\tcompressionMethod,\r\n\t\t\tversion,\r\n\t\t\theaderArray,\r\n\t\t\tsignature,\r\n\t\t\trawExtraFieldZip64,\r\n\t\t\tzip64UncompressedSize,\r\n\t\t\tzip64CompressedSize,\r\n\t\t\tzip64Offset,\r\n\t\t\tzip64DiskNumberStart\r\n\t\t});\r\n\t\treturn fileEntry;\r\n\t}\r\n\r\n\tfunction getHeaderInfo(options) {\r\n\t\tconst {\r\n\t\t\trawFilename,\r\n\t\t\tlastModDate,\r\n\t\t\tlastAccessDate,\r\n\t\t\tcreationDate,\r\n\t\t\tpassword,\r\n\t\t\tlevel,\r\n\t\t\tzip64,\r\n\t\t\tzipCrypto,\r\n\t\t\tdataDescriptor,\r\n\t\t\tdirectory,\r\n\t\t\trawExtraField,\r\n\t\t\tencryptionStrength,\r\n\t\t\textendedTimestamp,\r\n\t\t} = options;\r\n\t\tconst compressed = level !== 0 && !directory;\r\n\t\tconst encrypted = Boolean(password && getLength(password));\r\n\t\tlet version = options.version;\r\n\t\tlet rawExtraFieldAES;\r\n\t\tif (encrypted && !zipCrypto) {\r\n\t\t\trawExtraFieldAES = new Uint8Array(getLength(EXTRAFIELD_DATA_AES) + 2);\r\n\t\t\tconst extraFieldAESView = getDataView(rawExtraFieldAES);\r\n\t\t\tsetUint16(extraFieldAESView, 0, EXTRAFIELD_TYPE_AES);\r\n\t\t\tarraySet(rawExtraFieldAES, EXTRAFIELD_DATA_AES, 2);\r\n\t\t\tsetUint8(extraFieldAESView, 8, encryptionStrength);\r\n\t\t} else {\r\n\t\t\trawExtraFieldAES = new Uint8Array();\r\n\t\t}\r\n\t\tlet rawExtraFieldNTFS;\r\n\t\tlet rawExtraFieldExtendedTimestamp;\r\n\t\tif (extendedTimestamp) {\r\n\t\t\trawExtraFieldExtendedTimestamp = new Uint8Array(9 + (lastAccessDate ? 4 : 0) + (creationDate ? 4 : 0));\r\n\t\t\tconst extraFieldExtendedTimestampView = getDataView(rawExtraFieldExtendedTimestamp);\r\n\t\t\tsetUint16(extraFieldExtendedTimestampView, 0, EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\r\n\t\t\tsetUint16(extraFieldExtendedTimestampView, 2, getLength(rawExtraFieldExtendedTimestamp) - 4);\r\n\t\t\tconst extraFieldExtendedTimestampFlag = 0x1 + (lastAccessDate ? 0x2 : 0) + (creationDate ? 0x4 : 0);\r\n\t\t\tsetUint8(extraFieldExtendedTimestampView, 4, extraFieldExtendedTimestampFlag);\r\n\t\t\tsetUint32(extraFieldExtendedTimestampView, 5, Math.floor(lastModDate.getTime() / 1000));\r\n\t\t\tif (lastAccessDate) {\r\n\t\t\t\tsetUint32(extraFieldExtendedTimestampView, 9, Math.floor(lastAccessDate.getTime() / 1000));\r\n\t\t\t}\r\n\t\t\tif (creationDate) {\r\n\t\t\t\tsetUint32(extraFieldExtendedTimestampView, 13, Math.floor(creationDate.getTime() / 1000));\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\trawExtraFieldNTFS = new Uint8Array(36);\r\n\t\t\t\tconst extraFieldNTFSView = getDataView(rawExtraFieldNTFS);\r\n\t\t\t\tconst lastModTimeNTFS = getTimeNTFS(lastModDate);\r\n\t\t\t\tsetUint16(extraFieldNTFSView, 0, EXTRAFIELD_TYPE_NTFS);\r\n\t\t\t\tsetUint16(extraFieldNTFSView, 2, 32);\r\n\t\t\t\tsetUint16(extraFieldNTFSView, 8, EXTRAFIELD_TYPE_NTFS_TAG1);\r\n\t\t\t\tsetUint16(extraFieldNTFSView, 10, 24);\r\n\t\t\t\tsetBigUint64(extraFieldNTFSView, 12, lastModTimeNTFS);\r\n\t\t\t\tsetBigUint64(extraFieldNTFSView, 20, getTimeNTFS(lastAccessDate) || lastModTimeNTFS);\r\n\t\t\t\tsetBigUint64(extraFieldNTFSView, 28, getTimeNTFS(creationDate) || lastModTimeNTFS);\r\n\t\t\t} catch (_error) {\r\n\t\t\t\trawExtraFieldNTFS = new Uint8Array();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\trawExtraFieldNTFS = rawExtraFieldExtendedTimestamp = new Uint8Array();\r\n\t\t}\r\n\t\tlet bitFlag = BITFLAG_LANG_ENCODING_FLAG;\r\n\t\tif (dataDescriptor) {\r\n\t\t\tbitFlag = bitFlag | BITFLAG_DATA_DESCRIPTOR;\r\n\t\t}\r\n\t\tlet compressionMethod = COMPRESSION_METHOD_STORE;\r\n\t\tif (compressed) {\r\n\t\t\tcompressionMethod = COMPRESSION_METHOD_DEFLATE;\r\n\t\t}\r\n\t\tif (zip64) {\r\n\t\t\tversion = version > VERSION_ZIP64 ? version : VERSION_ZIP64;\r\n\t\t}\r\n\t\tif (encrypted) {\r\n\t\t\tbitFlag = bitFlag | BITFLAG_ENCRYPTED;\r\n\t\t\tif (!zipCrypto) {\r\n\t\t\t\tversion = version > VERSION_AES ? version : VERSION_AES;\r\n\t\t\t\tcompressionMethod = COMPRESSION_METHOD_AES;\r\n\t\t\t\tif (compressed) {\r\n\t\t\t\t\trawExtraFieldAES[9] = COMPRESSION_METHOD_DEFLATE;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst headerArray = new Uint8Array(26);\r\n\t\tconst headerView = getDataView(headerArray);\r\n\t\tsetUint16(headerView, 0, version);\r\n\t\tsetUint16(headerView, 2, bitFlag);\r\n\t\tsetUint16(headerView, 4, compressionMethod);\r\n\t\tconst dateArray = new Uint32Array(1);\r\n\t\tconst dateView = getDataView(dateArray);\r\n\t\tlet lastModDateMsDos;\r\n\t\tif (lastModDate < MIN_DATE) {\r\n\t\t\tlastModDateMsDos = MIN_DATE;\r\n\t\t} else if (lastModDate > MAX_DATE) {\r\n\t\t\tlastModDateMsDos = MAX_DATE;\r\n\t\t} else {\r\n\t\t\tlastModDateMsDos = lastModDate;\r\n\t\t}\r\n\t\tsetUint16(dateView, 0, (((lastModDateMsDos.getHours() << 6) | lastModDateMsDos.getMinutes()) << 5) | lastModDateMsDos.getSeconds() / 2);\r\n\t\tsetUint16(dateView, 2, ((((lastModDateMsDos.getFullYear() - 1980) << 4) | (lastModDateMsDos.getMonth() + 1)) << 5) | lastModDateMsDos.getDate());\r\n\t\tconst rawLastModDate = dateArray[0];\r\n\t\tsetUint32(headerView, 6, rawLastModDate);\r\n\t\tsetUint16(headerView, 22, getLength(rawFilename));\r\n\t\tconst extraFieldLength = getLength(rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS, rawExtraField);\r\n\t\tsetUint16(headerView, 24, extraFieldLength);\r\n\t\tconst localHeaderArray = new Uint8Array(30 + getLength(rawFilename) + extraFieldLength);\r\n\t\tconst localHeaderView = getDataView(localHeaderArray);\r\n\t\tsetUint32(localHeaderView, 0, LOCAL_FILE_HEADER_SIGNATURE);\r\n\t\tarraySet(localHeaderArray, headerArray, 4);\r\n\t\tarraySet(localHeaderArray, rawFilename, 30);\r\n\t\tarraySet(localHeaderArray, rawExtraFieldAES, 30 + getLength(rawFilename));\r\n\t\tarraySet(localHeaderArray, rawExtraFieldExtendedTimestamp, 30 + getLength(rawFilename, rawExtraFieldAES));\r\n\t\tarraySet(localHeaderArray, rawExtraFieldNTFS, 30 + getLength(rawFilename, rawExtraFieldAES, rawExtraFieldExtendedTimestamp));\r\n\t\tarraySet(localHeaderArray, rawExtraField, 30 + getLength(rawFilename, rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS));\r\n\t\treturn {\r\n\t\t\tlocalHeaderArray,\r\n\t\t\theaderArray,\r\n\t\t\theaderView,\r\n\t\t\tlastModDate,\r\n\t\t\trawLastModDate,\r\n\t\t\tencrypted,\r\n\t\t\tcompressed,\r\n\t\t\tversion,\r\n\t\t\tcompressionMethod,\r\n\t\t\trawExtraFieldExtendedTimestamp,\r\n\t\t\trawExtraFieldNTFS,\r\n\t\t\trawExtraFieldAES\r\n\t\t};\r\n\t}\r\n\r\n\tfunction getDataDescriptorInfo(options) {\r\n\t\tconst {\r\n\t\t\tzip64,\r\n\t\t\tdataDescriptor,\r\n\t\t\tdataDescriptorSignature\r\n\t\t} = options;\r\n\t\tlet dataDescriptorArray = new Uint8Array();\r\n\t\tlet dataDescriptorView, dataDescriptorOffset = 0;\r\n\t\tif (dataDescriptor) {\r\n\t\t\tdataDescriptorArray = new Uint8Array(zip64 ? (dataDescriptorSignature ? 24 : 20) : (dataDescriptorSignature ? 16 : 12));\r\n\t\t\tdataDescriptorView = getDataView(dataDescriptorArray);\r\n\t\t\tif (dataDescriptorSignature) {\r\n\t\t\t\tdataDescriptorOffset = 4;\r\n\t\t\t\tsetUint32(dataDescriptorView, 0, DATA_DESCRIPTOR_RECORD_SIGNATURE);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tdataDescriptorArray,\r\n\t\t\tdataDescriptorView,\r\n\t\t\tdataDescriptorOffset\r\n\t\t};\r\n\t}\r\n\r\n\tfunction setEntryInfo(entryInfo, options) {\r\n\t\tconst {\r\n\t\t\tsignature,\r\n\t\t\trawExtraFieldZip64,\r\n\t\t\tcompressedSize,\r\n\t\t\tuncompressedSize,\r\n\t\t\theaderInfo,\r\n\t\t\tdataDescriptorInfo\r\n\t\t} = entryInfo;\r\n\t\tconst {\r\n\t\t\theaderView,\r\n\t\t\tencrypted\r\n\t\t} = headerInfo;\r\n\t\tconst {\r\n\t\t\tdataDescriptorView,\r\n\t\t\tdataDescriptorOffset\r\n\t\t} = dataDescriptorInfo;\r\n\t\tconst {\r\n\t\t\tzip64,\r\n\t\t\tzip64UncompressedSize,\r\n\t\t\tzip64CompressedSize,\r\n\t\t\tzipCrypto,\r\n\t\t\tdataDescriptor\r\n\t\t} = options;\r\n\t\tif ((!encrypted || zipCrypto) && signature !== UNDEFINED_VALUE) {\r\n\t\t\tsetUint32(headerView, 10, signature);\r\n\t\t\tif (dataDescriptor) {\r\n\t\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset, signature);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (zip64) {\r\n\t\t\tconst rawExtraFieldZip64View = getDataView(rawExtraFieldZip64);\r\n\t\t\tsetUint16(rawExtraFieldZip64View, 0, EXTRAFIELD_TYPE_ZIP64);\r\n\t\t\tsetUint16(rawExtraFieldZip64View, 2, rawExtraFieldZip64.length - 4);\r\n\t\t\tlet rawExtraFieldZip64Offset = 4;\r\n\t\t\tif (zip64UncompressedSize) {\r\n\t\t\t\tsetUint32(headerView, 18, MAX_32_BITS);\r\n\t\t\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(uncompressedSize));\r\n\t\t\t\trawExtraFieldZip64Offset += 8;\r\n\t\t\t}\r\n\t\t\tif (zip64CompressedSize) {\r\n\t\t\t\tsetUint32(headerView, 14, MAX_32_BITS);\r\n\t\t\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(compressedSize));\r\n\t\t\t}\r\n\t\t\tif (dataDescriptor) {\r\n\t\t\t\tsetBigUint64(dataDescriptorView, dataDescriptorOffset + 4, BigInt(compressedSize));\r\n\t\t\t\tsetBigUint64(dataDescriptorView, dataDescriptorOffset + 12, BigInt(uncompressedSize));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetUint32(headerView, 14, compressedSize);\r\n\t\t\tsetUint32(headerView, 18, uncompressedSize);\r\n\t\t\tif (dataDescriptor) {\r\n\t\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset + 4, compressedSize);\r\n\t\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset + 8, uncompressedSize);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function writeExtraHeaderInfo(fileEntry, entryData, writable, { zipCrypto }) {\r\n\t\tconst arrayBuffer = await sliceAsArrayBuffer(entryData, 0, 26);\r\n\t\tconst arrayBufferView = new DataView(arrayBuffer);\r\n\t\tif (!fileEntry.encrypted || zipCrypto) {\r\n\t\t\tsetUint32(arrayBufferView, 14, fileEntry.signature);\r\n\t\t}\r\n\t\tif (fileEntry.zip64) {\r\n\t\t\tsetUint32(arrayBufferView, 18, MAX_32_BITS);\r\n\t\t\tsetUint32(arrayBufferView, 22, MAX_32_BITS);\r\n\t\t} else {\r\n\t\t\tsetUint32(arrayBufferView, 18, fileEntry.compressedSize);\r\n\t\t\tsetUint32(arrayBufferView, 22, fileEntry.uncompressedSize);\r\n\t\t}\r\n\t\tawait writeData(writable, new Uint8Array(arrayBuffer));\r\n\t\treturn entryData.slice(arrayBuffer.byteLength);\r\n\t}\r\n\r\n\tfunction setZip64ExtraInfo(fileEntry, options) {\r\n\t\tconst { rawExtraFieldZip64, offset, diskNumberStart } = fileEntry;\r\n\t\tconst { zip64UncompressedSize, zip64CompressedSize, zip64Offset, zip64DiskNumberStart } = options;\r\n\t\tconst rawExtraFieldZip64View = getDataView(rawExtraFieldZip64);\r\n\t\tlet rawExtraFieldZip64Offset = 4;\r\n\t\tif (zip64UncompressedSize) {\r\n\t\t\trawExtraFieldZip64Offset += 8;\r\n\t\t}\r\n\t\tif (zip64CompressedSize) {\r\n\t\t\trawExtraFieldZip64Offset += 8;\r\n\t\t}\r\n\t\tif (zip64Offset) {\r\n\t\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(offset));\r\n\t\t\trawExtraFieldZip64Offset += 8;\r\n\t\t}\r\n\t\tif (zip64DiskNumberStart) {\r\n\t\t\tsetUint32(rawExtraFieldZip64View, rawExtraFieldZip64Offset, diskNumberStart);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function closeFile(zipWriter, comment, options) {\r\n\t\tconst { files, writer } = zipWriter;\r\n\t\tconst { diskOffset, writable } = writer;\r\n\t\tlet { diskNumber } = writer;\r\n\t\tlet offset = 0;\r\n\t\tlet directoryDataLength = 0;\r\n\t\tlet directoryOffset = zipWriter.offset - diskOffset;\r\n\t\tlet filesLength = files.size;\r\n\t\tfor (const [, {\r\n\t\t\trawFilename,\r\n\t\t\trawExtraFieldZip64,\r\n\t\t\trawExtraFieldAES,\r\n\t\t\trawExtraField,\r\n\t\t\trawComment,\r\n\t\t\trawExtraFieldExtendedTimestamp,\r\n\t\t\trawExtraFieldNTFS\r\n\t\t}] of files) {\r\n\t\t\tdirectoryDataLength += 46 +\r\n\t\t\t\tgetLength(\r\n\t\t\t\t\trawFilename,\r\n\t\t\t\t\trawComment,\r\n\t\t\t\t\trawExtraFieldZip64,\r\n\t\t\t\t\trawExtraFieldAES,\r\n\t\t\t\t\trawExtraFieldExtendedTimestamp,\r\n\t\t\t\t\trawExtraFieldNTFS,\r\n\t\t\t\t\trawExtraField);\r\n\t\t}\r\n\t\tconst directoryArray = new Uint8Array(directoryDataLength);\r\n\t\tconst directoryView = getDataView(directoryArray);\r\n\t\tawait initStream(writer);\r\n\t\tlet directoryDiskOffset = 0;\r\n\t\tfor (const [indexFileEntry, fileEntry] of Array.from(files.values()).entries()) {\r\n\t\t\tconst {\r\n\t\t\t\toffset: fileEntryOffset,\r\n\t\t\t\trawFilename,\r\n\t\t\t\trawExtraFieldZip64,\r\n\t\t\t\trawExtraFieldAES,\r\n\t\t\t\trawExtraFieldNTFS,\r\n\t\t\t\trawExtraField,\r\n\t\t\t\trawComment,\r\n\t\t\t\tversionMadeBy,\r\n\t\t\t\theaderArray,\r\n\t\t\t\tdirectory,\r\n\t\t\t\tzip64,\r\n\t\t\t\tzip64UncompressedSize,\r\n\t\t\t\tzip64CompressedSize,\r\n\t\t\t\tzip64DiskNumberStart,\r\n\t\t\t\tzip64Offset,\r\n\t\t\t\tmsDosCompatible,\r\n\t\t\t\tinternalFileAttribute,\r\n\t\t\t\texternalFileAttribute,\r\n\t\t\t\textendedTimestamp,\r\n\t\t\t\tlastModDate,\r\n\t\t\t\tdiskNumberStart,\r\n\t\t\t\tuncompressedSize,\r\n\t\t\t\tcompressedSize\r\n\t\t\t} = fileEntry;\r\n\t\t\tlet rawExtraFieldExtendedTimestamp;\r\n\t\t\tif (extendedTimestamp) {\r\n\t\t\t\trawExtraFieldExtendedTimestamp = new Uint8Array(9);\r\n\t\t\t\tconst extraFieldExtendedTimestampView = getDataView(rawExtraFieldExtendedTimestamp);\r\n\t\t\t\tsetUint16(extraFieldExtendedTimestampView, 0, EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\r\n\t\t\t\tsetUint16(extraFieldExtendedTimestampView, 2, getLength(rawExtraFieldExtendedTimestamp) - 4);\r\n\t\t\t\tsetUint8(extraFieldExtendedTimestampView, 4, 0x1);\r\n\t\t\t\tsetUint32(extraFieldExtendedTimestampView, 5, Math.floor(lastModDate.getTime() / 1000));\r\n\t\t\t} else {\r\n\t\t\t\trawExtraFieldExtendedTimestamp = new Uint8Array();\r\n\t\t\t}\r\n\t\t\tconst extraFieldLength = getLength(rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS, rawExtraField);\r\n\t\t\tsetUint32(directoryView, offset, CENTRAL_FILE_HEADER_SIGNATURE);\r\n\t\t\tsetUint16(directoryView, offset + 4, versionMadeBy);\r\n\t\t\tconst headerView = getDataView(headerArray);\r\n\t\t\tif (!zip64UncompressedSize) {\r\n\t\t\t\tsetUint32(headerView, 18, uncompressedSize);\r\n\t\t\t}\r\n\t\t\tif (!zip64CompressedSize) {\r\n\t\t\t\tsetUint32(headerView, 14, compressedSize);\r\n\t\t\t}\r\n\t\t\tarraySet(directoryArray, headerArray, offset + 6);\r\n\t\t\tsetUint16(directoryView, offset + 30, extraFieldLength);\r\n\t\t\tsetUint16(directoryView, offset + 32, getLength(rawComment));\r\n\t\t\tsetUint16(directoryView, offset + 34, zip64 && zip64DiskNumberStart ? MAX_16_BITS : diskNumberStart);\r\n\t\t\tsetUint16(directoryView, offset + 36, internalFileAttribute);\r\n\t\t\tif (externalFileAttribute) {\r\n\t\t\t\tsetUint32(directoryView, offset + 38, externalFileAttribute);\r\n\t\t\t} else if (directory && msDosCompatible) {\r\n\t\t\t\tsetUint8(directoryView, offset + 38, FILE_ATTR_MSDOS_DIR_MASK);\r\n\t\t\t}\r\n\t\t\tsetUint32(directoryView, offset + 42, zip64 && zip64Offset ? MAX_32_BITS : fileEntryOffset);\r\n\t\t\tarraySet(directoryArray, rawFilename, offset + 46);\r\n\t\t\tarraySet(directoryArray, rawExtraFieldZip64, offset + 46 + getLength(rawFilename));\r\n\t\t\tarraySet(directoryArray, rawExtraFieldAES, offset + 46 + getLength(rawFilename, rawExtraFieldZip64));\r\n\t\t\tarraySet(directoryArray, rawExtraFieldExtendedTimestamp, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES));\r\n\t\t\tarraySet(directoryArray, rawExtraFieldNTFS, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldExtendedTimestamp));\r\n\t\t\tarraySet(directoryArray, rawExtraField, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS));\r\n\t\t\tarraySet(directoryArray, rawComment, offset + 46 + getLength(rawFilename) + extraFieldLength);\r\n\t\t\tconst directoryEntryLength = 46 + getLength(rawFilename, rawComment) + extraFieldLength;\r\n\t\t\tif (offset - directoryDiskOffset > writer.availableSize) {\r\n\t\t\t\twriter.availableSize = 0;\r\n\t\t\t\tawait writeData(writable, directoryArray.slice(directoryDiskOffset, offset));\r\n\t\t\t\tdirectoryDiskOffset = offset;\r\n\t\t\t}\r\n\t\t\toffset += directoryEntryLength;\r\n\t\t\tif (options.onprogress) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait options.onprogress(indexFileEntry + 1, files.size, new Entry(fileEntry));\r\n\t\t\t\t} catch (_error) {\r\n\t\t\t\t\t// ignored\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tawait writeData(writable, directoryDiskOffset ? directoryArray.slice(directoryDiskOffset) : directoryArray);\r\n\t\tlet lastDiskNumber = writer.diskNumber;\r\n\t\tconst { availableSize } = writer;\r\n\t\tif (availableSize < END_OF_CENTRAL_DIR_LENGTH) {\r\n\t\t\tlastDiskNumber++;\r\n\t\t}\r\n\t\tlet zip64 = getOptionValue(zipWriter, options, \"zip64\");\r\n\t\tif (directoryOffset >= MAX_32_BITS || directoryDataLength >= MAX_32_BITS || filesLength >= MAX_16_BITS || lastDiskNumber >= MAX_16_BITS) {\r\n\t\t\tif (zip64 === false) {\r\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\r\n\t\t\t} else {\r\n\t\t\t\tzip64 = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst endOfdirectoryArray = new Uint8Array(zip64 ? ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH : END_OF_CENTRAL_DIR_LENGTH);\r\n\t\tconst endOfdirectoryView = getDataView(endOfdirectoryArray);\r\n\t\toffset = 0;\r\n\t\tif (zip64) {\r\n\t\t\tsetUint32(endOfdirectoryView, 0, ZIP64_END_OF_CENTRAL_DIR_SIGNATURE);\r\n\t\t\tsetBigUint64(endOfdirectoryView, 4, BigInt(44));\r\n\t\t\tsetUint16(endOfdirectoryView, 12, 45);\r\n\t\t\tsetUint16(endOfdirectoryView, 14, 45);\r\n\t\t\tsetUint32(endOfdirectoryView, 16, lastDiskNumber);\r\n\t\t\tsetUint32(endOfdirectoryView, 20, diskNumber);\r\n\t\t\tsetBigUint64(endOfdirectoryView, 24, BigInt(filesLength));\r\n\t\t\tsetBigUint64(endOfdirectoryView, 32, BigInt(filesLength));\r\n\t\t\tsetBigUint64(endOfdirectoryView, 40, BigInt(directoryDataLength));\r\n\t\t\tsetBigUint64(endOfdirectoryView, 48, BigInt(directoryOffset));\r\n\t\t\tsetUint32(endOfdirectoryView, 56, ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE);\r\n\t\t\tsetBigUint64(endOfdirectoryView, 64, BigInt(directoryOffset) + BigInt(directoryDataLength));\r\n\t\t\tsetUint32(endOfdirectoryView, 72, lastDiskNumber + 1);\r\n\t\t\tconst supportZip64SplitFile = getOptionValue(zipWriter, options, \"supportZip64SplitFile\", true);\r\n\t\t\tif (supportZip64SplitFile) {\r\n\t\t\t\tlastDiskNumber = MAX_16_BITS;\r\n\t\t\t\tdiskNumber = MAX_16_BITS;\r\n\t\t\t}\r\n\t\t\tfilesLength = MAX_16_BITS;\r\n\t\t\tdirectoryOffset = MAX_32_BITS;\r\n\t\t\tdirectoryDataLength = MAX_32_BITS;\r\n\t\t\toffset += ZIP64_END_OF_CENTRAL_DIR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH;\r\n\t\t}\r\n\t\tsetUint32(endOfdirectoryView, offset, END_OF_CENTRAL_DIR_SIGNATURE);\r\n\t\tsetUint16(endOfdirectoryView, offset + 4, lastDiskNumber);\r\n\t\tsetUint16(endOfdirectoryView, offset + 6, diskNumber);\r\n\t\tsetUint16(endOfdirectoryView, offset + 8, filesLength);\r\n\t\tsetUint16(endOfdirectoryView, offset + 10, filesLength);\r\n\t\tsetUint32(endOfdirectoryView, offset + 12, directoryDataLength);\r\n\t\tsetUint32(endOfdirectoryView, offset + 16, directoryOffset);\r\n\t\tconst commentLength = getLength(comment);\r\n\t\tif (commentLength) {\r\n\t\t\tif (commentLength <= MAX_16_BITS) {\r\n\t\t\t\tsetUint16(endOfdirectoryView, offset + 20, commentLength);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(ERR_INVALID_COMMENT);\r\n\t\t\t}\r\n\t\t}\r\n\t\tawait writeData(writable, endOfdirectoryArray);\r\n\t\tif (commentLength) {\r\n\t\t\tawait writeData(writable, comment);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction sliceAsArrayBuffer(blob, start, end) {\r\n\t\tif (start || end) {\r\n\t\t\treturn blob.slice(start, end).arrayBuffer();\r\n\t\t} else {\r\n\t\t\treturn blob.arrayBuffer();\r\n\t\t}\r\n\t}\r\n\r\n\tasync function writeData(writable, array) {\r\n\t\tconst streamWriter = writable.getWriter();\r\n\t\tawait streamWriter.ready;\r\n\t\twritable.size += getLength(array);\r\n\t\tawait streamWriter.write(array);\r\n\t\tstreamWriter.releaseLock();\r\n\t}\r\n\r\n\tfunction getTimeNTFS(date) {\r\n\t\tif (date) {\r\n\t\t\treturn ((BigInt(date.getTime()) + BigInt(11644473600000)) * BigInt(10000));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getOptionValue(zipWriter, options, name, defaultValue) {\r\n\t\tconst result = options[name] === UNDEFINED_VALUE ? zipWriter.options[name] : options[name];\r\n\t\treturn result === UNDEFINED_VALUE ? defaultValue : result;\r\n\t}\r\n\r\n\tfunction getMaximumCompressedSize(uncompressedSize) {\r\n\t\treturn uncompressedSize + (5 * (Math.floor(uncompressedSize / 16383) + 1));\r\n\t}\r\n\r\n\tfunction setUint8(view, offset, value) {\r\n\t\tview.setUint8(offset, value);\r\n\t}\r\n\r\n\tfunction setUint16(view, offset, value) {\r\n\t\tview.setUint16(offset, value, true);\r\n\t}\r\n\r\n\tfunction setUint32(view, offset, value) {\r\n\t\tview.setUint32(offset, value, true);\r\n\t}\r\n\r\n\tfunction setBigUint64(view, offset, value) {\r\n\t\tview.setBigUint64(offset, value, true);\r\n\t}\r\n\r\n\tfunction arraySet(array, typedArray, offset) {\r\n\t\tarray.set(typedArray, offset);\r\n\t}\r\n\r\n\tfunction getDataView(array) {\r\n\t\treturn new DataView(array.buffer);\r\n\t}\r\n\r\n\tfunction getLength(...arrayLikes) {\r\n\t\tlet result = 0;\r\n\t\tarrayLikes.forEach(arrayLike => arrayLike && (result += arrayLike.length));\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/*\r\n\t Copyright (c) 2022 Gildas Lormeau. All rights reserved.\r\n\r\n\t Redistribution and use in source and binary forms, with or without\r\n\t modification, are permitted provided that the following conditions are met:\r\n\r\n\t 1. Redistributions of source code must retain the above copyright notice,\r\n\t this list of conditions and the following disclaimer.\r\n\r\n\t 2. Redistributions in binary form must reproduce the above copyright\r\n\t notice, this list of conditions and the following disclaimer in\r\n\t the documentation and/or other materials provided with the distribution.\r\n\r\n\t 3. The names of the authors may not be used to endorse or promote products\r\n\t derived from this software without specific prior written permission.\r\n\r\n\t THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n\t INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n\t FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n\t INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n\t INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\t LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n\t OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n\t LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n\t NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n\t EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t */\r\n\r\n\tlet baseURL;\r\n\ttry {\r\n\t\tbaseURL = (typeof document === 'undefined' && typeof location === 'undefined' ? new (require('u' + 'rl').URL)('file:' + __filename).href : typeof document === 'undefined' ? location.href : (document.currentScript && document.currentScript.src || new URL('zip.js', document.baseURI).href));\r\n\t} catch (_error) {\r\n\t\t// ignored\r\n\t}\r\n\tconfigure({ baseURL });\r\n\te(configure);\r\n\r\n\texports.BlobReader = BlobReader;\r\n\texports.BlobWriter = BlobWriter;\r\n\texports.Data64URIReader = Data64URIReader;\r\n\texports.Data64URIWriter = Data64URIWriter;\r\n\texports.ERR_BAD_FORMAT = ERR_BAD_FORMAT;\r\n\texports.ERR_CENTRAL_DIRECTORY_NOT_FOUND = ERR_CENTRAL_DIRECTORY_NOT_FOUND;\r\n\texports.ERR_DUPLICATED_NAME = ERR_DUPLICATED_NAME;\r\n\texports.ERR_ENCRYPTED = ERR_ENCRYPTED;\r\n\texports.ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND = ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND;\r\n\texports.ERR_EOCDR_NOT_FOUND = ERR_EOCDR_NOT_FOUND;\r\n\texports.ERR_EOCDR_ZIP64_NOT_FOUND = ERR_EOCDR_ZIP64_NOT_FOUND;\r\n\texports.ERR_EXTRAFIELD_ZIP64_NOT_FOUND = ERR_EXTRAFIELD_ZIP64_NOT_FOUND;\r\n\texports.ERR_HTTP_RANGE = ERR_HTTP_RANGE;\r\n\texports.ERR_INVALID_COMMENT = ERR_INVALID_COMMENT;\r\n\texports.ERR_INVALID_ENCRYPTION_STRENGTH = ERR_INVALID_ENCRYPTION_STRENGTH;\r\n\texports.ERR_INVALID_ENTRY_COMMENT = ERR_INVALID_ENTRY_COMMENT;\r\n\texports.ERR_INVALID_ENTRY_NAME = ERR_INVALID_ENTRY_NAME;\r\n\texports.ERR_INVALID_EXTRAFIELD_DATA = ERR_INVALID_EXTRAFIELD_DATA;\r\n\texports.ERR_INVALID_EXTRAFIELD_TYPE = ERR_INVALID_EXTRAFIELD_TYPE;\r\n\texports.ERR_INVALID_PASSWORD = ERR_INVALID_PASSWORD;\r\n\texports.ERR_INVALID_SIGNATURE = ERR_INVALID_SIGNATURE;\r\n\texports.ERR_INVALID_VERSION = ERR_INVALID_VERSION;\r\n\texports.ERR_ITERATOR_COMPLETED_TOO_SOON = ERR_ITERATOR_COMPLETED_TOO_SOON;\r\n\texports.ERR_LOCAL_FILE_HEADER_NOT_FOUND = ERR_LOCAL_FILE_HEADER_NOT_FOUND;\r\n\texports.ERR_SPLIT_ZIP_FILE = ERR_SPLIT_ZIP_FILE;\r\n\texports.ERR_UNSUPPORTED_COMPRESSION = ERR_UNSUPPORTED_COMPRESSION;\r\n\texports.ERR_UNSUPPORTED_ENCRYPTION = ERR_UNSUPPORTED_ENCRYPTION;\r\n\texports.ERR_UNSUPPORTED_FORMAT = ERR_UNSUPPORTED_FORMAT;\r\n\texports.HttpRangeReader = HttpRangeReader;\r\n\texports.HttpReader = HttpReader;\r\n\texports.Reader = Reader;\r\n\texports.SplitDataReader = SplitDataReader;\r\n\texports.SplitDataWriter = SplitDataWriter;\r\n\texports.SplitZipReader = SplitZipReader;\r\n\texports.SplitZipWriter = SplitZipWriter;\r\n\texports.TextReader = TextReader;\r\n\texports.TextWriter = TextWriter;\r\n\texports.Uint8ArrayReader = Uint8ArrayReader;\r\n\texports.Uint8ArrayWriter = Uint8ArrayWriter;\r\n\texports.Writer = Writer;\r\n\texports.ZipReader = ZipReader;\r\n\texports.ZipWriter = ZipWriter;\r\n\texports.configure = configure;\r\n\texports.getMimeType = getMimeType;\r\n\texports.initReader = initReader;\r\n\texports.initShimAsyncCodec = initShimAsyncCodec;\r\n\texports.initStream = initStream;\r\n\texports.initWriter = initWriter;\r\n\texports.readUint8Array = readUint8Array;\r\n\texports.terminateWorkers = terminateWorkers;\r\n\r\n\tObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\n}));\r\n"],"names":["global","factory","this","exports","Array","Object","String","Number","BigInt","Math","Date","Map","Set","Response","URL","Error","Uint8Array","Uint16Array","Uint32Array","DataView","Blob","Promise","TextEncoder","TextDecoder","document","crypto","btoa","TransformStream","ReadableStream","WritableStream","CompressionStream","DecompressionStream","navigator","Worker","globalThis","self","MAX_32_BITS","COMPRESSION_METHOD_DEFLATE","COMPRESSION_METHOD_STORE","COMPRESSION_METHOD_AES","LOCAL_FILE_HEADER_SIGNATURE","SPLIT_ZIP_FILE_SIGNATURE","DATA_DESCRIPTOR_RECORD_SIGNATURE","EXTRAFIELD_TYPE_ZIP64","EXTRAFIELD_TYPE_AES","EXTRAFIELD_TYPE_NTFS","EXTRAFIELD_TYPE_NTFS_TAG1","EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP","BITFLAG_ENCRYPTED","BITFLAG_DATA_DESCRIPTOR","BITFLAG_LANG_ENCODING_FLAG","VERSION_ZIP64","VERSION_AES","MAX_DATE","MIN_DATE","UNDEFINED_VALUE","undefined","FUNCTION_TYPE$1","StreamAdapter","constructor","Codec","_format","options","codec","transform","chunk","controller","enqueue","append","flush","MINIMUM_CHUNK_SIZE","maxWorkers","hardwareConcurrency","_error","DEFAULT_CONFIGURATION","chunkSize","terminateWorkerTimeout","useWebWorkers","useCompressionStream","workerScripts","CompressionStreamNative","DecompressionStreamNative","config","assign","getConfiguration","getChunkSize","max","configure","configuration","baseURL","Deflate","Inflate","setIfDefined","deflate","inflate","isArray","propertyName","propertyValue","createCodecClass","constructorOptions","registerDataHandler","codecAdapter","hasOwn","level","data","pendingData","previousPendingData","length","set","push","getResponse","output","table","i","t","j","Crc32","crc","offset","get","Crc32Stream","stream","crc32","value","buffer","setUint32","encodeText","unescape","encodeURIComponent","result","charCodeAt","encode","bitArray","concat","a1","a2","last","shift","getPartial","_shiftRight","slice","bitLength","a","l","x","clamp","len","ceil","partial","_end","round","carry","out","last2","shift2","pop","bytes","fromBits","arr","byteLength","tmp","toBits","hash","sha1","blockSize","_init","_key","_h","_buffer","_length","reset","update","utf8String","b","ol","nl","c","_block","subarray","splice","finalize","h","floor","_f","d","_S","n","words","w","e","cipher","key","aes","_tables","_precompute","sbox","decTable","keyLen","encKey","decKey","rcon","encrypt","_crypt","decrypt","encTable","sboxInv","th","xInv","x2","x4","x8","s","tDec","tEnc","input","dir","nInnerRounds","t0","t1","t2","t3","b2","c2","kIndex","random","getRandomValues","typedArray","r","m_w","m_z","mask","rcache","_r","mode","prf","iv","_prf","_initIv","_iv","calculate","incWord","word","b1","b3","incCounter","counter","bl","misc","importKey","password","hmacSha1","pbkdf2","salt","count","u","ui","k","arrayBuffer","ArrayBuffer","outLength","setInt32","Hash","_hash","exKey","_baseHash","bs","_resultHash","_updated","digest","GET_RANDOM_VALUES_SUPPORTED","array","RAW_FORMAT","PBKDF2_ALGORITHM","name","BASE_KEY_ALGORITHM","DERIVED_BITS_ALGORITHM","iterations","DERIVED_BITS_USAGE","SALT_LENGTH","KEY_LENGTH","COUNTER_DEFAULT_VALUE","CRYPTO_API_SUPPORTED","subtle","SUBTLE_API_SUPPORTED","codecBytes","Aes","CtrGladman","ctrGladman","HmacSha1","IMPORT_KEY_SUPPORTED","DERIVE_BITS_SUPPORTED","deriveBits","AESDecryptionStream","signed","encryptionStrength","checkPasswordOnly","start","ready","resolve","resolveReady","strength","pending","aesCrypto","preamble","passwordVerificationKey","createKeys$1","passwordVerification","createDecryptionKeys","error","ctr","hmac","chunkToDecrypt","originalSignature","decryptedChunkArray","encryptedChunk","decryptedChunk","signature","indexSignature","AESEncryptionStream","createEncryptionKeys","encryptedChunkArray","paddingStart","paddingEnd","verifySignature","inputLength","inputArray","expand","inputChunk","outputChunk","encodedPassword","baseKey","format","algorithm","extractable","keyUsages","derivedBits","compositeKey","authentication","keys","from","leftArray","rightArray","begin","end","ZipCryptoDecryptionStream","createKeys","zipCrypto","decryptedHeader","HEADER_LENGTH","ZipCryptoEncryptionStream","header","target","index","getByte","updateKeys","crcKey0","crcKey2","byte","key0","key1","key2","getInt32","imul","getInt8","temp","number","DeflateStream","compressed","encrypted","crc32Stream","encryptionStream","readable","filterEmptyChunks","super","pipeThrough","pipeThroughCommpressionStream","setReadable","async","getUint32","InflateStream","decryptionStream","dataViewSignature","defineProperty","CodecStreamNative","CodecStream","transformStream","MESSAGE_EVENT_TYPE","MESSAGE_START","MESSAGE_PULL","MESSAGE_DATA","MESSAGE_ACK_DATA","MESSAGE_CLOSE","CODEC_DEFLATE","codecType","Stream","startsWith","size","WEB_WORKERS_SUPPORTED","CodecWorker","workerData","onTaskFinished","writable","streamOptions","transferStreams","scripts","signal","busy","ProgressWatcherStream","terminate","worker","interface","createWebWorkerInterface","createWorkerInterface","readableSource","onstart","onprogress","onend","chunkOffset","callHandler","highWaterMark","handler","parameters","run","codecStream","pipeTo","preventClose","preventAbort","runWorker$1","getWebWorker","resolveResult","rejectResult","reject","reader","writer","closed","writableSource","getWriter","resolveStreamClosed","write","close","releaseLock","abort","reason","watchClosedStream","streamsTransferred","sendMessage","type","getReader","resultValue","runWebWorker","classicWorkersSupported","transferStreamsSupported","url","workerOptions","scriptUrl","addEventListener","event","messageId","message","stack","code","responseError","done","read","onMessage","transferables","postMessage","pool","pendingRequests","indexWorker","runWorker","streamCopy","find","clearTerminateTimeout","isFinite","terminateTimeout","setTimeout","filter","clearTimeout","ERR_HTTP_STATUS","ERR_HTTP_RANGE","HTTP_HEADER_CONTENT_LENGTH","HTTP_HEADER_RANGE","HTTP_METHOD_HEAD","HTTP_METHOD_GET","HTTP_RANGE_UNIT","DEFAULT_CHUNK_SIZE","init","initialized","Reader","diskNumberStart","readUint8Array","min","Writer","writeUint8Array","BlobReader","blob","offsetEnd","BlobWriter","contentType","headers","getData","FetchReader","createHtpReader","initHttpReader","sendFetchRequest","getFetchRequestData","readUint8ArrayHttpReader","XHRReader","sendXMLHttpRequest","getXMLHttpRequestData","httpReader","preventHeadRequest","useRangeHeader","forceRangeRequests","useXHR","sendRequest","getRequestData","protocol","isHttpFamily","getRangeHeaders","contentSize","contentRangeHeader","splitHeader","trim","split","headerValue","getContentLength","response","status","getHeaders","Symbol","iterator","fromEntries","contentLength","method","fetch","statusText","request","XMLHttpRequest","getAllResponseHeaders","forEach","replace","toUpperCase","detail","open","entry","entries","setRequestHeader","responseType","send","HttpReader","SplitDataReader","readers","lastDiskNumber","all","map","diskReader","diskNumber","currentDiskNumber","currentReaderOffset","currentReader","currentReaderSize","chunkLength","SplitDataWriter","writerGenerator","maxSize","zipWriter","diskSourceWriter","diskWritable","diskWriter","diskOffset","availableSize","writeChunk","closeDisk","next","initStream","initSize","initReader","initWriter","Infinity","SplitZipReader","SplitZipWriter","CP437","VALID_CP437","decodeText","encoding","toLowerCase","stringValue","indexCharacter","decode","decodeCP437","PROPERTY_NAME_LAST_MODIFICATION_DATE","PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE","PROPERTY_NAME_LAST_ACCESS_DATE","PROPERTY_NAME_RAW_LAST_ACCESS_DATE","PROPERTY_NAME_CREATION_DATE","PROPERTY_NAME_RAW_CREATION_DATE","PROPERTY_NAMES","Entry","ERR_BAD_FORMAT","ERR_EXTRAFIELD_ZIP64_NOT_FOUND","ZIP64_PROPERTIES","ZIP64_EXTRACTION","getValue","getBigUint64","ZipEntry","fileEntry","zipEntry","extraFieldAES","compressionMethod","bitFlag","rawLastModDate","uncompressedSize","compressedSize","localDirectory","dataView","getDataView$1","getOptionValue$1","originalCompressionMethod","readCommonHeader","rawExtraField","extraFieldLength","filenameLength","readCommonFooter","lastAccessDate","creationDate","dataOffset","dataDescriptor","outputSize","locked","directory","rawBitFlag","getUint16","version","languageEncodingFlag","lastModDate","getDate","extraField","rawExtraFieldView","offsetExtraField","extraFieldZip64","zip64","extraFieldView","missingProperties","_ref19","indexMissingProperty","extraction","readExtraFieldZip64","extraFieldUnicodePath","readExtraFieldUnicode","extraFieldUnicodeComment","getUint8","vendorVersion","vendorId","readExtraFieldAES","extraFieldNTFS","tag1Data","tagValue","attributeSize","tag1View","rawLastAccessDate","rawCreationDate","getDateNTFS","extraFieldData","readExtraFieldNTFS","extraFieldExtendedTimestamp","flags","timeProperties","timeRawProperties","indexProperty","time","rawPropertyName","readExtraFieldExtendedTimestamp","extraFieldUnicode","valid","zipReader","timeRaw","date","view","ERR_UNSUPPORTED_FORMAT","EXTRAFIELD_DATA_AES","workers","pendingEntries","writeData","streamWriter","getLength","getTimeNTFS","getTime","getOptionValue","defaultValue","setUint8","setUint16","setBigUint64","arraySet","getDataView","arrayLikes","arrayLike","location","require","__filename","href","currentScript","src","baseURI","createObjectURL","Data64URIReader","dataURI","dataEnd","charAt","dataStart","indexOf","dataArray","atob","substring","delta","indexByte","Data64URIWriter","indexArray","dataString","fromCharCode","ERR_CENTRAL_DIRECTORY_NOT_FOUND","ERR_DUPLICATED_NAME","ERR_ENCRYPTED","ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND","ERR_EOCDR_NOT_FOUND","ERR_EOCDR_ZIP64_NOT_FOUND","ERR_INVALID_COMMENT","ERR_INVALID_ENCRYPTION_STRENGTH","ERR_INVALID_ENTRY_COMMENT","ERR_INVALID_ENTRY_NAME","ERR_INVALID_EXTRAFIELD_DATA","ERR_INVALID_EXTRAFIELD_TYPE","ERR_INVALID_PASSWORD","ERR_INVALID_SIGNATURE","ERR_INVALID_VERSION","ERR_ITERATOR_COMPLETED_TOO_SOON","ERR_LOCAL_FILE_HEADER_NOT_FOUND","ERR_SPLIT_ZIP_FILE","ERR_UNSUPPORTED_COMPRESSION","ERR_UNSUPPORTED_ENCRYPTION","HttpRangeReader","TextReader","text","TextWriter","utf8","FileReader","onload","_ref15","onerror","readAsText","Uint8ArrayReader","Uint8ArrayWriter","previousArray","ZipReader","endOfDirectoryInfo","startOffset","minimumBytes","maximumLength","signatureArray","setUint32$1","maximumBytes","seek","seekSignature","MAX_16_BITS","endOfDirectoryView","directoryDataLength","directoryDataOffset","commentOffset","commentLength","appendedDataOffset","expectedLastDiskNumber","filesLength","prependedDataLength","endOfDirectoryLocatorView","endOfDirectoryArray","expectedDirectoryDataOffset","originalDirectoryDataOffset","directoryArray","directoryView","filenameEncoding","commentEncoding","indexFile","Boolean","filenameOffset","extraFieldOffset","versionMadeBy","msDosCompatible","rawFilename","endOffset","rawComment","filenameUTF8","commentUTF8","offsetFileEntry","internalFileAttribute","externalFileAttribute","filename","comment","endsWith","extractPrependedData","extractAppendedData","prependedData","appendedData","getEntriesGenerator","ZipWriter","addSplitZipSignature","files","filenames","pendingEntriesSize","pendingAddFileCalls","bufferedWrites","promiseAddFile","has","add","extendedTimestamp","keepOrder","bufferedWrite","dataDescriptorSignature","extraFieldSize","maximumCompressedSize","maximumEntrySize","zip64Enabled","getMaximumCompressedSize","zip64UncompressedSize","zip64CompressedSize","zip64Offset","supportZip64SplitFile","zip64DiskNumberStart","headerInfo","rawExtraFieldAES","rawExtraFieldNTFS","rawExtraFieldExtendedTimestamp","extraFieldAESView","extraFieldExtendedTimestampView","extraFieldNTFSView","lastModTimeNTFS","headerArray","headerView","dateArray","dateView","lastModDateMsDos","getHours","getMinutes","getSeconds","getFullYear","getMonth","localHeaderArray","getHeaderInfo","dataDescriptorInfo","dataDescriptorView","dataDescriptorArray","dataDescriptorOffset","getDataDescriptorInfo","entryInfo","previousFileEntry","values","releaseLockWriter","releaseLockCurrentFileEntry","writingBufferedEntryData","writingEntryData","fileWriter","lockPreviousFileEntry","lock","requestLockCurrentFileEntry","writerLocked","requestLockWriter","skipDiskIfNeeded","rawExtraFieldZip64","rawExtraFieldZip64Length","rawExtraFieldZip64View","rawExtraFieldZip64Offset","setEntryInfo","createFileEntry","entryData","sliceAsArrayBuffer","arrayBufferView","writeExtraHeaderInfo","setZip64ExtraInfo","hasCorruptedEntries","corruptedEntry","delete","lockWriter","getFileEntry","addFile","pendingEntry","directoryOffset","directoryDiskOffset","indexFileEntry","fileEntryOffset","directoryEntryLength","endOfdirectoryArray","END_OF_CENTRAL_DIR_LENGTH","endOfdirectoryView","ZIP64_END_OF_CENTRAL_DIR_LENGTH","closeFile","getMimeType","initShimAsyncCodec","library","terminateWorkers","module","define","amd","zip"],"mappings":"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"}