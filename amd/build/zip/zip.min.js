var global,factory;global=window,factory=function(exports){const{Array:Array,Object:Object,String:String,Number:Number,BigInt:BigInt,Math:Math,Date:Date,Map:Map,Set:Set,Response:Response,URL:URL,Error:Error,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,DataView:DataView,Blob:Blob,Promise:Promise,TextEncoder:TextEncoder,TextDecoder:TextDecoder,document:document,crypto:crypto,btoa:btoa,TransformStream:TransformStream,ReadableStream:ReadableStream,WritableStream:WritableStream,CompressionStream:CompressionStream,DecompressionStream:DecompressionStream,navigator:navigator,Worker:Worker}="undefined"!=typeof globalThis?globalThis:this||self,MAX_32_BITS=4294967295,COMPRESSION_METHOD_DEFLATE=8,COMPRESSION_METHOD_STORE=0,COMPRESSION_METHOD_AES=99,LOCAL_FILE_HEADER_SIGNATURE=67324752,SPLIT_ZIP_FILE_SIGNATURE=134695760,DATA_DESCRIPTOR_RECORD_SIGNATURE=SPLIT_ZIP_FILE_SIGNATURE,EXTRAFIELD_TYPE_ZIP64=1,EXTRAFIELD_TYPE_AES=39169,EXTRAFIELD_TYPE_NTFS=10,EXTRAFIELD_TYPE_NTFS_TAG1=1,EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP=21589,BITFLAG_ENCRYPTED=1,BITFLAG_DATA_DESCRIPTOR=8,BITFLAG_LANG_ENCODING_FLAG=2048,VERSION_ZIP64=45,VERSION_AES=51,MAX_DATE=new Date(2107,11,31),MIN_DATE=new Date(1980,0,1),UNDEFINED_VALUE=void 0,FUNCTION_TYPE$1="function";class StreamAdapter{constructor(Codec){return class extends TransformStream{constructor(_format,options){const codec=new Codec(options);super({transform(chunk,controller){controller.enqueue(codec.append(chunk))},flush(controller){const chunk=codec.flush();chunk&&controller.enqueue(chunk)}})}}}}const MINIMUM_CHUNK_SIZE=64;let maxWorkers=2;try{void 0!==navigator&&navigator.hardwareConcurrency&&(maxWorkers=navigator.hardwareConcurrency)}catch(_error){}const DEFAULT_CONFIGURATION={chunkSize:524288,maxWorkers:maxWorkers,terminateWorkerTimeout:5e3,useWebWorkers:!0,useCompressionStream:!0,workerScripts:UNDEFINED_VALUE,CompressionStreamNative:void 0!==CompressionStream&&CompressionStream,DecompressionStreamNative:void 0!==DecompressionStream&&DecompressionStream},config=Object.assign({},DEFAULT_CONFIGURATION);function getConfiguration(){return config}function getChunkSize(config){return Math.max(config.chunkSize,MINIMUM_CHUNK_SIZE)}function configure(configuration){const{baseURL:baseURL,chunkSize:chunkSize,maxWorkers:maxWorkers,terminateWorkerTimeout:terminateWorkerTimeout,useCompressionStream:useCompressionStream,useWebWorkers:useWebWorkers,Deflate:Deflate,Inflate:Inflate,CompressionStream:CompressionStream,DecompressionStream:DecompressionStream,workerScripts:workerScripts}=configuration;if(setIfDefined("baseURL",baseURL),setIfDefined("chunkSize",chunkSize),setIfDefined("maxWorkers",maxWorkers),setIfDefined("terminateWorkerTimeout",terminateWorkerTimeout),setIfDefined("useCompressionStream",useCompressionStream),setIfDefined("useWebWorkers",useWebWorkers),Deflate&&(config.CompressionStream=new StreamAdapter(Deflate)),Inflate&&(config.DecompressionStream=new StreamAdapter(Inflate)),setIfDefined("CompressionStream",CompressionStream),setIfDefined("DecompressionStream",DecompressionStream),workerScripts!==UNDEFINED_VALUE){const{deflate:deflate,inflate:inflate}=workerScripts;if((deflate||inflate)&&(config.workerScripts||(config.workerScripts={})),deflate){if(!Array.isArray(deflate))throw new Error("workerScripts.deflate must be an array");config.workerScripts.deflate=deflate}if(inflate){if(!Array.isArray(inflate))throw new Error("workerScripts.inflate must be an array");config.workerScripts.inflate=inflate}}}function setIfDefined(propertyName,propertyValue){propertyValue!==UNDEFINED_VALUE&&(config[propertyName]=propertyValue)}function createCodecClass(constructor,constructorOptions,registerDataHandler){return class{constructor(options){const codecAdapter=this;Object.hasOwn(options,"level")&&void 0===options.level&&delete options.level,codecAdapter.codec=new constructor(Object.assign({},constructorOptions,options)),registerDataHandler(codecAdapter.codec,(data=>{if(codecAdapter.pendingData){const previousPendingData=codecAdapter.pendingData;codecAdapter.pendingData=new Uint8Array(previousPendingData.length+data.length);const{pendingData:pendingData}=codecAdapter;pendingData.set(previousPendingData,0),pendingData.set(data,previousPendingData.length)}else codecAdapter.pendingData=new Uint8Array(data)}))}append(data){return this.codec.push(data),getResponse(this)}flush(){return this.codec.push(new Uint8Array,!0),getResponse(this)}};function getResponse(codec){if(codec.pendingData){const output=codec.pendingData;return codec.pendingData=null,output}return new Uint8Array}}const table=[];for(let i=0;i<256;i++){let t=i;for(let j=0;j<8;j++)1&t?t=t>>>1^3988292384:t>>>=1;table[i]=t}class Crc32{constructor(crc){this.crc=crc||-1}append(data){let crc=0|this.crc;for(let offset=0,length=0|data.length;offset<length;offset++)crc=crc>>>8^table[255&(crc^data[offset])];this.crc=crc}get(){return~this.crc}}class Crc32Stream extends TransformStream{constructor(){let stream;const crc32=new Crc32;super({transform(chunk,controller){crc32.append(chunk),controller.enqueue(chunk)},flush(){const value=new Uint8Array(4);new DataView(value.buffer).setUint32(0,crc32.get()),stream.value=value}}),stream=this}}function encodeText(value){if(void 0===TextEncoder){value=unescape(encodeURIComponent(value));const result=new Uint8Array(value.length);for(let i=0;i<result.length;i++)result[i]=value.charCodeAt(i);return result}return(new TextEncoder).encode(value)}const bitArray={concat(a1,a2){if(0===a1.length||0===a2.length)return a1.concat(a2);const last=a1[a1.length-1],shift=bitArray.getPartial(last);return 32===shift?a1.concat(a2):bitArray._shiftRight(a2,shift,0|last,a1.slice(0,a1.length-1))},bitLength(a){const l=a.length;if(0===l)return 0;const x=a[l-1];return 32*(l-1)+bitArray.getPartial(x)},clamp(a,len){if(32*a.length<len)return a;const l=(a=a.slice(0,Math.ceil(len/32))).length;return len&=31,l>0&&len&&(a[l-1]=bitArray.partial(len,a[l-1]&2147483648>>len-1,1)),a},partial:(len,x,_end)=>32===len?x:(_end?0|x:x<<32-len)+1099511627776*len,getPartial:x=>Math.round(x/1099511627776)||32,_shiftRight(a,shift,carry,out){for(void 0===out&&(out=[]);shift>=32;shift-=32)out.push(carry),carry=0;if(0===shift)return out.concat(a);for(let i=0;i<a.length;i++)out.push(carry|a[i]>>>shift),carry=a[i]<<32-shift;const last2=a.length?a[a.length-1]:0,shift2=bitArray.getPartial(last2);return out.push(bitArray.partial(shift+shift2&31,shift+shift2>32?carry:out.pop(),1)),out}},codec={bytes:{fromBits(arr){const byteLength=bitArray.bitLength(arr)/8,out=new Uint8Array(byteLength);let tmp;for(let i=0;i<byteLength;i++)0==(3&i)&&(tmp=arr[i/4]),out[i]=tmp>>>24,tmp<<=8;return out},toBits(bytes){const out=[];let i,tmp=0;for(i=0;i<bytes.length;i++)tmp=tmp<<8|bytes[i],3==(3&i)&&(out.push(tmp),tmp=0);return 3&i&&out.push(bitArray.partial(8*(3&i),tmp)),out}}},hash={sha1:class{constructor(hash){const sha1=this;sha1.blockSize=512,sha1._init=[1732584193,4023233417,2562383102,271733878,3285377520],sha1._key=[1518500249,1859775393,2400959708,3395469782],hash?(sha1._h=hash._h.slice(0),sha1._buffer=hash._buffer.slice(0),sha1._length=hash._length):sha1.reset()}reset(){return this._h=this._init.slice(0),this._buffer=[],this._length=0,this}update(data){const sha1=this;"string"==typeof data&&(data=codec.utf8String.toBits(data));const b=sha1._buffer=bitArray.concat(sha1._buffer,data),ol=sha1._length,nl=sha1._length=ol+bitArray.bitLength(data);if(nl>9007199254740991)throw new Error("Cannot hash more than 2^53 - 1 bits");const c=new Uint32Array(b);let j=0;for(let i=sha1.blockSize+ol-(sha1.blockSize+ol&sha1.blockSize-1);i<=nl;i+=sha1.blockSize)sha1._block(c.subarray(16*j,16*(j+1))),j+=1;return b.splice(0,16*j),sha1}finalize(){const sha1=this;let b=sha1._buffer;const h=sha1._h;b=bitArray.concat(b,[bitArray.partial(1,1)]);for(let i=b.length+2;15&i;i++)b.push(0);for(b.push(Math.floor(sha1._length/4294967296)),b.push(0|sha1._length);b.length;)sha1._block(b.splice(0,16));return sha1.reset(),h}_f(t,b,c,d){return t<=19?b&c|~b&d:t<=39?b^c^d:t<=59?b&c|b&d|c&d:t<=79?b^c^d:void 0}_S(n,x){return x<<n|x>>>32-n}_block(words){const sha1=this,h=sha1._h,w=Array(80);for(let j=0;j<16;j++)w[j]=words[j];let a=h[0],b=h[1],c=h[2],d=h[3],e=h[4];for(let t=0;t<=79;t++){t>=16&&(w[t]=sha1._S(1,w[t-3]^w[t-8]^w[t-14]^w[t-16]));const tmp=sha1._S(5,a)+sha1._f(t,b,c,d)+e+w[t]+sha1._key[Math.floor(t/20)]|0;e=d,d=c,c=sha1._S(30,b),b=a,a=tmp}h[0]=h[0]+a|0,h[1]=h[1]+b|0,h[2]=h[2]+c|0,h[3]=h[3]+d|0,h[4]=h[4]+e|0}}},cipher={aes:class{constructor(key){const aes=this;aes._tables=[[[],[],[],[],[]],[[],[],[],[],[]]],aes._tables[0][0][0]||aes._precompute();const sbox=aes._tables[0][4],decTable=aes._tables[1],keyLen=key.length;let i,encKey,decKey,rcon=1;if(4!==keyLen&&6!==keyLen&&8!==keyLen)throw new Error("invalid aes key size");for(aes._key=[encKey=key.slice(0),decKey=[]],i=keyLen;i<4*keyLen+28;i++){let tmp=encKey[i-1];(i%keyLen==0||8===keyLen&&i%keyLen==4)&&(tmp=sbox[tmp>>>24]<<24^sbox[tmp>>16&255]<<16^sbox[tmp>>8&255]<<8^sbox[255&tmp],i%keyLen==0&&(tmp=tmp<<8^tmp>>>24^rcon<<24,rcon=rcon<<1^283*(rcon>>7))),encKey[i]=encKey[i-keyLen]^tmp}for(let j=0;i;j++,i--){const tmp=encKey[3&j?i:i-4];decKey[j]=i<=4||j<4?tmp:decTable[0][sbox[tmp>>>24]]^decTable[1][sbox[tmp>>16&255]]^decTable[2][sbox[tmp>>8&255]]^decTable[3][sbox[255&tmp]]}}encrypt(data){return this._crypt(data,0)}decrypt(data){return this._crypt(data,1)}_precompute(){const encTable=this._tables[0],decTable=this._tables[1],sbox=encTable[4],sboxInv=decTable[4],d=[],th=[];let xInv,x2,x4,x8;for(let i=0;i<256;i++)th[(d[i]=i<<1^283*(i>>7))^i]=i;for(let x=xInv=0;!sbox[x];x^=x2||1,xInv=th[xInv]||1){let s=xInv^xInv<<1^xInv<<2^xInv<<3^xInv<<4;s=s>>8^255&s^99,sbox[x]=s,sboxInv[s]=x,x8=d[x4=d[x2=d[x]]];let tDec=16843009*x8^65537*x4^257*x2^16843008*x,tEnc=257*d[s]^16843008*s;for(let i=0;i<4;i++)encTable[i][x]=tEnc=tEnc<<24^tEnc>>>8,decTable[i][s]=tDec=tDec<<24^tDec>>>8}for(let i=0;i<5;i++)encTable[i]=encTable[i].slice(0),decTable[i]=decTable[i].slice(0)}_crypt(input,dir){if(4!==input.length)throw new Error("invalid aes block size");const key=this._key[dir],nInnerRounds=key.length/4-2,out=[0,0,0,0],table=this._tables[dir],t0=table[0],t1=table[1],t2=table[2],t3=table[3],sbox=table[4];let a2,b2,c2,a=input[0]^key[0],b=input[dir?3:1]^key[1],c=input[2]^key[2],d=input[dir?1:3]^key[3],kIndex=4;for(let i=0;i<nInnerRounds;i++)a2=t0[a>>>24]^t1[b>>16&255]^t2[c>>8&255]^t3[255&d]^key[kIndex],b2=t0[b>>>24]^t1[c>>16&255]^t2[d>>8&255]^t3[255&a]^key[kIndex+1],c2=t0[c>>>24]^t1[d>>16&255]^t2[a>>8&255]^t3[255&b]^key[kIndex+2],d=t0[d>>>24]^t1[a>>16&255]^t2[b>>8&255]^t3[255&c]^key[kIndex+3],kIndex+=4,a=a2,b=b2,c=c2;for(let i=0;i<4;i++)out[dir?3&-i:i]=sbox[a>>>24]<<24^sbox[b>>16&255]<<16^sbox[c>>8&255]<<8^sbox[255&d]^key[kIndex++],a2=a,a=b,b=c,c=d,d=a2;return out}}},random={getRandomValues(typedArray){const words=new Uint32Array(typedArray.buffer),r=m_w=>{let m_z=987654321;const mask=4294967295;return function(){return m_z=36969*(65535&m_z)+(m_z>>16)&mask,(((m_z<<16)+(m_w=18e3*(65535&m_w)+(m_w>>16)&mask)&mask)/4294967296+.5)*(Math.random()>.5?1:-1)}};for(let rcache,i=0;i<typedArray.length;i+=4){const _r=r(4294967296*(rcache||Math.random()));rcache=987654071*_r(),words[i/4]=4294967296*_r()|0}return typedArray}},mode={ctrGladman:class{constructor(prf,iv){this._prf=prf,this._initIv=iv,this._iv=iv}reset(){this._iv=this._initIv}update(data){return this.calculate(this._prf,data,this._iv)}incWord(word){if(255==(word>>24&255)){let b1=word>>16&255,b2=word>>8&255,b3=255&word;255===b1?(b1=0,255===b2?(b2=0,255===b3?b3=0:++b3):++b2):++b1,word=0,word+=b1<<16,word+=b2<<8,word+=b3}else word+=1<<24;return word}incCounter(counter){0===(counter[0]=this.incWord(counter[0]))&&(counter[1]=this.incWord(counter[1]))}calculate(prf,data,iv){let l;if(!(l=data.length))return[];const bl=bitArray.bitLength(data);for(let i=0;i<l;i+=4){this.incCounter(iv);const e=prf.encrypt(iv);data[i]^=e[0],data[i+1]^=e[1],data[i+2]^=e[2],data[i+3]^=e[3]}return bitArray.clamp(data,bl)}}},misc={importKey:password=>new misc.hmacSha1(codec.bytes.toBits(password)),pbkdf2(prf,salt,count,length){if(count=count||1e4,length<0||count<0)throw new Error("invalid params to pbkdf2");const byteLength=1+(length>>5)<<2;let u,ui,i,j,k;const arrayBuffer=new ArrayBuffer(byteLength),out=new DataView(arrayBuffer);let outLength=0;const b=bitArray;for(salt=codec.bytes.toBits(salt),k=1;outLength<(byteLength||1);k++){for(u=ui=prf.encrypt(b.concat(salt,[k])),i=1;i<count;i++)for(ui=prf.encrypt(ui),j=0;j<ui.length;j++)u[j]^=ui[j];for(i=0;outLength<(byteLength||1)&&i<u.length;i++)out.setInt32(outLength,u[i]),outLength+=4}return arrayBuffer.slice(0,length/8)},hmacSha1:class{constructor(key){const Hash=this._hash=hash.sha1,exKey=[[],[]];this._baseHash=[new Hash,new Hash];const bs=this._baseHash[0].blockSize/32;key.length>bs&&(key=(new Hash).update(key).finalize());for(let i=0;i<bs;i++)exKey[0][i]=909522486^key[i],exKey[1][i]=1549556828^key[i];this._baseHash[0].update(exKey[0]),this._baseHash[1].update(exKey[1]),this._resultHash=new Hash(this._baseHash[0])}reset(){this._resultHash=new this._hash(this._baseHash[0]),this._updated=!1}update(data){this._updated=!0,this._resultHash.update(data)}digest(){const w=this._resultHash.finalize(),result=new this._hash(this._baseHash[1]).update(w).finalize();return this.reset(),result}encrypt(data){if(this._updated)throw new Error("encrypt on already updated hmac called!");return this.update(data),this.digest(data)}}},GET_RANDOM_VALUES_SUPPORTED=void 0!==crypto&&"function"==typeof crypto.getRandomValues;function getRandomValues(array){return GET_RANDOM_VALUES_SUPPORTED?crypto.getRandomValues(array):random.getRandomValues(array)}const RAW_FORMAT="raw",PBKDF2_ALGORITHM={name:"PBKDF2"},BASE_KEY_ALGORITHM=Object.assign({hash:{name:"HMAC"}},PBKDF2_ALGORITHM),DERIVED_BITS_ALGORITHM=Object.assign({iterations:1e3,hash:{name:"SHA-1"}},PBKDF2_ALGORITHM),DERIVED_BITS_USAGE=["deriveBits"],SALT_LENGTH=[8,12,16],KEY_LENGTH=[16,24,32],COUNTER_DEFAULT_VALUE=[0,0,0,0],CRYPTO_API_SUPPORTED=void 0!==crypto,subtle=CRYPTO_API_SUPPORTED&&crypto.subtle,SUBTLE_API_SUPPORTED=CRYPTO_API_SUPPORTED&&void 0!==subtle,codecBytes=codec.bytes,Aes=cipher.aes,CtrGladman=mode.ctrGladman,HmacSha1=misc.hmacSha1;let IMPORT_KEY_SUPPORTED=CRYPTO_API_SUPPORTED&&SUBTLE_API_SUPPORTED&&"function"==typeof subtle.importKey,DERIVE_BITS_SUPPORTED=CRYPTO_API_SUPPORTED&&SUBTLE_API_SUPPORTED&&"function"==typeof subtle.deriveBits;class AESDecryptionStream extends TransformStream{constructor(_ref){let{password:password,signed:signed,encryptionStrength:encryptionStrength,checkPasswordOnly:checkPasswordOnly}=_ref;super({start(){Object.assign(this,{ready:new Promise((resolve=>this.resolveReady=resolve)),password:password,signed:signed,strength:encryptionStrength-1,pending:new Uint8Array})},async transform(chunk,controller){const aesCrypto=this,{password:password,strength:strength,resolveReady:resolveReady,ready:ready}=aesCrypto;password?(await async function(decrypt,strength,password,preamble){const passwordVerificationKey=await createKeys$1(decrypt,strength,password,subarray(preamble,0,SALT_LENGTH[strength])),passwordVerification=subarray(preamble,SALT_LENGTH[strength]);if(passwordVerificationKey[0]!=passwordVerification[0]||passwordVerificationKey[1]!=passwordVerification[1])throw new Error("Invalid password")}(aesCrypto,strength,password,subarray(chunk,0,SALT_LENGTH[strength]+2)),chunk=subarray(chunk,SALT_LENGTH[strength]+2),checkPasswordOnly?controller.error(new Error("zipjs-abort-check-password")):resolveReady()):await ready;const output=new Uint8Array(chunk.length-10-(chunk.length-10)%16);controller.enqueue(append(aesCrypto,chunk,output,0,10,!0))},async flush(controller){const{signed:signed,ctr:ctr,hmac:hmac,pending:pending,ready:ready}=this;await ready;const chunkToDecrypt=subarray(pending,0,pending.length-10),originalSignature=subarray(pending,pending.length-10);let decryptedChunkArray=new Uint8Array;if(chunkToDecrypt.length){const encryptedChunk=toBits(codecBytes,chunkToDecrypt);hmac.update(encryptedChunk);const decryptedChunk=ctr.update(encryptedChunk);decryptedChunkArray=fromBits(codecBytes,decryptedChunk)}if(signed){const signature=subarray(fromBits(codecBytes,hmac.digest()),0,10);for(let indexSignature=0;indexSignature<10;indexSignature++)if(signature[indexSignature]!=originalSignature[indexSignature])throw new Error("Invalid signature")}controller.enqueue(decryptedChunkArray)}})}}class AESEncryptionStream extends TransformStream{constructor(_ref2){let stream,{password:password,encryptionStrength:encryptionStrength}=_ref2;super({start(){Object.assign(this,{ready:new Promise((resolve=>this.resolveReady=resolve)),password:password,strength:encryptionStrength-1,pending:new Uint8Array})},async transform(chunk,controller){const aesCrypto=this,{password:password,strength:strength,resolveReady:resolveReady,ready:ready}=aesCrypto;let preamble=new Uint8Array;password?(preamble=await async function(encrypt,strength,password){const salt=getRandomValues(new Uint8Array(SALT_LENGTH[strength])),passwordVerification=await createKeys$1(encrypt,strength,password,salt);return concat(salt,passwordVerification)}(aesCrypto,strength,password),resolveReady()):await ready;const output=new Uint8Array(preamble.length+chunk.length-chunk.length%16);output.set(preamble,0),controller.enqueue(append(aesCrypto,chunk,output,preamble.length,0))},async flush(controller){const{ctr:ctr,hmac:hmac,pending:pending,ready:ready}=this;await ready;let encryptedChunkArray=new Uint8Array;if(pending.length){const encryptedChunk=ctr.update(toBits(codecBytes,pending));hmac.update(encryptedChunk),encryptedChunkArray=fromBits(codecBytes,encryptedChunk)}stream.signature=fromBits(codecBytes,hmac.digest()).slice(0,10),controller.enqueue(concat(encryptedChunkArray,stream.signature))}}),stream=this}}function append(aesCrypto,input,output,paddingStart,paddingEnd,verifySignature){const{ctr:ctr,hmac:hmac,pending:pending}=aesCrypto,inputLength=input.length-paddingEnd;let offset;for(pending.length&&(input=concat(pending,input),output=function(inputArray,length){if(length&&length>inputArray.length){const array=inputArray;(inputArray=new Uint8Array(length)).set(array,0)}return inputArray}(output,inputLength-inputLength%16)),offset=0;offset<=inputLength-16;offset+=16){const inputChunk=toBits(codecBytes,subarray(input,offset,offset+16));verifySignature&&hmac.update(inputChunk);const outputChunk=ctr.update(inputChunk);verifySignature||hmac.update(outputChunk),output.set(fromBits(codecBytes,outputChunk),offset+paddingStart)}return aesCrypto.pending=subarray(input,offset),output}async function createKeys$1(aesCrypto,strength,password,salt){aesCrypto.password=null;const encodedPassword=encodeText(password),baseKey=await async function(format,password,algorithm,extractable,keyUsages){if(!IMPORT_KEY_SUPPORTED)return misc.importKey(password);try{return await subtle.importKey(format,password,algorithm,extractable,keyUsages)}catch(_error){return IMPORT_KEY_SUPPORTED=!1,misc.importKey(password)}}(RAW_FORMAT,encodedPassword,BASE_KEY_ALGORITHM,!1,DERIVED_BITS_USAGE),derivedBits=await async function(algorithm,baseKey,length){if(!DERIVE_BITS_SUPPORTED)return misc.pbkdf2(baseKey,algorithm.salt,DERIVED_BITS_ALGORITHM.iterations,length);try{return await subtle.deriveBits(algorithm,baseKey,length)}catch(_error){return DERIVE_BITS_SUPPORTED=!1,misc.pbkdf2(baseKey,algorithm.salt,DERIVED_BITS_ALGORITHM.iterations,length)}}(Object.assign({salt:salt},DERIVED_BITS_ALGORITHM),baseKey,8*(2*KEY_LENGTH[strength]+2)),compositeKey=new Uint8Array(derivedBits),key=toBits(codecBytes,subarray(compositeKey,0,KEY_LENGTH[strength])),authentication=toBits(codecBytes,subarray(compositeKey,KEY_LENGTH[strength],2*KEY_LENGTH[strength])),passwordVerification=subarray(compositeKey,2*KEY_LENGTH[strength]);return Object.assign(aesCrypto,{keys:{key:key,authentication:authentication,passwordVerification:passwordVerification},ctr:new CtrGladman(new Aes(key),Array.from(COUNTER_DEFAULT_VALUE)),hmac:new HmacSha1(authentication)}),passwordVerification}function concat(leftArray,rightArray){let array=leftArray;return leftArray.length+rightArray.length&&(array=new Uint8Array(leftArray.length+rightArray.length),array.set(leftArray,0),array.set(rightArray,leftArray.length)),array}function subarray(array,begin,end){return array.subarray(begin,end)}function fromBits(codecBytes,chunk){return codecBytes.fromBits(chunk)}function toBits(codecBytes,chunk){return codecBytes.toBits(chunk)}class ZipCryptoDecryptionStream extends TransformStream{constructor(_ref3){let{password:password,passwordVerification:passwordVerification,checkPasswordOnly:checkPasswordOnly}=_ref3;super({start(){Object.assign(this,{password:password,passwordVerification:passwordVerification}),createKeys(this,password)},transform(chunk,controller){const zipCrypto=this;if(zipCrypto.password){const decryptedHeader=decrypt(zipCrypto,chunk.subarray(0,12));if(zipCrypto.password=null,decryptedHeader[11]!=zipCrypto.passwordVerification)throw new Error("Invalid password");chunk=chunk.subarray(12)}checkPasswordOnly?controller.error(new Error("zipjs-abort-check-password")):controller.enqueue(decrypt(zipCrypto,chunk))}})}}class ZipCryptoEncryptionStream extends TransformStream{constructor(_ref4){let{password:password,passwordVerification:passwordVerification}=_ref4;super({start(){Object.assign(this,{password:password,passwordVerification:passwordVerification}),createKeys(this,password)},transform(chunk,controller){const zipCrypto=this;let output,offset;if(zipCrypto.password){zipCrypto.password=null;const header=getRandomValues(new Uint8Array(12));header[11]=zipCrypto.passwordVerification,output=new Uint8Array(chunk.length+header.length),output.set(encrypt(zipCrypto,header),0),offset=12}else output=new Uint8Array(chunk.length),offset=0;output.set(encrypt(zipCrypto,chunk),offset),controller.enqueue(output)}})}}function decrypt(target,input){const output=new Uint8Array(input.length);for(let index=0;index<input.length;index++)output[index]=getByte(target)^input[index],updateKeys(target,output[index]);return output}function encrypt(target,input){const output=new Uint8Array(input.length);for(let index=0;index<input.length;index++)output[index]=getByte(target)^input[index],updateKeys(target,input[index]);return output}function createKeys(target,password){const keys=[305419896,591751049,878082192];Object.assign(target,{keys:keys,crcKey0:new Crc32(keys[0]),crcKey2:new Crc32(keys[2])});for(let index=0;index<password.length;index++)updateKeys(target,password.charCodeAt(index))}function updateKeys(target,byte){let[key0,key1,key2]=target.keys;target.crcKey0.append([byte]),key0=~target.crcKey0.get(),key1=getInt32(Math.imul(getInt32(key1+getInt8(key0)),134775813)+1),target.crcKey2.append([key1>>>24]),key2=~target.crcKey2.get(),target.keys=[key0,key1,key2]}function getByte(target){const temp=2|target.keys[2];return getInt8(Math.imul(temp,1^temp)>>>8)}function getInt8(number){return 255&number}function getInt32(number){return 4294967295&number}class DeflateStream extends TransformStream{constructor(options,_ref5){let{chunkSize:chunkSize,CompressionStream:CompressionStream,CompressionStreamNative:CompressionStreamNative}=_ref5;super({});const{compressed:compressed,encrypted:encrypted,useCompressionStream:useCompressionStream,zipCrypto:zipCrypto,signed:signed,level:level}=options,stream=this;let crc32Stream,encryptionStream,readable=filterEmptyChunks(super.readable);encrypted&&!zipCrypto||!signed||(crc32Stream=new Crc32Stream,readable=pipeThrough(readable,crc32Stream)),compressed&&(readable=pipeThroughCommpressionStream(readable,useCompressionStream,{level:level,chunkSize:chunkSize},CompressionStreamNative,CompressionStream)),encrypted&&(zipCrypto?readable=pipeThrough(readable,new ZipCryptoEncryptionStream(options)):(encryptionStream=new AESEncryptionStream(options),readable=pipeThrough(readable,encryptionStream))),setReadable(stream,readable,(async()=>{let signature;encrypted&&!zipCrypto&&(signature=encryptionStream.signature),encrypted&&!zipCrypto||!signed||(signature=new DataView(crc32Stream.value.buffer).getUint32(0)),stream.signature=signature}))}}class InflateStream extends TransformStream{constructor(options,_ref6){let{chunkSize:chunkSize,DecompressionStream:DecompressionStream,DecompressionStreamNative:DecompressionStreamNative}=_ref6;super({});const{zipCrypto:zipCrypto,encrypted:encrypted,signed:signed,signature:signature,compressed:compressed,useCompressionStream:useCompressionStream}=options;let crc32Stream,decryptionStream,readable=filterEmptyChunks(super.readable);encrypted&&(zipCrypto?readable=pipeThrough(readable,new ZipCryptoDecryptionStream(options)):(decryptionStream=new AESDecryptionStream(options),readable=pipeThrough(readable,decryptionStream))),compressed&&(readable=pipeThroughCommpressionStream(readable,useCompressionStream,{chunkSize:chunkSize},DecompressionStreamNative,DecompressionStream)),encrypted&&!zipCrypto||!signed||(crc32Stream=new Crc32Stream,readable=pipeThrough(readable,crc32Stream)),setReadable(this,readable,(async()=>{if((!encrypted||zipCrypto)&&signed){const dataViewSignature=new DataView(crc32Stream.value.buffer);if(signature!=dataViewSignature.getUint32(0,!1))throw new Error("Invalid signature")}}))}}function filterEmptyChunks(readable){return pipeThrough(readable,new TransformStream({transform(chunk,controller){chunk&&chunk.length&&controller.enqueue(chunk)}}))}function setReadable(stream,readable,flush){readable=pipeThrough(readable,new TransformStream({flush:flush})),Object.defineProperty(stream,"readable",{get:()=>readable})}function pipeThroughCommpressionStream(readable,useCompressionStream,options,CodecStreamNative,CodecStream){try{readable=pipeThrough(readable,new(useCompressionStream&&CodecStreamNative?CodecStreamNative:CodecStream)("deflate-raw",options))}catch(error){if(!useCompressionStream)throw error;readable=pipeThrough(readable,new CodecStream("deflate-raw",options))}return readable}function pipeThrough(readable,transformStream){return readable.pipeThrough(transformStream)}const MESSAGE_EVENT_TYPE="message",MESSAGE_START="start",MESSAGE_PULL="pull",MESSAGE_DATA="data",MESSAGE_ACK_DATA="ack",MESSAGE_CLOSE="close",CODEC_DEFLATE="deflate";class CodecStream extends TransformStream{constructor(options,config){super({});const codec=this,{codecType:codecType}=options;let Stream;codecType.startsWith(CODEC_DEFLATE)?Stream=DeflateStream:codecType.startsWith("inflate")&&(Stream=InflateStream);let size=0;const stream=new Stream(options,config),readable=super.readable,transformStream=new TransformStream({transform(chunk,controller){chunk&&chunk.length&&(size+=chunk.length,controller.enqueue(chunk))},flush(){const{signature:signature}=stream;Object.assign(codec,{signature:signature,size:size})}});Object.defineProperty(codec,"readable",{get:()=>readable.pipeThrough(stream).pipeThrough(transformStream)})}}const WEB_WORKERS_SUPPORTED=void 0!==Worker;class CodecWorker{constructor(workerData,_ref7,_ref8,onTaskFinished){let{readable:readable,writable:writable}=_ref7,{options:options,config:config,streamOptions:streamOptions,useWebWorkers:useWebWorkers,transferStreams:transferStreams,scripts:scripts}=_ref8;const{signal:signal}=streamOptions;return Object.assign(workerData,{busy:!0,readable:readable.pipeThrough(new ProgressWatcherStream(readable,streamOptions,config),{signal:signal}),writable:writable,options:Object.assign({},options),scripts:scripts,transferStreams:transferStreams,terminate(){const{worker:worker,busy:busy}=workerData;worker&&!busy&&(worker.terminate(),workerData.interface=null)},onTaskFinished(){workerData.busy=!1,onTaskFinished(workerData)}}),(useWebWorkers&&WEB_WORKERS_SUPPORTED?createWebWorkerInterface:createWorkerInterface)(workerData,config)}}class ProgressWatcherStream extends TransformStream{constructor(readableSource,_ref9,_ref10){let{onstart:onstart,onprogress:onprogress,size:size,onend:onend}=_ref9,{chunkSize:chunkSize}=_ref10,chunkOffset=0;super({start(){onstart&&callHandler(onstart,size)},async transform(chunk,controller){chunkOffset+=chunk.length,onprogress&&await callHandler(onprogress,chunkOffset,size),controller.enqueue(chunk)},flush(){readableSource.size=chunkOffset,onend&&callHandler(onend,chunkOffset)}},{highWaterMark:1,size:()=>chunkSize})}}async function callHandler(handler){try{for(var _len=arguments.length,parameters=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)parameters[_key-1]=arguments[_key];await handler(...parameters)}catch(_error){}}function createWorkerInterface(workerData,config){return{run:()=>async function(_ref12,config){let{options:options,readable:readable,writable:writable,onTaskFinished:onTaskFinished}=_ref12;const codecStream=new CodecStream(options,config);try{await readable.pipeThrough(codecStream).pipeTo(writable,{preventClose:!0,preventAbort:!0});const{signature:signature,size:size}=codecStream;return{signature:signature,size:size}}finally{onTaskFinished()}}(workerData,config)}}function createWebWorkerInterface(workerData,_ref11){let{baseURL:baseURL,chunkSize:chunkSize}=_ref11;return workerData.interface||Object.assign(workerData,{worker:getWebWorker(workerData.scripts[0],baseURL,workerData),interface:{run:()=>async function(workerData,config){let resolveResult,rejectResult;const result=new Promise(((resolve,reject)=>{resolveResult=resolve,rejectResult=reject}));Object.assign(workerData,{reader:null,writer:null,resolveResult:resolveResult,rejectResult:rejectResult,result:result});const{readable:readable,options:options,scripts:scripts}=workerData,{writable:writable,closed:closed}=function(writableSource){const writer=writableSource.getWriter();let resolveStreamClosed;const closed=new Promise((resolve=>resolveStreamClosed=resolve)),writable=new WritableStream({async write(chunk){await writer.ready,await writer.write(chunk)},close(){writer.releaseLock(),resolveStreamClosed()},abort:reason=>writer.abort(reason)});return{writable:writable,closed:closed}}(workerData.writable),streamsTransferred=sendMessage({type:MESSAGE_START,scripts:scripts.slice(1),options:options,config:config,readable:readable,writable:writable},workerData);streamsTransferred||Object.assign(workerData,{reader:readable.getReader(),writer:writable.getWriter()});const resultValue=await result;try{await writable.close()}catch(_error){}return await closed,resultValue}(workerData,{chunkSize:chunkSize})}}),workerData.interface}let classicWorkersSupported=!0,transferStreamsSupported=!0;function getWebWorker(url,baseURL,workerData){const workerOptions={type:"module"};let scriptUrl,worker;typeof url==FUNCTION_TYPE$1&&(url=url());try{scriptUrl=new URL(url,baseURL)}catch(_error){scriptUrl=url}if(classicWorkersSupported)try{worker=new Worker(scriptUrl)}catch(_error){classicWorkersSupported=!1,worker=new Worker(scriptUrl,workerOptions)}else worker=new Worker(scriptUrl,workerOptions);return worker.addEventListener(MESSAGE_EVENT_TYPE,(event=>async function(_ref14,workerData){let{data:data}=_ref14;const{type:type,value:value,messageId:messageId,result:result,error:error}=data,{reader:reader,writer:writer,resolveResult:resolveResult,rejectResult:rejectResult,onTaskFinished:onTaskFinished}=workerData;try{if(error){const{message:message,stack:stack,code:code,name:name}=error,responseError=new Error(message);Object.assign(responseError,{stack:stack,code:code,name:name}),close(responseError)}else{if(type==MESSAGE_PULL){const{value:value,done:done}=await reader.read();sendMessage({type:MESSAGE_DATA,value:value,done:done,messageId:messageId},workerData)}type==MESSAGE_DATA&&(await writer.ready,await writer.write(new Uint8Array(value)),sendMessage({type:MESSAGE_ACK_DATA,messageId:messageId},workerData)),type==MESSAGE_CLOSE&&close(null,result)}}catch(error){close(error)}function close(error,result){error?rejectResult(error):resolveResult(result),writer&&writer.releaseLock(),onTaskFinished()}}(event,workerData))),worker}function sendMessage(message,_ref13){let{worker:worker,writer:writer,onTaskFinished:onTaskFinished,transferStreams:transferStreams}=_ref13;try{let{value:value,readable:readable,writable:writable}=message;const transferables=[];if(value){const{buffer:buffer,length:length}=value;length!=buffer.byteLength&&(value=new Uint8Array(value)),message.value=value.buffer,transferables.push(message.value)}if(transferStreams&&transferStreamsSupported?(readable&&transferables.push(readable),writable&&transferables.push(writable)):message.readable=message.writable=null,transferables.length)try{return worker.postMessage(message,transferables),!0}catch(_error){transferStreamsSupported=!1,message.readable=message.writable=null,worker.postMessage(message)}else worker.postMessage(message)}catch(error){throw writer&&writer.releaseLock(),onTaskFinished(),error}}let pool=[];const pendingRequests=[];let indexWorker=0;async function runWorker(stream,workerOptions){const{options:options,config:config}=workerOptions,{transferStreams:transferStreams,useWebWorkers:useWebWorkers,useCompressionStream:useCompressionStream,codecType:codecType,compressed:compressed,signed:signed,encrypted:encrypted}=options,{workerScripts:workerScripts,maxWorkers:maxWorkers,terminateWorkerTimeout:terminateWorkerTimeout}=config;workerOptions.transferStreams=transferStreams||transferStreams===UNDEFINED_VALUE;const streamCopy=!(compressed||signed||encrypted||workerOptions.transferStreams);let worker;workerOptions.useWebWorkers=!streamCopy&&(useWebWorkers||useWebWorkers===UNDEFINED_VALUE&&config.useWebWorkers),workerOptions.scripts=workerOptions.useWebWorkers&&workerScripts?workerScripts[codecType]:[],options.useCompressionStream=useCompressionStream||useCompressionStream===UNDEFINED_VALUE&&config.useCompressionStream;const workerData=pool.find((workerData=>!workerData.busy));if(workerData)clearTerminateTimeout(workerData),worker=new CodecWorker(workerData,stream,workerOptions,onTaskFinished);else if(pool.length<maxWorkers){const workerData={indexWorker:indexWorker};indexWorker++,pool.push(workerData),worker=new CodecWorker(workerData,stream,workerOptions,onTaskFinished)}else worker=await new Promise((resolve=>pendingRequests.push({resolve:resolve,stream:stream,workerOptions:workerOptions})));return worker.run();function onTaskFinished(workerData){if(pendingRequests.length){const[{resolve:resolve,stream:stream,workerOptions:workerOptions}]=pendingRequests.splice(0,1);resolve(new CodecWorker(workerData,stream,workerOptions,onTaskFinished))}else workerData.worker?(clearTerminateTimeout(workerData),Number.isFinite(terminateWorkerTimeout)&&terminateWorkerTimeout>=0&&(workerData.terminateTimeout=setTimeout((()=>{pool=pool.filter((data=>data!=workerData)),workerData.terminate()}),terminateWorkerTimeout))):pool=pool.filter((data=>data!=workerData))}}function clearTerminateTimeout(workerData){const{terminateTimeout:terminateTimeout}=workerData;terminateTimeout&&(clearTimeout(terminateTimeout),workerData.terminateTimeout=null)}const ERR_HTTP_STATUS="HTTP error ",ERR_HTTP_RANGE="HTTP Range not supported",HTTP_HEADER_CONTENT_LENGTH="Content-Length",HTTP_HEADER_RANGE="Range",HTTP_METHOD_HEAD="HEAD",HTTP_METHOD_GET="GET",HTTP_RANGE_UNIT="bytes",DEFAULT_CHUNK_SIZE=65536;class Stream{constructor(){this.size=0}init(){this.initialized=!0}}class Reader extends Stream{get readable(){const reader=this,{chunkSize:chunkSize=DEFAULT_CHUNK_SIZE}=reader,readable=new ReadableStream({start(){this.chunkOffset=0},async pull(controller){const{offset:offset=0,size:size,diskNumberStart:diskNumberStart}=readable,{chunkOffset:chunkOffset}=this;controller.enqueue(await readUint8Array(reader,offset+chunkOffset,Math.min(chunkSize,size-chunkOffset),diskNumberStart)),chunkOffset+chunkSize>size?controller.close():this.chunkOffset+=chunkSize}});return readable}}class Writer extends Stream{constructor(){super();const writer=this,writable=new WritableStream({write:chunk=>writer.writeUint8Array(chunk)});Object.defineProperty(writer,"writable",{get:()=>writable})}writeUint8Array(){}}class BlobReader extends Reader{constructor(blob){super(),Object.assign(this,{blob:blob,size:blob.size})}async readUint8Array(offset,length){const offsetEnd=offset+length,blob=offset||offsetEnd<this.size?this.blob.slice(offset,offsetEnd):this.blob;return new Uint8Array(await blob.arrayBuffer())}}class BlobWriter extends Stream{constructor(contentType){super();const transformStream=new TransformStream,headers=[];contentType&&headers.push(["Content-Type",contentType]),Object.defineProperty(this,"writable",{get:()=>transformStream.writable}),this.blob=new Response(transformStream.readable,{headers:headers}).blob()}getData(){return this.blob}}class FetchReader extends Reader{constructor(url,options){super(),createHtpReader(this,url,options)}async init(){await initHttpReader(this,sendFetchRequest,getFetchRequestData),super.init()}readUint8Array(index,length){return readUint8ArrayHttpReader(this,index,length,sendFetchRequest,getFetchRequestData)}}class XHRReader extends Reader{constructor(url,options){super(),createHtpReader(this,url,options)}async init(){await initHttpReader(this,sendXMLHttpRequest,getXMLHttpRequestData),super.init()}readUint8Array(index,length){return readUint8ArrayHttpReader(this,index,length,sendXMLHttpRequest,getXMLHttpRequestData)}}function createHtpReader(httpReader,url,options){const{preventHeadRequest:preventHeadRequest,useRangeHeader:useRangeHeader,forceRangeRequests:forceRangeRequests}=options;delete(options=Object.assign({},options)).preventHeadRequest,delete options.useRangeHeader,delete options.forceRangeRequests,delete options.useXHR,Object.assign(httpReader,{url:url,options:options,preventHeadRequest:preventHeadRequest,useRangeHeader:useRangeHeader,forceRangeRequests:forceRangeRequests})}async function initHttpReader(httpReader,sendRequest,getRequestData){const{url:url,useRangeHeader:useRangeHeader,forceRangeRequests:forceRangeRequests}=httpReader;if(function(url){const{baseURL:baseURL}=getConfiguration(),{protocol:protocol}=new URL(url,baseURL);return"http:"==protocol||"https:"==protocol}(url)&&(useRangeHeader||forceRangeRequests)){const{headers:headers}=await sendRequest(HTTP_METHOD_GET,httpReader,getRangeHeaders(httpReader));if(!forceRangeRequests&&headers.get("Accept-Ranges")!=HTTP_RANGE_UNIT)throw new Error(ERR_HTTP_RANGE);{let contentSize;const contentRangeHeader=headers.get("Content-Range");if(contentRangeHeader){const splitHeader=contentRangeHeader.trim().split(/\s*\/\s*/);if(splitHeader.length){const headerValue=splitHeader[1];headerValue&&"*"!=headerValue&&(contentSize=Number(headerValue))}}contentSize===UNDEFINED_VALUE?await getContentLength(httpReader,sendRequest,getRequestData):httpReader.size=contentSize}}else await getContentLength(httpReader,sendRequest,getRequestData)}async function readUint8ArrayHttpReader(httpReader,index,length,sendRequest,getRequestData){const{useRangeHeader:useRangeHeader,forceRangeRequests:forceRangeRequests,options:options}=httpReader;if(useRangeHeader||forceRangeRequests){const response=await sendRequest(HTTP_METHOD_GET,httpReader,getRangeHeaders(httpReader,index,length));if(206!=response.status)throw new Error(ERR_HTTP_RANGE);return new Uint8Array(await response.arrayBuffer())}{const{data:data}=httpReader;return data||await getRequestData(httpReader,options),new Uint8Array(httpReader.data.subarray(index,index+length))}}function getRangeHeaders(httpReader){let index=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,length=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Object.assign({},getHeaders(httpReader),{[HTTP_HEADER_RANGE]:HTTP_RANGE_UNIT+"="+index+"-"+(index+length-1)})}function getHeaders(_ref16){let{options:options}=_ref16;const{headers:headers}=options;if(headers)return Symbol.iterator in headers?Object.fromEntries(headers):headers}async function getFetchRequestData(httpReader){await getRequestData(httpReader,sendFetchRequest)}async function getXMLHttpRequestData(httpReader){await getRequestData(httpReader,sendXMLHttpRequest)}async function getRequestData(httpReader,sendRequest){const response=await sendRequest(HTTP_METHOD_GET,httpReader,getHeaders(httpReader));httpReader.data=new Uint8Array(await response.arrayBuffer()),httpReader.size||(httpReader.size=httpReader.data.length)}async function getContentLength(httpReader,sendRequest,getRequestData){if(httpReader.preventHeadRequest)await getRequestData(httpReader,httpReader.options);else{const contentLength=(await sendRequest(HTTP_METHOD_HEAD,httpReader,getHeaders(httpReader))).headers.get(HTTP_HEADER_CONTENT_LENGTH);contentLength?httpReader.size=Number(contentLength):await getRequestData(httpReader,httpReader.options)}}async function sendFetchRequest(method,_ref17,headers){let{options:options,url:url}=_ref17;const response=await fetch(url,Object.assign({},options,{method:method,headers:headers}));if(response.status<400)return response;throw 416==response.status?new Error(ERR_HTTP_RANGE):new Error(ERR_HTTP_STATUS+(response.statusText||response.status))}function sendXMLHttpRequest(method,_ref18,headers){let{url:url}=_ref18;return new Promise(((resolve,reject)=>{const request=new XMLHttpRequest;if(request.addEventListener("load",(()=>{if(request.status<400){const headers=[];request.getAllResponseHeaders().trim().split(/[\r\n]+/).forEach((header=>{const splitHeader=header.trim().split(/\s*:\s*/);splitHeader[0]=splitHeader[0].trim().replace(/^[a-z]|-[a-z]/g,(value=>value.toUpperCase())),headers.push(splitHeader)})),resolve({status:request.status,arrayBuffer:()=>request.response,headers:new Map(headers)})}else reject(416==request.status?new Error(ERR_HTTP_RANGE):new Error(ERR_HTTP_STATUS+(request.statusText||request.status)))}),!1),request.addEventListener("error",(event=>reject(event.detail.error)),!1),request.open(method,url),headers)for(const entry of Object.entries(headers))request.setRequestHeader(entry[0],entry[1]);request.responseType="arraybuffer",request.send()}))}class HttpReader extends Reader{constructor(url){let options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),Object.assign(this,{url:url,reader:options.useXHR?new XHRReader(url,options):new FetchReader(url,options)})}set size(value){}get size(){return this.reader.size}async init(){await this.reader.init(),super.init()}readUint8Array(index,length){return this.reader.readUint8Array(index,length)}}class SplitDataReader extends Reader{constructor(readers){super(),this.readers=readers}async init(){const reader=this,{readers:readers}=reader;reader.lastDiskNumber=0,await Promise.all(readers.map((async diskReader=>{await diskReader.init(),reader.size+=diskReader.size}))),super.init()}async readUint8Array(offset,length){let diskNumber=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const reader=this,{readers:readers}=this;let result,currentDiskNumber=diskNumber;-1==currentDiskNumber&&(currentDiskNumber=readers.length-1);let currentReaderOffset=offset;for(;currentReaderOffset>=readers[currentDiskNumber].size;)currentReaderOffset-=readers[currentDiskNumber].size,currentDiskNumber++;const currentReader=readers[currentDiskNumber],currentReaderSize=currentReader.size;if(currentReaderOffset+length<=currentReaderSize)result=await readUint8Array(currentReader,currentReaderOffset,length);else{const chunkLength=currentReaderSize-currentReaderOffset;result=new Uint8Array(length),result.set(await readUint8Array(currentReader,currentReaderOffset,chunkLength)),result.set(await reader.readUint8Array(offset+chunkLength,length-chunkLength,diskNumber),chunkLength)}return reader.lastDiskNumber=Math.max(currentDiskNumber,reader.lastDiskNumber),result}}class SplitDataWriter extends Stream{constructor(writerGenerator){let maxSize=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4294967295;super();const zipWriter=this;let diskSourceWriter,diskWritable,diskWriter;Object.assign(zipWriter,{diskNumber:0,diskOffset:0,size:0,maxSize:maxSize,availableSize:maxSize});const writable=new WritableStream({async write(chunk){const{availableSize:availableSize}=zipWriter;if(diskWriter)chunk.length>=availableSize?(await writeChunk(chunk.slice(0,availableSize)),await closeDisk(),zipWriter.diskOffset+=diskSourceWriter.size,zipWriter.diskNumber++,diskWriter=null,await this.write(chunk.slice(availableSize))):await writeChunk(chunk);else{const{value:value,done:done}=await writerGenerator.next();if(done&&!value)throw new Error("Writer iterator completed too soon");diskSourceWriter=value,diskSourceWriter.size=0,diskSourceWriter.maxSize&&(zipWriter.maxSize=diskSourceWriter.maxSize),zipWriter.availableSize=zipWriter.maxSize,await initStream(diskSourceWriter),diskWritable=value.writable,diskWriter=diskWritable.getWriter(),await this.write(chunk)}},async close(){await diskWriter.ready,await closeDisk()}});async function writeChunk(chunk){const chunkLength=chunk.length;chunkLength&&(await diskWriter.ready,await diskWriter.write(chunk),diskSourceWriter.size+=chunkLength,zipWriter.size+=chunkLength,zipWriter.availableSize-=chunkLength)}async function closeDisk(){diskWritable.size=diskSourceWriter.size,await diskWriter.close()}Object.defineProperty(zipWriter,"writable",{get:()=>writable})}}async function initStream(stream,initSize){stream.init&&!stream.initialized&&await stream.init(initSize)}function initReader(reader){return Array.isArray(reader)&&(reader=new SplitDataReader(reader)),reader instanceof ReadableStream&&(reader={readable:reader}),reader}function initWriter(writer){writer.writable===UNDEFINED_VALUE&&typeof writer.next==FUNCTION_TYPE$1&&(writer=new SplitDataWriter(writer)),writer instanceof WritableStream&&(writer={writable:writer});const{writable:writable}=writer;return writable.size===UNDEFINED_VALUE&&(writable.size=0),writer instanceof SplitDataWriter||Object.assign(writer,{diskNumber:0,diskOffset:0,availableSize:1/0,maxSize:1/0}),writer}function readUint8Array(reader,offset,size,diskNumber){return reader.readUint8Array(offset,size,diskNumber)}const SplitZipReader=SplitDataReader,SplitZipWriter=SplitDataWriter,CP437="\0☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ ".split(""),VALID_CP437=256==CP437.length;function decodeText(value,encoding){return encoding&&"cp437"==encoding.trim().toLowerCase()?function(stringValue){if(VALID_CP437){let result="";for(let indexCharacter=0;indexCharacter<stringValue.length;indexCharacter++)result+=CP437[stringValue[indexCharacter]];return result}return(new TextDecoder).decode(stringValue)}(value):new TextDecoder(encoding).decode(value)}const PROPERTY_NAME_LAST_MODIFICATION_DATE="lastModDate",PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE="rawLastModDate",PROPERTY_NAME_LAST_ACCESS_DATE="lastAccessDate",PROPERTY_NAME_RAW_LAST_ACCESS_DATE="rawLastAccessDate",PROPERTY_NAME_CREATION_DATE="creationDate",PROPERTY_NAME_RAW_CREATION_DATE="rawCreationDate",PROPERTY_NAMES=["filename","rawFilename","compressedSize","uncompressedSize",PROPERTY_NAME_LAST_MODIFICATION_DATE,PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE,"comment","rawComment",PROPERTY_NAME_LAST_ACCESS_DATE,PROPERTY_NAME_CREATION_DATE,"offset","diskNumberStart","diskNumberStart","internalFileAttribute","externalFileAttribute","msDosCompatible","zip64","directory","bitFlag","encrypted","signature","filenameUTF8","commentUTF8","compressionMethod","version","versionMadeBy","extraField","rawExtraField","extraFieldZip64","extraFieldUnicodePath","extraFieldUnicodeComment","extraFieldAES","extraFieldNTFS","extraFieldExtendedTimestamp"];class Entry{constructor(data){PROPERTY_NAMES.forEach((name=>this[name]=data[name]))}}const ERR_BAD_FORMAT="File format is not recognized",ERR_EXTRAFIELD_ZIP64_NOT_FOUND="Zip64 extra field not found",ZIP64_PROPERTIES=[["uncompressedSize",MAX_32_BITS],["compressedSize",MAX_32_BITS],["offset",MAX_32_BITS],["diskNumberStart",65535]],ZIP64_EXTRACTION={65535:{getValue:getUint32,bytes:4},[MAX_32_BITS]:{getValue:getBigUint64,bytes:8}};class ZipEntry{constructor(reader,config,options){Object.assign(this,{reader:reader,config:config,options:options})}async getData(writer,fileEntry){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const zipEntry=this,{reader:reader,offset:offset,diskNumberStart:diskNumberStart,extraFieldAES:extraFieldAES,compressionMethod:compressionMethod,config:config,bitFlag:bitFlag,signature:signature,rawLastModDate:rawLastModDate,uncompressedSize:uncompressedSize,compressedSize:compressedSize}=zipEntry,localDirectory=zipEntry.localDirectory={},dataView=getDataView$1(await readUint8Array(reader,offset,30,diskNumberStart));let password=getOptionValue$1(zipEntry,options,"password");if(password=password&&password.length&&password,extraFieldAES&&extraFieldAES.originalCompressionMethod!=COMPRESSION_METHOD_AES)throw new Error("Compression method not supported");if(compressionMethod!=COMPRESSION_METHOD_STORE&&compressionMethod!=COMPRESSION_METHOD_DEFLATE)throw new Error("Compression method not supported");if(getUint32(dataView,0)!=LOCAL_FILE_HEADER_SIGNATURE)throw new Error("Local file header not found");readCommonHeader(localDirectory,dataView,4),localDirectory.rawExtraField=localDirectory.extraFieldLength?await readUint8Array(reader,offset+30+localDirectory.filenameLength,localDirectory.extraFieldLength,diskNumberStart):new Uint8Array,await readCommonFooter(zipEntry,localDirectory,dataView,4),Object.assign(fileEntry,{lastAccessDate:localDirectory.lastAccessDate,creationDate:localDirectory.creationDate});const encrypted=zipEntry.encrypted&&localDirectory.encrypted,zipCrypto=encrypted&&!extraFieldAES;if(encrypted){if(!zipCrypto&&extraFieldAES.strength===UNDEFINED_VALUE)throw new Error("Encryption method not supported");if(!password)throw new Error("File contains encrypted entry")}const dataOffset=offset+30+localDirectory.filenameLength+localDirectory.extraFieldLength,readable=reader.readable;readable.diskNumberStart=diskNumberStart,readable.offset=dataOffset;let size=readable.size=compressedSize;const signal=getOptionValue$1(zipEntry,options,"signal"),checkPasswordOnly=getOptionValue$1(zipEntry,options,"checkPasswordOnly");checkPasswordOnly&&(writer=new WritableStream),writer=initWriter(writer),await initStream(writer,uncompressedSize);const{writable:writable}=writer,{onstart:onstart,onprogress:onprogress,onend:onend}=options,workerOptions={options:{codecType:"inflate",password:password,zipCrypto:zipCrypto,encryptionStrength:extraFieldAES&&extraFieldAES.strength,signed:getOptionValue$1(zipEntry,options,"checkSignature"),passwordVerification:zipCrypto&&(bitFlag.dataDescriptor?rawLastModDate>>>8&255:signature>>>24&255),signature:signature,compressed:0!=compressionMethod,encrypted:encrypted,useWebWorkers:getOptionValue$1(zipEntry,options,"useWebWorkers"),useCompressionStream:getOptionValue$1(zipEntry,options,"useCompressionStream"),transferStreams:getOptionValue$1(zipEntry,options,"transferStreams"),checkPasswordOnly:checkPasswordOnly},config:config,streamOptions:{signal:signal,size:size,onstart:onstart,onprogress:onprogress,onend:onend}};let outputSize=0;try{({outputSize:outputSize}=await runWorker({readable:readable,writable:writable},workerOptions))}catch(error){if(!checkPasswordOnly||"zipjs-abort-check-password"!=error.message)throw error}finally{const preventClose=getOptionValue$1(zipEntry,options,"preventClose");writable.size+=outputSize,preventClose||writable.locked||await writable.close()}return checkPasswordOnly?void 0:writer.getData?writer.getData():writable}}function readCommonHeader(directory,dataView,offset){const rawBitFlag=directory.rawBitFlag=getUint16(dataView,offset+2),encrypted=(rawBitFlag&BITFLAG_ENCRYPTED)==BITFLAG_ENCRYPTED,rawLastModDate=getUint32(dataView,offset+6);Object.assign(directory,{encrypted:encrypted,version:getUint16(dataView,offset),bitFlag:{level:(6&rawBitFlag)>>1,dataDescriptor:(rawBitFlag&BITFLAG_DATA_DESCRIPTOR)==BITFLAG_DATA_DESCRIPTOR,languageEncodingFlag:(rawBitFlag&BITFLAG_LANG_ENCODING_FLAG)==BITFLAG_LANG_ENCODING_FLAG},rawLastModDate:rawLastModDate,lastModDate:getDate(rawLastModDate),filenameLength:getUint16(dataView,offset+22),extraFieldLength:getUint16(dataView,offset+24)})}async function readCommonFooter(fileEntry,directory,dataView,offset){const{rawExtraField:rawExtraField}=directory,extraField=directory.extraField=new Map,rawExtraFieldView=getDataView$1(new Uint8Array(rawExtraField));let offsetExtraField=0;try{for(;offsetExtraField<rawExtraField.length;){const type=getUint16(rawExtraFieldView,offsetExtraField),size=getUint16(rawExtraFieldView,offsetExtraField+2);extraField.set(type,{type:type,data:rawExtraField.slice(offsetExtraField+4,offsetExtraField+4+size)}),offsetExtraField+=4+size}}catch(_error){}const compressionMethod=getUint16(dataView,offset+4);Object.assign(directory,{signature:getUint32(dataView,offset+10),uncompressedSize:getUint32(dataView,offset+18),compressedSize:getUint32(dataView,offset+14)});const extraFieldZip64=extraField.get(EXTRAFIELD_TYPE_ZIP64);extraFieldZip64&&(function(extraFieldZip64,directory){directory.zip64=!0;const extraFieldView=getDataView$1(extraFieldZip64.data),missingProperties=ZIP64_PROPERTIES.filter((_ref19=>{let[propertyName,max]=_ref19;return directory[propertyName]==max}));for(let indexMissingProperty=0,offset=0;indexMissingProperty<missingProperties.length;indexMissingProperty++){const[propertyName,max]=missingProperties[indexMissingProperty];if(directory[propertyName]==max){const extraction=ZIP64_EXTRACTION[max];directory[propertyName]=extraFieldZip64[propertyName]=extraction.getValue(extraFieldView,offset),offset+=extraction.bytes}else if(extraFieldZip64[propertyName])throw new Error(ERR_EXTRAFIELD_ZIP64_NOT_FOUND)}}(extraFieldZip64,directory),directory.extraFieldZip64=extraFieldZip64);const extraFieldUnicodePath=extraField.get(28789);extraFieldUnicodePath&&(await readExtraFieldUnicode(extraFieldUnicodePath,"filename","rawFilename",directory,fileEntry),directory.extraFieldUnicodePath=extraFieldUnicodePath);const extraFieldUnicodeComment=extraField.get(25461);extraFieldUnicodeComment&&(await readExtraFieldUnicode(extraFieldUnicodeComment,"comment","rawComment",directory,fileEntry),directory.extraFieldUnicodeComment=extraFieldUnicodeComment);const extraFieldAES=extraField.get(EXTRAFIELD_TYPE_AES);extraFieldAES?(function(extraFieldAES,directory,compressionMethod){const extraFieldView=getDataView$1(extraFieldAES.data),strength=getUint8(extraFieldView,4);Object.assign(extraFieldAES,{vendorVersion:getUint8(extraFieldView,0),vendorId:getUint8(extraFieldView,2),strength:strength,originalCompressionMethod:compressionMethod,compressionMethod:getUint16(extraFieldView,5)}),directory.compressionMethod=extraFieldAES.compressionMethod}(extraFieldAES,directory,compressionMethod),directory.extraFieldAES=extraFieldAES):directory.compressionMethod=compressionMethod;const extraFieldNTFS=extraField.get(EXTRAFIELD_TYPE_NTFS);extraFieldNTFS&&(function(extraFieldNTFS,directory){const extraFieldView=getDataView$1(extraFieldNTFS.data);let tag1Data,offsetExtraField=4;try{for(;offsetExtraField<extraFieldNTFS.data.length&&!tag1Data;){const tagValue=getUint16(extraFieldView,offsetExtraField),attributeSize=getUint16(extraFieldView,offsetExtraField+2);tagValue==EXTRAFIELD_TYPE_NTFS_TAG1&&(tag1Data=extraFieldNTFS.data.slice(offsetExtraField+4,offsetExtraField+4+attributeSize)),offsetExtraField+=4+attributeSize}}catch(_error){}try{if(tag1Data&&24==tag1Data.length){const tag1View=getDataView$1(tag1Data),rawLastModDate=tag1View.getBigUint64(0,!0),rawLastAccessDate=tag1View.getBigUint64(8,!0),rawCreationDate=tag1View.getBigUint64(16,!0);Object.assign(extraFieldNTFS,{rawLastModDate:rawLastModDate,rawLastAccessDate:rawLastAccessDate,rawCreationDate:rawCreationDate});const lastModDate=getDateNTFS(rawLastModDate),lastAccessDate=getDateNTFS(rawLastAccessDate),extraFieldData={lastModDate:lastModDate,lastAccessDate:lastAccessDate,creationDate:getDateNTFS(rawCreationDate)};Object.assign(extraFieldNTFS,extraFieldData),Object.assign(directory,extraFieldData)}}catch(_error){}}(extraFieldNTFS,directory),directory.extraFieldNTFS=extraFieldNTFS);const extraFieldExtendedTimestamp=extraField.get(EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);extraFieldExtendedTimestamp&&(function(extraFieldExtendedTimestamp,directory){const extraFieldView=getDataView$1(extraFieldExtendedTimestamp.data),flags=getUint8(extraFieldView,0),timeProperties=[],timeRawProperties=[];1==(1&flags)&&(timeProperties.push(PROPERTY_NAME_LAST_MODIFICATION_DATE),timeRawProperties.push(PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE)),2==(2&flags)&&(timeProperties.push(PROPERTY_NAME_LAST_ACCESS_DATE),timeRawProperties.push(PROPERTY_NAME_RAW_LAST_ACCESS_DATE)),4==(4&flags)&&(timeProperties.push(PROPERTY_NAME_CREATION_DATE),timeRawProperties.push(PROPERTY_NAME_RAW_CREATION_DATE));let offset=1;timeProperties.forEach(((propertyName,indexProperty)=>{if(extraFieldExtendedTimestamp.data.length>=offset+4){const time=getUint32(extraFieldView,offset);directory[propertyName]=extraFieldExtendedTimestamp[propertyName]=new Date(1e3*time);const rawPropertyName=timeRawProperties[indexProperty];extraFieldExtendedTimestamp[rawPropertyName]=time}offset+=4}))}(extraFieldExtendedTimestamp,directory),directory.extraFieldExtendedTimestamp=extraFieldExtendedTimestamp)}async function readExtraFieldUnicode(extraFieldUnicode,propertyName,rawPropertyName,directory,fileEntry){const extraFieldView=getDataView$1(extraFieldUnicode.data),crc32=new Crc32;crc32.append(fileEntry[rawPropertyName]);const dataViewSignature=getDataView$1(new Uint8Array(4));dataViewSignature.setUint32(0,crc32.get(),!0),Object.assign(extraFieldUnicode,{version:getUint8(extraFieldView,0),signature:getUint32(extraFieldView,1),[propertyName]:await decodeText(extraFieldUnicode.data.subarray(5)),valid:!fileEntry.bitFlag.languageEncodingFlag&&extraFieldUnicode.signature==getUint32(dataViewSignature,0)}),extraFieldUnicode.valid&&(directory[propertyName]=extraFieldUnicode[propertyName],directory[propertyName+"UTF8"]=!0)}function getOptionValue$1(zipReader,options,name){return options[name]===UNDEFINED_VALUE?zipReader.options[name]:options[name]}function getDate(timeRaw){const date=(4294901760&timeRaw)>>16,time=65535&timeRaw;try{return new Date(1980+((65024&date)>>9),((480&date)>>5)-1,31&date,(63488&time)>>11,(2016&time)>>5,2*(31&time),0)}catch(_error){}}function getDateNTFS(timeRaw){return new Date(Number(timeRaw/BigInt(1e4)-BigInt(116444736e5)))}function getUint8(view,offset){return view.getUint8(offset)}function getUint16(view,offset){return view.getUint16(offset,!0)}function getUint32(view,offset){return view.getUint32(offset,!0)}function getBigUint64(view,offset){return Number(view.getBigUint64(offset,!0))}function getDataView$1(array){return new DataView(array.buffer)}const ERR_UNSUPPORTED_FORMAT="Zip64 is not supported (make sure 'keepOrder' is set to 'true')",EXTRAFIELD_DATA_AES=new Uint8Array([7,0,2,0,65,69,3,0,0]);let workers=0;const pendingEntries=[];async function writeData(writable,array){const streamWriter=writable.getWriter();await streamWriter.ready,writable.size+=getLength(array),await streamWriter.write(array),streamWriter.releaseLock()}function getTimeNTFS(date){if(date)return(BigInt(date.getTime())+BigInt(116444736e5))*BigInt(1e4)}function getOptionValue(zipWriter,options,name,defaultValue){const result=options[name]===UNDEFINED_VALUE?zipWriter.options[name]:options[name];return result===UNDEFINED_VALUE?defaultValue:result}function setUint8(view,offset,value){view.setUint8(offset,value)}function setUint16(view,offset,value){view.setUint16(offset,value,!0)}function setUint32(view,offset,value){view.setUint32(offset,value,!0)}function setBigUint64(view,offset,value){view.setBigUint64(offset,value,!0)}function arraySet(array,typedArray,offset){array.set(typedArray,offset)}function getDataView(array){return new DataView(array.buffer)}function getLength(){let result=0;for(var _len2=arguments.length,arrayLikes=new Array(_len2),_key2=0;_key2<_len2;_key2++)arrayLikes[_key2]=arguments[_key2];return arrayLikes.forEach((arrayLike=>arrayLike&&(result+=arrayLike.length))),result}let baseURL;try{baseURL=void 0===document&&"undefined"==typeof location?new(require("url").URL)("file:"+__filename).href:void 0===document?location.href:document.currentScript&&document.currentScript.src||new URL("zip.js",document.baseURI).href}catch(_error){}configure({baseURL:baseURL}),function(e){const t=()=>URL.createObjectURL(new Blob(['const{Array:e,Object:t,Number:n,Math:r,Error:s,Uint8Array:i,Uint16Array:o,Uint32Array:c,Int32Array:f,Map:a,DataView:l,Promise:u,TextEncoder:w,crypto:h,postMessage:d,TransformStream:p,ReadableStream:y,WritableStream:m,CompressionStream:b,DecompressionStream:g}=self;class k{constructor(e){return class extends p{constructor(t,n){const r=new e(n);super({transform(e,t){t.enqueue(r.append(e))},flush(e){const t=r.flush();t&&e.enqueue(t)}})}}}}const v=[];for(let e=0;256>e;e++){let t=e;for(let e=0;8>e;e++)1&t?t=t>>>1^3988292384:t>>>=1;v[e]=t}class S{constructor(e){this.t=e||-1}append(e){let t=0|this.t;for(let n=0,r=0|e.length;r>n;n++)t=t>>>8^v[255&(t^e[n])];this.t=t}get(){return~this.t}}class z extends p{constructor(){let e;const t=new S;super({transform(e,n){t.append(e),n.enqueue(e)},flush(){const n=new i(4);new l(n.buffer).setUint32(0,t.get()),e.value=n}}),e=this}}const C={concat(e,t){if(0===e.length||0===t.length)return e.concat(t);const n=e[e.length-1],r=C.i(n);return 32===r?e.concat(t):C.o(t,r,0|n,e.slice(0,e.length-1))},l(e){const t=e.length;if(0===t)return 0;const n=e[t-1];return 32*(t-1)+C.i(n)},u(e,t){if(32*e.length<t)return e;const n=(e=e.slice(0,r.ceil(t/32))).length;return t&=31,n>0&&t&&(e[n-1]=C.h(t,e[n-1]&2147483648>>t-1,1)),e},h:(e,t,n)=>32===e?t:(n?0|t:t<<32-e)+1099511627776*e,i:e=>r.round(e/1099511627776)||32,o(e,t,n,r){for(void 0===r&&(r=[]);t>=32;t-=32)r.push(n),n=0;if(0===t)return r.concat(e);for(let s=0;s<e.length;s++)r.push(n|e[s]>>>t),n=e[s]<<32-t;const s=e.length?e[e.length-1]:0,i=C.i(s);return r.push(C.h(t+i&31,t+i>32?n:r.pop(),1)),r}},x={p:{m(e){const t=C.l(e)/8,n=new i(t);let r;for(let s=0;t>s;s++)0==(3&s)&&(r=e[s/4]),n[s]=r>>>24,r<<=8;return n},g(e){const t=[];let n,r=0;for(n=0;n<e.length;n++)r=r<<8|e[n],3==(3&n)&&(t.push(r),r=0);return 3&n&&t.push(C.h(8*(3&n),r)),t}}},_=class{constructor(e){const t=this;t.blockSize=512,t.k=[1732584193,4023233417,2562383102,271733878,3285377520],t.v=[1518500249,1859775393,2400959708,3395469782],e?(t.S=e.S.slice(0),t.C=e.C.slice(0),t._=e._):t.reset()}reset(){const e=this;return e.S=e.k.slice(0),e.C=[],e._=0,e}update(e){const t=this;"string"==typeof e&&(e=x.A.g(e));const n=t.C=C.concat(t.C,e),r=t._,i=t._=r+C.l(e);if(i>9007199254740991)throw new s("Cannot hash more than 2^53 - 1 bits");const o=new c(n);let f=0;for(let e=t.blockSize+r-(t.blockSize+r&t.blockSize-1);i>=e;e+=t.blockSize)t.I(o.subarray(16*f,16*(f+1))),f+=1;return n.splice(0,16*f),t}D(){const e=this;let t=e.C;const n=e.S;t=C.concat(t,[C.h(1,1)]);for(let e=t.length+2;15&e;e++)t.push(0);for(t.push(r.floor(e._/4294967296)),t.push(0|e._);t.length;)e.I(t.splice(0,16));return e.reset(),n}V(e,t,n,r){return e>19?e>39?e>59?e>79?void 0:t^n^r:t&n|t&r|n&r:t^n^r:t&n|~t&r}P(e,t){return t<<e|t>>>32-e}I(t){const n=this,s=n.S,i=e(80);for(let e=0;16>e;e++)i[e]=t[e];let o=s[0],c=s[1],f=s[2],a=s[3],l=s[4];for(let e=0;79>=e;e++){16>e||(i[e]=n.P(1,i[e-3]^i[e-8]^i[e-14]^i[e-16]));const t=n.P(5,o)+n.V(e,c,f,a)+l+i[e]+n.v[r.floor(e/20)]|0;l=a,a=f,f=n.P(30,c),c=o,o=t}s[0]=s[0]+o|0,s[1]=s[1]+c|0,s[2]=s[2]+f|0,s[3]=s[3]+a|0,s[4]=s[4]+l|0}},A={getRandomValues(e){const t=new c(e.buffer),n=e=>{let t=987654321;const n=4294967295;return()=>(t=36969*(65535&t)+(t>>16)&n,(((t<<16)+(e=18e3*(65535&e)+(e>>16)&n)&n)/4294967296+.5)*(r.random()>.5?1:-1))};for(let s,i=0;i<e.length;i+=4){const e=n(4294967296*(s||r.random()));s=987654071*e(),t[i/4]=4294967296*e()|0}return e}},I={importKey:e=>new I.R(x.p.g(e)),B(e,t,n,r){if(n=n||1e4,0>r||0>n)throw new s("invalid params to pbkdf2");const i=1+(r>>5)<<2;let o,c,f,a,u;const w=new ArrayBuffer(i),h=new l(w);let d=0;const p=C;for(t=x.p.g(t),u=1;(i||1)>d;u++){for(o=c=e.encrypt(p.concat(t,[u])),f=1;n>f;f++)for(c=e.encrypt(c),a=0;a<c.length;a++)o[a]^=c[a];for(f=0;(i||1)>d&&f<o.length;f++)h.setInt32(d,o[f]),d+=4}return w.slice(0,r/8)},R:class{constructor(e){const t=this,n=t.M=_,r=[[],[]];t.K=[new n,new n];const s=t.K[0].blockSize/32;e.length>s&&(e=(new n).update(e).D());for(let t=0;s>t;t++)r[0][t]=909522486^e[t],r[1][t]=1549556828^e[t];t.K[0].update(r[0]),t.K[1].update(r[1]),t.U=new n(t.K[0])}reset(){const e=this;e.U=new e.M(e.K[0]),e.N=!1}update(e){this.N=!0,this.U.update(e)}digest(){const e=this,t=e.U.D(),n=new e.M(e.K[1]).update(t).D();return e.reset(),n}encrypt(e){if(this.N)throw new s("encrypt on already updated hmac called!");return this.update(e),this.digest(e)}}},D=void 0!==h&&"function"==typeof h.getRandomValues,V="Invalid password",P="Invalid signature",R="zipjs-abort-check-password";function B(e){return D?h.getRandomValues(e):A.getRandomValues(e)}const E=16,M={name:"PBKDF2"},K=t.assign({hash:{name:"HMAC"}},M),U=t.assign({iterations:1e3,hash:{name:"SHA-1"}},M),N=["deriveBits"],O=[8,12,16],T=[16,24,32],W=10,j=[0,0,0,0],H="undefined",L="function",F=typeof h!=H,q=F&&h.subtle,G=F&&typeof q!=H,J=x.p,Q=class{constructor(e){const t=this;t.O=[[[],[],[],[],[]],[[],[],[],[],[]]],t.O[0][0][0]||t.T();const n=t.O[0][4],r=t.O[1],i=e.length;let o,c,f,a=1;if(4!==i&&6!==i&&8!==i)throw new s("invalid aes key size");for(t.v=[c=e.slice(0),f=[]],o=i;4*i+28>o;o++){let e=c[o-1];(o%i==0||8===i&&o%i==4)&&(e=n[e>>>24]<<24^n[e>>16&255]<<16^n[e>>8&255]<<8^n[255&e],o%i==0&&(e=e<<8^e>>>24^a<<24,a=a<<1^283*(a>>7))),c[o]=c[o-i]^e}for(let e=0;o;e++,o--){const t=c[3&e?o:o-4];f[e]=4>=o||4>e?t:r[0][n[t>>>24]]^r[1][n[t>>16&255]]^r[2][n[t>>8&255]]^r[3][n[255&t]]}}encrypt(e){return this.W(e,0)}decrypt(e){return this.W(e,1)}T(){const e=this.O[0],t=this.O[1],n=e[4],r=t[4],s=[],i=[];let o,c,f,a;for(let e=0;256>e;e++)i[(s[e]=e<<1^283*(e>>7))^e]=e;for(let l=o=0;!n[l];l^=c||1,o=i[o]||1){let i=o^o<<1^o<<2^o<<3^o<<4;i=i>>8^255&i^99,n[l]=i,r[i]=l,a=s[f=s[c=s[l]]];let u=16843009*a^65537*f^257*c^16843008*l,w=257*s[i]^16843008*i;for(let n=0;4>n;n++)e[n][l]=w=w<<24^w>>>8,t[n][i]=u=u<<24^u>>>8}for(let n=0;5>n;n++)e[n]=e[n].slice(0),t[n]=t[n].slice(0)}W(e,t){if(4!==e.length)throw new s("invalid aes block size");const n=this.v[t],r=n.length/4-2,i=[0,0,0,0],o=this.O[t],c=o[0],f=o[1],a=o[2],l=o[3],u=o[4];let w,h,d,p=e[0]^n[0],y=e[t?3:1]^n[1],m=e[2]^n[2],b=e[t?1:3]^n[3],g=4;for(let e=0;r>e;e++)w=c[p>>>24]^f[y>>16&255]^a[m>>8&255]^l[255&b]^n[g],h=c[y>>>24]^f[m>>16&255]^a[b>>8&255]^l[255&p]^n[g+1],d=c[m>>>24]^f[b>>16&255]^a[p>>8&255]^l[255&y]^n[g+2],b=c[b>>>24]^f[p>>16&255]^a[y>>8&255]^l[255&m]^n[g+3],g+=4,p=w,y=h,m=d;for(let e=0;4>e;e++)i[t?3&-e:e]=u[p>>>24]<<24^u[y>>16&255]<<16^u[m>>8&255]<<8^u[255&b]^n[g++],w=p,p=y,y=m,m=b,b=w;return i}},X=class{constructor(e,t){this.j=e,this.H=t,this.L=t}reset(){this.L=this.H}update(e){return this.F(this.j,e,this.L)}q(e){if(255==(e>>24&255)){let t=e>>16&255,n=e>>8&255,r=255&e;255===t?(t=0,255===n?(n=0,255===r?r=0:++r):++n):++t,e=0,e+=t<<16,e+=n<<8,e+=r}else e+=1<<24;return e}G(e){0===(e[0]=this.q(e[0]))&&(e[1]=this.q(e[1]))}F(e,t,n){let r;if(!(r=t.length))return[];const s=C.l(t);for(let s=0;r>s;s+=4){this.G(n);const r=e.encrypt(n);t[s]^=r[0],t[s+1]^=r[1],t[s+2]^=r[2],t[s+3]^=r[3]}return C.u(t,s)}},Y=I.R;let Z=F&&G&&typeof q.importKey==L,$=F&&G&&typeof q.deriveBits==L;class ee extends p{constructor({password:e,signed:n,encryptionStrength:r,checkPasswordOnly:o}){super({start(){t.assign(this,{ready:new u((e=>this.J=e)),password:e,signed:n,X:r-1,pending:new i})},async transform(e,t){const n=this,{password:r,X:c,J:f,ready:a}=n;r?(await(async(e,t,n,r)=>{const i=await re(e,t,n,ie(r,0,O[t])),o=ie(r,O[t]);if(i[0]!=o[0]||i[1]!=o[1])throw new s(V)})(n,c,r,ie(e,0,O[c]+2)),e=ie(e,O[c]+2),o?t.error(new s(R)):f()):await a;const l=new i(e.length-W-(e.length-W)%E);t.enqueue(ne(n,e,l,0,W,!0))},async flush(e){const{signed:t,Y:n,Z:r,pending:o,ready:c}=this;await c;const f=ie(o,0,o.length-W),a=ie(o,o.length-W);let l=new i;if(f.length){const e=ce(J,f);r.update(e);const t=n.update(e);l=oe(J,t)}if(t){const e=ie(oe(J,r.digest()),0,W);for(let t=0;W>t;t++)if(e[t]!=a[t])throw new s(P)}e.enqueue(l)}})}}class te extends p{constructor({password:e,encryptionStrength:n}){let r;super({start(){t.assign(this,{ready:new u((e=>this.J=e)),password:e,X:n-1,pending:new i})},async transform(e,t){const n=this,{password:r,X:s,J:o,ready:c}=n;let f=new i;r?(f=await(async(e,t,n)=>{const r=B(new i(O[t]));return se(r,await re(e,t,n,r))})(n,s,r),o()):await c;const a=new i(f.length+e.length-e.length%E);a.set(f,0),t.enqueue(ne(n,e,a,f.length,0))},async flush(e){const{Y:t,Z:n,pending:s,ready:o}=this;await o;let c=new i;if(s.length){const e=t.update(ce(J,s));n.update(e),c=oe(J,e)}r.signature=oe(J,n.digest()).slice(0,W),e.enqueue(se(c,r.signature))}}),r=this}}function ne(e,t,n,r,s,o){const{Y:c,Z:f,pending:a}=e,l=t.length-s;let u;for(a.length&&(t=se(a,t),n=((e,t)=>{if(t&&t>e.length){const n=e;(e=new i(t)).set(n,0)}return e})(n,l-l%E)),u=0;l-E>=u;u+=E){const e=ce(J,ie(t,u,u+E));o&&f.update(e);const s=c.update(e);o||f.update(s),n.set(oe(J,s),u+r)}return e.pending=ie(t,u),n}async function re(n,r,s,o){n.password=null;const c=(e=>{if(void 0===w){const t=new i((e=unescape(encodeURIComponent(e))).length);for(let n=0;n<t.length;n++)t[n]=e.charCodeAt(n);return t}return(new w).encode(e)})(s),f=await(async(e,t,n,r,s)=>{if(!Z)return I.importKey(t);try{return await q.importKey("raw",t,n,!1,s)}catch(e){return Z=!1,I.importKey(t)}})(0,c,K,0,N),a=await(async(e,t,n)=>{if(!$)return I.B(t,e.salt,U.iterations,n);try{return await q.deriveBits(e,t,n)}catch(r){return $=!1,I.B(t,e.salt,U.iterations,n)}})(t.assign({salt:o},U),f,8*(2*T[r]+2)),l=new i(a),u=ce(J,ie(l,0,T[r])),h=ce(J,ie(l,T[r],2*T[r])),d=ie(l,2*T[r]);return t.assign(n,{keys:{key:u,$:h,passwordVerification:d},Y:new X(new Q(u),e.from(j)),Z:new Y(h)}),d}function se(e,t){let n=e;return e.length+t.length&&(n=new i(e.length+t.length),n.set(e,0),n.set(t,e.length)),n}function ie(e,t,n){return e.subarray(t,n)}function oe(e,t){return e.m(t)}function ce(e,t){return e.g(t)}class fe extends p{constructor({password:e,passwordVerification:n,checkPasswordOnly:r}){super({start(){t.assign(this,{password:e,passwordVerification:n}),we(this,e)},transform(e,t){const n=this;if(n.password){const t=le(n,e.subarray(0,12));if(n.password=null,t[11]!=n.passwordVerification)throw new s(V);e=e.subarray(12)}r?t.error(new s(R)):t.enqueue(le(n,e))}})}}class ae extends p{constructor({password:e,passwordVerification:n}){super({start(){t.assign(this,{password:e,passwordVerification:n}),we(this,e)},transform(e,t){const n=this;let r,s;if(n.password){n.password=null;const t=B(new i(12));t[11]=n.passwordVerification,r=new i(e.length+t.length),r.set(ue(n,t),0),s=12}else r=new i(e.length),s=0;r.set(ue(n,e),s),t.enqueue(r)}})}}function le(e,t){const n=new i(t.length);for(let r=0;r<t.length;r++)n[r]=de(e)^t[r],he(e,n[r]);return n}function ue(e,t){const n=new i(t.length);for(let r=0;r<t.length;r++)n[r]=de(e)^t[r],he(e,t[r]);return n}function we(e,n){const r=[305419896,591751049,878082192];t.assign(e,{keys:r,ee:new S(r[0]),te:new S(r[2])});for(let t=0;t<n.length;t++)he(e,n.charCodeAt(t))}function he(e,t){let[n,s,i]=e.keys;e.ee.append([t]),n=~e.ee.get(),s=ye(r.imul(ye(s+pe(n)),134775813)+1),e.te.append([s>>>24]),i=~e.te.get(),e.keys=[n,s,i]}function de(e){const t=2|e.keys[2];return pe(r.imul(t,1^t)>>>8)}function pe(e){return 255&e}function ye(e){return 4294967295&e}const me="deflate-raw";class be extends p{constructor(e,{chunkSize:t,CompressionStream:n,CompressionStreamNative:r}){super({});const{compressed:s,encrypted:i,useCompressionStream:o,zipCrypto:c,signed:f,level:a}=e,u=this;let w,h,d=ke(super.readable);i&&!c||!f||(w=new z,d=ze(d,w)),s&&(d=Se(d,o,{level:a,chunkSize:t},r,n)),i&&(c?d=ze(d,new ae(e)):(h=new te(e),d=ze(d,h))),ve(u,d,(async()=>{let e;i&&!c&&(e=h.signature),i&&!c||!f||(e=new l(w.value.buffer).getUint32(0)),u.signature=e}))}}class ge extends p{constructor(e,{chunkSize:t,DecompressionStream:n,DecompressionStreamNative:r}){super({});const{zipCrypto:i,encrypted:o,signed:c,signature:f,compressed:a,useCompressionStream:u}=e;let w,h,d=ke(super.readable);o&&(i?d=ze(d,new fe(e)):(h=new ee(e),d=ze(d,h))),a&&(d=Se(d,u,{chunkSize:t},r,n)),o&&!i||!c||(w=new z,d=ze(d,w)),ve(this,d,(async()=>{if((!o||i)&&c){const e=new l(w.value.buffer);if(f!=e.getUint32(0,!1))throw new s(P)}}))}}function ke(e){return ze(e,new p({transform(e,t){e&&e.length&&t.enqueue(e)}}))}function ve(e,n,r){n=ze(n,new p({flush:r})),t.defineProperty(e,"readable",{get:()=>n})}function Se(e,t,n,r,s){try{e=ze(e,new(t&&r?r:s)(me,n))}catch(r){if(!t)throw r;e=ze(e,new s(me,n))}return e}function ze(e,t){return e.pipeThrough(t)}const Ce="data";class xe extends p{constructor(e,n){super({});const r=this,{codecType:s}=e;let i;s.startsWith("deflate")?i=be:s.startsWith("inflate")&&(i=ge);let o=0;const c=new i(e,n),f=super.readable,a=new p({transform(e,t){e&&e.length&&(o+=e.length,t.enqueue(e))},flush(){const{signature:e}=c;t.assign(r,{signature:e,size:o})}});t.defineProperty(r,"readable",{get:()=>f.pipeThrough(c).pipeThrough(a)})}}const _e=new a,Ae=new a;let Ie=0;async function De(e){try{const{options:t,scripts:r,config:s}=e;r&&r.length&&importScripts.apply(void 0,r),self.initCodec&&self.initCodec(),s.CompressionStreamNative=self.CompressionStream,s.DecompressionStreamNative=self.DecompressionStream,self.Deflate&&(s.CompressionStream=new k(self.Deflate)),self.Inflate&&(s.DecompressionStream=new k(self.Inflate));const i={highWaterMark:1,size:()=>s.chunkSize},o=e.readable||new y({async pull(e){const t=new u((e=>_e.set(Ie,e)));Ve({type:"pull",messageId:Ie}),Ie=(Ie+1)%n.MAX_SAFE_INTEGER;const{value:r,done:s}=await t;e.enqueue(r),s&&e.close()}},i),c=e.writable||new m({async write(e){let t;const r=new u((e=>t=e));Ae.set(Ie,t),Ve({type:Ce,value:e,messageId:Ie}),Ie=(Ie+1)%n.MAX_SAFE_INTEGER,await r}},i),f=new xe(t,s);await o.pipeThrough(f).pipeTo(c,{preventClose:!0,preventAbort:!0});try{await c.close()}catch(e){}const{signature:a,size:l}=f;Ve({type:"close",result:{signature:a,size:l}})}catch(e){Pe(e)}}function Ve(e){let{value:t}=e;if(t)if(t.length)try{t=new i(t),e.value=t.buffer,d(e,[e.value])}catch(t){d(e)}else d(e);else d(e)}function Pe(e){const{message:t,stack:n,code:r,name:s}=e;d({error:{message:t,stack:n,code:r,name:s}})}addEventListener("message",(({data:e})=>{const{type:t,messageId:n,value:r,done:s}=e;try{if("start"==t&&De(e),t==Ce){const e=_e.get(n);_e.delete(n),e({value:new i(r),done:s})}if("ack"==t){const e=Ae.get(n);Ae.delete(n),e()}}catch(e){Pe(e)}}));const Re=-2;function Be(t){return Ee(t.map((([t,n])=>new e(t).fill(n,0,t))))}function Ee(t){return t.reduce(((t,n)=>t.concat(e.isArray(n)?Ee(n):n)),[])}const Me=[0,1,2,3].concat(...Be([[2,4],[2,5],[4,6],[4,7],[8,8],[8,9],[16,10],[16,11],[32,12],[32,13],[64,14],[64,15],[2,0],[1,16],[1,17],[2,18],[2,19],[4,20],[4,21],[8,22],[8,23],[16,24],[16,25],[32,26],[32,27],[64,28],[64,29]]));function Ke(){const e=this;function t(e,t){let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1}e.ne=n=>{const s=e.re,i=e.ie.se,o=e.ie.oe;let c,f,a,l=-1;for(n.ce=0,n.fe=573,c=0;o>c;c++)0!==s[2*c]?(n.ae[++n.ce]=l=c,n.le[c]=0):s[2*c+1]=0;for(;2>n.ce;)a=n.ae[++n.ce]=2>l?++l:0,s[2*a]=1,n.le[a]=0,n.ue--,i&&(n.we-=i[2*a+1]);for(e.he=l,c=r.floor(n.ce/2);c>=1;c--)n.de(s,c);a=o;do{c=n.ae[1],n.ae[1]=n.ae[n.ce--],n.de(s,1),f=n.ae[1],n.ae[--n.fe]=c,n.ae[--n.fe]=f,s[2*a]=s[2*c]+s[2*f],n.le[a]=r.max(n.le[c],n.le[f])+1,s[2*c+1]=s[2*f+1]=a,n.ae[1]=a++,n.de(s,1)}while(n.ce>=2);n.ae[--n.fe]=n.ae[1],(t=>{const n=e.re,r=e.ie.se,s=e.ie.pe,i=e.ie.ye,o=e.ie.me;let c,f,a,l,u,w,h=0;for(l=0;15>=l;l++)t.be[l]=0;for(n[2*t.ae[t.fe]+1]=0,c=t.fe+1;573>c;c++)f=t.ae[c],l=n[2*n[2*f+1]+1]+1,l>o&&(l=o,h++),n[2*f+1]=l,f>e.he||(t.be[l]++,u=0,i>f||(u=s[f-i]),w=n[2*f],t.ue+=w*(l+u),r&&(t.we+=w*(r[2*f+1]+u)));if(0!==h){do{for(l=o-1;0===t.be[l];)l--;t.be[l]--,t.be[l+1]+=2,t.be[o]--,h-=2}while(h>0);for(l=o;0!==l;l--)for(f=t.be[l];0!==f;)a=t.ae[--c],a>e.he||(n[2*a+1]!=l&&(t.ue+=(l-n[2*a+1])*n[2*a],n[2*a+1]=l),f--)}})(n),((e,n,r)=>{const s=[];let i,o,c,f=0;for(i=1;15>=i;i++)s[i]=f=f+r[i-1]<<1;for(o=0;n>=o;o++)c=e[2*o+1],0!==c&&(e[2*o]=t(s[c]++,c))})(s,e.he,n.be)}}function Ue(e,t,n,r,s){const i=this;i.se=e,i.pe=t,i.ye=n,i.oe=r,i.me=s}Ke.ge=[0,1,2,3,4,5,6,7].concat(...Be([[2,8],[2,9],[2,10],[2,11],[4,12],[4,13],[4,14],[4,15],[8,16],[8,17],[8,18],[8,19],[16,20],[16,21],[16,22],[16,23],[32,24],[32,25],[32,26],[31,27],[1,28]])),Ke.ke=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],Ke.ve=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],Ke.Se=e=>256>e?Me[e]:Me[256+(e>>>7)],Ke.ze=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Ke.Ce=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],Ke.xe=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],Ke._e=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];const Ne=Be([[144,8],[112,9],[24,7],[8,8]]);Ue.Ae=Ee([12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,19,275,147,403,83,339,211,467,51,307,179,435,115,371,243,499,11,267,139,395,75,331,203,459,43,299,171,427,107,363,235,491,27,283,155,411,91,347,219,475,59,315,187,443,123,379,251,507,7,263,135,391,71,327,199,455,39,295,167,423,103,359,231,487,23,279,151,407,87,343,215,471,55,311,183,439,119,375,247,503,15,271,143,399,79,335,207,463,47,303,175,431,111,367,239,495,31,287,159,415,95,351,223,479,63,319,191,447,127,383,255,511,0,64,32,96,16,80,48,112,8,72,40,104,24,88,56,120,4,68,36,100,20,84,52,116,3,131,67,195,35,163,99,227].map(((e,t)=>[e,Ne[t]])));const Oe=Be([[30,5]]);function Te(e,t,n,r,s){const i=this;i.Ie=e,i.De=t,i.Ve=n,i.Pe=r,i.Re=s}Ue.Be=Ee([0,16,8,24,4,20,12,28,2,18,10,26,6,22,14,30,1,17,9,25,5,21,13,29,3,19,11,27,7,23].map(((e,t)=>[e,Oe[t]]))),Ue.Ee=new Ue(Ue.Ae,Ke.ze,257,286,15),Ue.Me=new Ue(Ue.Be,Ke.Ce,0,30,15),Ue.Ke=new Ue(null,Ke.xe,0,19,7);const We=[new Te(0,0,0,0,0),new Te(4,4,8,4,1),new Te(4,5,16,8,1),new Te(4,6,32,32,1),new Te(4,4,16,16,2),new Te(8,16,32,32,2),new Te(8,16,128,128,2),new Te(8,32,128,256,2),new Te(32,128,258,1024,2),new Te(32,258,258,4096,2)],je=["need dictionary","stream end","","","stream error","data error","","buffer error","",""],He=113,Le=666,Fe=262;function qe(e,t,n,r){const s=e[2*t],i=e[2*n];return i>s||s==i&&r[t]<=r[n]}function Ge(){const e=this;let t,n,s,c,f,a,l,u,w,h,d,p,y,m,b,g,k,v,S,z,C,x,_,A,I,D,V,P,R,B,E,M,K;const U=new Ke,N=new Ke,O=new Ke;let T,W,j,H,L,F;function q(){let t;for(t=0;286>t;t++)E[2*t]=0;for(t=0;30>t;t++)M[2*t]=0;for(t=0;19>t;t++)K[2*t]=0;E[512]=1,e.ue=e.we=0,W=j=0}function G(e,t){let n,r=-1,s=e[1],i=0,o=7,c=4;0===s&&(o=138,c=3),e[2*(t+1)+1]=65535;for(let f=0;t>=f;f++)n=s,s=e[2*(f+1)+1],++i<o&&n==s||(c>i?K[2*n]+=i:0!==n?(n!=r&&K[2*n]++,K[32]++):i>10?K[36]++:K[34]++,i=0,r=n,0===s?(o=138,c=3):n==s?(o=6,c=3):(o=7,c=4))}function J(t){e.Ue[e.pending++]=t}function Q(e){J(255&e),J(e>>>8&255)}function X(e,t){let n;const r=t;F>16-r?(n=e,L|=n<<F&65535,Q(L),L=n>>>16-F,F+=r-16):(L|=e<<F&65535,F+=r)}function Y(e,t){const n=2*e;X(65535&t[n],65535&t[n+1])}function Z(e,t){let n,r,s=-1,i=e[1],o=0,c=7,f=4;for(0===i&&(c=138,f=3),n=0;t>=n;n++)if(r=i,i=e[2*(n+1)+1],++o>=c||r!=i){if(f>o)do{Y(r,K)}while(0!=--o);else 0!==r?(r!=s&&(Y(r,K),o--),Y(16,K),X(o-3,2)):o>10?(Y(18,K),X(o-11,7)):(Y(17,K),X(o-3,3));o=0,s=r,0===i?(c=138,f=3):r==i?(c=6,f=3):(c=7,f=4)}}function $(){16==F?(Q(L),L=0,F=0):8>F||(J(255&L),L>>>=8,F-=8)}function ee(t,n){let s,i,o;if(e.Ne[W]=t,e.Oe[W]=255&n,W++,0===t?E[2*n]++:(j++,t--,E[2*(Ke.ge[n]+256+1)]++,M[2*Ke.Se(t)]++),0==(8191&W)&&V>2){for(s=8*W,i=C-k,o=0;30>o;o++)s+=M[2*o]*(5+Ke.Ce[o]);if(s>>>=3,j<r.floor(W/2)&&s<r.floor(i/2))return!0}return W==T-1}function te(t,n){let r,s,i,o,c=0;if(0!==W)do{r=e.Ne[c],s=e.Oe[c],c++,0===r?Y(s,t):(i=Ke.ge[s],Y(i+256+1,t),o=Ke.ze[i],0!==o&&(s-=Ke.ke[i],X(s,o)),r--,i=Ke.Se(r),Y(i,n),o=Ke.Ce[i],0!==o&&(r-=Ke.ve[i],X(r,o)))}while(W>c);Y(256,t),H=t[513]}function ne(){F>8?Q(L):F>0&&J(255&L),L=0,F=0}function re(t,n,r){X(0+(r?1:0),3),((t,n)=>{ne(),H=8,Q(n),Q(~n),e.Ue.set(u.subarray(t,t+n),e.pending),e.pending+=n})(t,n)}function se(n){((t,n,r)=>{let s,i,o=0;V>0?(U.ne(e),N.ne(e),o=(()=>{let t;for(G(E,U.he),G(M,N.he),O.ne(e),t=18;t>=3&&0===K[2*Ke._e[t]+1];t--);return e.ue+=14+3*(t+1),t})(),s=e.ue+3+7>>>3,i=e.we+3+7>>>3,i>s||(s=i)):s=i=n+5,n+4>s||-1==t?i==s?(X(2+(r?1:0),3),te(Ue.Ae,Ue.Be)):(X(4+(r?1:0),3),((e,t,n)=>{let r;for(X(e-257,5),X(t-1,5),X(n-4,4),r=0;n>r;r++)X(K[2*Ke._e[r]+1],3);Z(E,e-1),Z(M,t-1)})(U.he+1,N.he+1,o+1),te(E,M)):re(t,n,r),q(),r&&ne()})(0>k?-1:k,C-k,n),k=C,t.Te()}function ie(){let e,n,r,s;do{if(s=w-_-C,0===s&&0===C&&0===_)s=f;else if(-1==s)s--;else if(C>=f+f-Fe){u.set(u.subarray(f,f+f),0),x-=f,C-=f,k-=f,e=y,r=e;do{n=65535&d[--r],d[r]=f>n?0:n-f}while(0!=--e);e=f,r=e;do{n=65535&h[--r],h[r]=f>n?0:n-f}while(0!=--e);s+=f}if(0===t.We)return;e=t.je(u,C+_,s),_+=e,3>_||(p=255&u[C],p=(p<<g^255&u[C+1])&b)}while(Fe>_&&0!==t.We)}function oe(e){let t,n,r=I,s=C,i=A;const o=C>f-Fe?C-(f-Fe):0;let c=B;const a=l,w=C+258;let d=u[s+i-1],p=u[s+i];R>A||(r>>=2),c>_&&(c=_);do{if(t=e,u[t+i]==p&&u[t+i-1]==d&&u[t]==u[s]&&u[++t]==u[s+1]){s+=2,t++;do{}while(u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&w>s);if(n=258-(w-s),s=w-258,n>i){if(x=e,i=n,n>=c)break;d=u[s+i-1],p=u[s+i]}}}while((e=65535&h[e&a])>o&&0!=--r);return i>_?_:i}e.le=[],e.be=[],e.ae=[],E=[],M=[],K=[],e.de=(t,n)=>{const r=e.ae,s=r[n];let i=n<<1;for(;i<=e.ce&&(i<e.ce&&qe(t,r[i+1],r[i],e.le)&&i++,!qe(t,s,r[i],e.le));)r[n]=r[i],n=i,i<<=1;r[n]=s},e.He=(t,S,x,W,j,G)=>(W||(W=8),j||(j=8),G||(G=0),t.Le=null,-1==S&&(S=6),1>j||j>9||8!=W||9>x||x>15||0>S||S>9||0>G||G>2?Re:(t.Fe=e,a=x,f=1<<a,l=f-1,m=j+7,y=1<<m,b=y-1,g=r.floor((m+3-1)/3),u=new i(2*f),h=[],d=[],T=1<<j+6,e.Ue=new i(4*T),s=4*T,e.Ne=new o(T),e.Oe=new i(T),V=S,P=G,(t=>(t.qe=t.Ge=0,t.Le=null,e.pending=0,e.Je=0,n=He,c=0,U.re=E,U.ie=Ue.Ee,N.re=M,N.ie=Ue.Me,O.re=K,O.ie=Ue.Ke,L=0,F=0,H=8,q(),(()=>{w=2*f,d[y-1]=0;for(let e=0;y-1>e;e++)d[e]=0;D=We[V].De,R=We[V].Ie,B=We[V].Ve,I=We[V].Pe,C=0,k=0,_=0,v=A=2,z=0,p=0})(),0))(t))),e.Qe=()=>42!=n&&n!=He&&n!=Le?Re:(e.Oe=null,e.Ne=null,e.Ue=null,d=null,h=null,u=null,e.Fe=null,n==He?-3:0),e.Xe=(e,t,n)=>{let r=0;return-1==t&&(t=6),0>t||t>9||0>n||n>2?Re:(We[V].Re!=We[t].Re&&0!==e.qe&&(r=e.Ye(1)),V!=t&&(V=t,D=We[V].De,R=We[V].Ie,B=We[V].Ve,I=We[V].Pe),P=n,r)},e.Ze=(e,t,r)=>{let s,i=r,o=0;if(!t||42!=n)return Re;if(3>i)return 0;for(i>f-Fe&&(i=f-Fe,o=r-i),u.set(t.subarray(o,o+i),0),C=i,k=i,p=255&u[0],p=(p<<g^255&u[1])&b,s=0;i-3>=s;s++)p=(p<<g^255&u[s+2])&b,h[s&l]=d[p],d[p]=s;return 0},e.Ye=(r,i)=>{let o,w,m,I,R;if(i>4||0>i)return Re;if(!r.$e||!r.et&&0!==r.We||n==Le&&4!=i)return r.Le=je[4],Re;if(0===r.tt)return r.Le=je[7],-5;var B;if(t=r,I=c,c=i,42==n&&(w=8+(a-8<<4)<<8,m=(V-1&255)>>1,m>3&&(m=3),w|=m<<6,0!==C&&(w|=32),w+=31-w%31,n=He,J((B=w)>>8&255),J(255&B)),0!==e.pending){if(t.Te(),0===t.tt)return c=-1,0}else if(0===t.We&&I>=i&&4!=i)return t.Le=je[7],-5;if(n==Le&&0!==t.We)return r.Le=je[7],-5;if(0!==t.We||0!==_||0!=i&&n!=Le){switch(R=-1,We[V].Re){case 0:R=(e=>{let n,r=65535;for(r>s-5&&(r=s-5);;){if(1>=_){if(ie(),0===_&&0==e)return 0;if(0===_)break}if(C+=_,_=0,n=k+r,(0===C||C>=n)&&(_=C-n,C=n,se(!1),0===t.tt))return 0;if(C-k>=f-Fe&&(se(!1),0===t.tt))return 0}return se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i);break;case 1:R=(e=>{let n,r=0;for(;;){if(Fe>_){if(ie(),Fe>_&&0==e)return 0;if(0===_)break}if(3>_||(p=(p<<g^255&u[C+2])&b,r=65535&d[p],h[C&l]=d[p],d[p]=C),0===r||(C-r&65535)>f-Fe||2!=P&&(v=oe(r)),3>v)n=ee(0,255&u[C]),_--,C++;else if(n=ee(C-x,v-3),_-=v,v>D||3>_)C+=v,v=0,p=255&u[C],p=(p<<g^255&u[C+1])&b;else{v--;do{C++,p=(p<<g^255&u[C+2])&b,r=65535&d[p],h[C&l]=d[p],d[p]=C}while(0!=--v);C++}if(n&&(se(!1),0===t.tt))return 0}return se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i);break;case 2:R=(e=>{let n,r,s=0;for(;;){if(Fe>_){if(ie(),Fe>_&&0==e)return 0;if(0===_)break}if(3>_||(p=(p<<g^255&u[C+2])&b,s=65535&d[p],h[C&l]=d[p],d[p]=C),A=v,S=x,v=2,0!==s&&D>A&&f-Fe>=(C-s&65535)&&(2!=P&&(v=oe(s)),5>=v&&(1==P||3==v&&C-x>4096)&&(v=2)),3>A||v>A)if(0!==z){if(n=ee(0,255&u[C-1]),n&&se(!1),C++,_--,0===t.tt)return 0}else z=1,C++,_--;else{r=C+_-3,n=ee(C-1-S,A-3),_-=A-1,A-=2;do{++C>r||(p=(p<<g^255&u[C+2])&b,s=65535&d[p],h[C&l]=d[p],d[p]=C)}while(0!=--A);if(z=0,v=2,C++,n&&(se(!1),0===t.tt))return 0}}return 0!==z&&(n=ee(0,255&u[C-1]),z=0),se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i)}if(2!=R&&3!=R||(n=Le),0==R||2==R)return 0===t.tt&&(c=-1),0;if(1==R){if(1==i)X(2,3),Y(256,Ue.Ae),$(),9>1+H+10-F&&(X(2,3),Y(256,Ue.Ae),$()),H=7;else if(re(0,0,!1),3==i)for(o=0;y>o;o++)d[o]=0;if(t.Te(),0===t.tt)return c=-1,0}}return 4!=i?0:1}}function Je(){const e=this;e.nt=0,e.rt=0,e.We=0,e.qe=0,e.tt=0,e.Ge=0}function Qe(e){const t=new Je,n=(o=e&&e.chunkSize?e.chunkSize:65536)+5*(r.floor(o/16383)+1);var o;const c=new i(n);let f=e?e.level:-1;void 0===f&&(f=-1),t.He(f),t.$e=c,this.append=(e,r)=>{let o,f,a=0,l=0,u=0;const w=[];if(e.length){t.nt=0,t.et=e,t.We=e.length;do{if(t.rt=0,t.tt=n,o=t.Ye(0),0!=o)throw new s("deflating: "+t.Le);t.rt&&(t.rt==n?w.push(new i(c)):w.push(c.slice(0,t.rt))),u+=t.rt,r&&t.nt>0&&t.nt!=a&&(r(t.nt),a=t.nt)}while(t.We>0||0===t.tt);return w.length>1?(f=new i(u),w.forEach((e=>{f.set(e,l),l+=e.length}))):f=w[0]||new i,f}},this.flush=()=>{let e,r,o=0,f=0;const a=[];do{if(t.rt=0,t.tt=n,e=t.Ye(4),1!=e&&0!=e)throw new s("deflating: "+t.Le);n-t.tt>0&&a.push(c.slice(0,t.rt)),f+=t.rt}while(t.We>0||0===t.tt);return t.Qe(),r=new i(f),a.forEach((e=>{r.set(e,o),o+=e.length})),r}}Je.prototype={He(e,t){const n=this;return n.Fe=new Ge,t||(t=15),n.Fe.He(n,e,t)},Ye(e){const t=this;return t.Fe?t.Fe.Ye(t,e):Re},Qe(){const e=this;if(!e.Fe)return Re;const t=e.Fe.Qe();return e.Fe=null,t},Xe(e,t){const n=this;return n.Fe?n.Fe.Xe(n,e,t):Re},Ze(e,t){const n=this;return n.Fe?n.Fe.Ze(n,e,t):Re},je(e,t,n){const r=this;let s=r.We;return s>n&&(s=n),0===s?0:(r.We-=s,e.set(r.et.subarray(r.nt,r.nt+s),t),r.nt+=s,r.qe+=s,s)},Te(){const e=this;let t=e.Fe.pending;t>e.tt&&(t=e.tt),0!==t&&(e.$e.set(e.Fe.Ue.subarray(e.Fe.Je,e.Fe.Je+t),e.rt),e.rt+=t,e.Fe.Je+=t,e.Ge+=t,e.tt-=t,e.Fe.pending-=t,0===e.Fe.pending&&(e.Fe.Je=0))}};const Xe=-2,Ye=-3,Ze=-5,$e=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],et=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],tt=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],nt=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],rt=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],st=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],it=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];function ot(){let e,t,n,r,s,i;function o(e,t,o,c,f,a,l,u,w,h,d){let p,y,m,b,g,k,v,S,z,C,x,_,A,I,D;C=0,g=o;do{n[e[t+C]]++,C++,g--}while(0!==g);if(n[0]==o)return l[0]=-1,u[0]=0,0;for(S=u[0],k=1;15>=k&&0===n[k];k++);for(v=k,k>S&&(S=k),g=15;0!==g&&0===n[g];g--);for(m=g,S>g&&(S=g),u[0]=S,I=1<<k;g>k;k++,I<<=1)if(0>(I-=n[k]))return Ye;if(0>(I-=n[g]))return Ye;for(n[g]+=I,i[1]=k=0,C=1,A=2;0!=--g;)i[A]=k+=n[C],A++,C++;g=0,C=0;do{0!==(k=e[t+C])&&(d[i[k]++]=g),C++}while(++g<o);for(o=i[m],i[0]=g=0,C=0,b=-1,_=-S,s[0]=0,x=0,D=0;m>=v;v++)for(p=n[v];0!=p--;){for(;v>_+S;){if(b++,_+=S,D=m-_,D=D>S?S:D,(y=1<<(k=v-_))>p+1&&(y-=p+1,A=v,D>k))for(;++k<D&&(y<<=1)>n[++A];)y-=n[A];if(D=1<<k,h[0]+D>1440)return Ye;s[b]=x=h[0],h[0]+=D,0!==b?(i[b]=g,r[0]=k,r[1]=S,k=g>>>_-S,r[2]=x-s[b-1]-k,w.set(r,3*(s[b-1]+k))):l[0]=x}for(r[1]=v-_,o>C?d[C]<c?(r[0]=256>d[C]?0:96,r[2]=d[C++]):(r[0]=a[d[C]-c]+16+64,r[2]=f[d[C++]-c]):r[0]=192,y=1<<v-_,k=g>>>_;D>k;k+=y)w.set(r,3*(x+k));for(k=1<<v-1;0!=(g&k);k>>>=1)g^=k;for(g^=k,z=(1<<_)-1;(g&z)!=i[b];)b--,_-=S,z=(1<<_)-1}return 0!==I&&1!=m?Ze:0}function c(o){let c;for(e||(e=[],t=[],n=new f(16),r=[],s=new f(15),i=new f(16)),t.length<o&&(t=[]),c=0;o>c;c++)t[c]=0;for(c=0;16>c;c++)n[c]=0;for(c=0;3>c;c++)r[c]=0;s.set(n.subarray(0,15),0),i.set(n.subarray(0,16),0)}this.st=(n,r,s,i,f)=>{let a;return c(19),e[0]=0,a=o(n,0,19,19,null,null,s,r,i,e,t),a==Ye?f.Le="oversubscribed dynamic bit lengths tree":a!=Ze&&0!==r[0]||(f.Le="incomplete dynamic bit lengths tree",a=Ye),a},this.it=(n,r,s,i,f,a,l,u,w)=>{let h;return c(288),e[0]=0,h=o(s,0,n,257,nt,rt,a,i,u,e,t),0!=h||0===i[0]?(h==Ye?w.Le="oversubscribed literal/length tree":-4!=h&&(w.Le="incomplete literal/length tree",h=Ye),h):(c(288),h=o(s,n,r,0,st,it,l,f,u,e,t),0!=h||0===f[0]&&n>257?(h==Ye?w.Le="oversubscribed distance tree":h==Ze?(w.Le="incomplete distance tree",h=Ye):-4!=h&&(w.Le="empty distance tree with lengths",h=Ye),h):0)}}function ct(){const e=this;let t,n,r,s,i=0,o=0,c=0,f=0,a=0,l=0,u=0,w=0,h=0,d=0;function p(e,t,n,r,s,i,o,c){let f,a,l,u,w,h,d,p,y,m,b,g,k,v,S,z;d=c.nt,p=c.We,w=o.ot,h=o.ct,y=o.write,m=y<o.read?o.read-y-1:o.end-y,b=$e[e],g=$e[t];do{for(;20>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;if(f=w&b,a=n,l=r,z=3*(l+f),0!==(u=a[z]))for(;;){if(w>>=a[z+1],h-=a[z+1],0!=(16&u)){for(u&=15,k=a[z+2]+(w&$e[u]),w>>=u,h-=u;15>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;for(f=w&g,a=s,l=i,z=3*(l+f),u=a[z];;){if(w>>=a[z+1],h-=a[z+1],0!=(16&u)){for(u&=15;u>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;if(v=a[z+2]+(w&$e[u]),w>>=u,h-=u,m-=k,v>y){S=y-v;do{S+=o.end}while(0>S);if(u=o.end-S,k>u){if(k-=u,y-S>0&&u>y-S)do{o.lt[y++]=o.lt[S++]}while(0!=--u);else o.lt.set(o.lt.subarray(S,S+u),y),y+=u,S+=u,u=0;S=0}}else S=y-v,y-S>0&&2>y-S?(o.lt[y++]=o.lt[S++],o.lt[y++]=o.lt[S++],k-=2):(o.lt.set(o.lt.subarray(S,S+2),y),y+=2,S+=2,k-=2);if(y-S>0&&k>y-S)do{o.lt[y++]=o.lt[S++]}while(0!=--k);else o.lt.set(o.lt.subarray(S,S+k),y),y+=k,S+=k,k=0;break}if(0!=(64&u))return c.Le="invalid distance code",k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,Ye;f+=a[z+2],f+=w&$e[u],z=3*(l+f),u=a[z]}break}if(0!=(64&u))return 0!=(32&u)?(k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,1):(c.Le="invalid literal/length code",k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,Ye);if(f+=a[z+2],f+=w&$e[u],z=3*(l+f),0===(u=a[z])){w>>=a[z+1],h-=a[z+1],o.lt[y++]=a[z+2],m--;break}}else w>>=a[z+1],h-=a[z+1],o.lt[y++]=a[z+2],m--}while(m>=258&&p>=10);return k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,0}e.init=(e,i,o,c,f,a)=>{t=0,u=e,w=i,r=o,h=c,s=f,d=a,n=null},e.ut=(e,y,m)=>{let b,g,k,v,S,z,C,x=0,_=0,A=0;for(A=y.nt,v=y.We,x=e.ot,_=e.ct,S=e.write,z=S<e.read?e.read-S-1:e.end-S;;)switch(t){case 0:if(z>=258&&v>=10&&(e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,m=p(u,w,r,h,s,d,e,y),A=y.nt,v=y.We,x=e.ot,_=e.ct,S=e.write,z=S<e.read?e.read-S-1:e.end-S,0!=m)){t=1==m?7:9;break}c=u,n=r,o=h,t=1;case 1:for(b=c;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}if(g=3*(o+(x&$e[b])),x>>>=n[g+1],_-=n[g+1],k=n[g],0===k){f=n[g+2],t=6;break}if(0!=(16&k)){a=15&k,i=n[g+2],t=2;break}if(0==(64&k)){c=k,o=g/3+n[g+2];break}if(0!=(32&k)){t=7;break}return t=9,y.Le="invalid literal/length code",m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 2:for(b=a;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}i+=x&$e[b],x>>=b,_-=b,c=w,n=s,o=d,t=3;case 3:for(b=c;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}if(g=3*(o+(x&$e[b])),x>>=n[g+1],_-=n[g+1],k=n[g],0!=(16&k)){a=15&k,l=n[g+2],t=4;break}if(0==(64&k)){c=k,o=g/3+n[g+2];break}return t=9,y.Le="invalid distance code",m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 4:for(b=a;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}l+=x&$e[b],x>>=b,_-=b,t=5;case 5:for(C=S-l;0>C;)C+=e.end;for(;0!==i;){if(0===z&&(S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z&&(e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z)))return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);e.lt[S++]=e.lt[C++],z--,C==e.end&&(C=0),i--}t=0;break;case 6:if(0===z&&(S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z&&(e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z)))return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,e.lt[S++]=f,z--,t=0;break;case 7:if(_>7&&(_-=8,v++,A--),e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,e.read!=e.write)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);t=8;case 8:return m=1,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 9:return m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);default:return m=Xe,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m)}},e.ht=()=>{}}ot.dt=(e,t,n,r)=>(e[0]=9,t[0]=5,n[0]=et,r[0]=tt,0);const ft=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];function at(e,t){const n=this;let r,s=0,o=0,c=0,a=0;const l=[0],u=[0],w=new ct;let h=0,d=new f(4320);const p=new ot;n.ct=0,n.ot=0,n.lt=new i(t),n.end=t,n.read=0,n.write=0,n.reset=(e,t)=>{t&&(t[0]=0),6==s&&w.ht(e),s=0,n.ct=0,n.ot=0,n.read=n.write=0},n.reset(e,null),n.wt=(e,t)=>{let r,s,i;return s=e.rt,i=n.read,r=(i>n.write?n.end:n.write)-i,r>e.tt&&(r=e.tt),0!==r&&t==Ze&&(t=0),e.tt-=r,e.Ge+=r,e.$e.set(n.lt.subarray(i,i+r),s),s+=r,i+=r,i==n.end&&(i=0,n.write==n.end&&(n.write=0),r=n.write-i,r>e.tt&&(r=e.tt),0!==r&&t==Ze&&(t=0),e.tt-=r,e.Ge+=r,e.$e.set(n.lt.subarray(i,i+r),s),s+=r,i+=r),e.rt=s,n.read=i,t},n.ut=(e,t)=>{let i,f,y,m,b,g,k,v;for(m=e.nt,b=e.We,f=n.ot,y=n.ct,g=n.write,k=g<n.read?n.read-g-1:n.end-g;;){let S,z,C,x,_,A,I,D;switch(s){case 0:for(;3>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}switch(i=7&f,h=1&i,i>>>1){case 0:f>>>=3,y-=3,i=7&y,f>>>=i,y-=i,s=1;break;case 1:S=[],z=[],C=[[]],x=[[]],ot.dt(S,z,C,x),w.init(S[0],z[0],C[0],0,x[0],0),f>>>=3,y-=3,s=6;break;case 2:f>>>=3,y-=3,s=3;break;case 3:return f>>>=3,y-=3,s=9,e.Le="invalid block type",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t)}break;case 1:for(;32>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if((~f>>>16&65535)!=(65535&f))return s=9,e.Le="invalid stored block lengths",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);o=65535&f,f=y=0,s=0!==o?2:0!==h?7:0;break;case 2:if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(0===k&&(g==n.end&&0!==n.read&&(g=0,k=g<n.read?n.read-g-1:n.end-g),0===k&&(n.write=g,t=n.wt(e,t),g=n.write,k=g<n.read?n.read-g-1:n.end-g,g==n.end&&0!==n.read&&(g=0,k=g<n.read?n.read-g-1:n.end-g),0===k)))return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(t=0,i=o,i>b&&(i=b),i>k&&(i=k),n.lt.set(e.je(m,i),g),m+=i,b-=i,g+=i,k-=i,0!=(o-=i))break;s=0!==h?7:0;break;case 3:for(;14>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(c=i=16383&f,(31&i)>29||(i>>5&31)>29)return s=9,e.Le="too many length or distance symbols",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(i=258+(31&i)+(i>>5&31),!r||r.length<i)r=[];else for(v=0;i>v;v++)r[v]=0;f>>>=14,y-=14,a=0,s=4;case 4:for(;4+(c>>>10)>a;){for(;3>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}r[ft[a++]]=7&f,f>>>=3,y-=3}for(;19>a;)r[ft[a++]]=0;if(l[0]=7,i=p.st(r,l,u,d,e),0!=i)return(t=i)==Ye&&(r=null,s=9),n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);a=0,s=5;case 5:for(;i=c,258+(31&i)+(i>>5&31)>a;){let o,w;for(i=l[0];i>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(i=d[3*(u[0]+(f&$e[i]))+1],w=d[3*(u[0]+(f&$e[i]))+2],16>w)f>>>=i,y-=i,r[a++]=w;else{for(v=18==w?7:w-14,o=18==w?11:3;i+v>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(f>>>=i,y-=i,o+=f&$e[v],f>>>=v,y-=v,v=a,i=c,v+o>258+(31&i)+(i>>5&31)||16==w&&1>v)return r=null,s=9,e.Le="invalid bit length repeat",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);w=16==w?r[v-1]:0;do{r[v++]=w}while(0!=--o);a=v}}if(u[0]=-1,_=[],A=[],I=[],D=[],_[0]=9,A[0]=6,i=c,i=p.it(257+(31&i),1+(i>>5&31),r,_,A,I,D,d,e),0!=i)return i==Ye&&(r=null,s=9),t=i,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);w.init(_[0],A[0],d,I[0],d,D[0]),s=6;case 6:if(n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,1!=(t=w.ut(n,e,t)))return n.wt(e,t);if(t=0,w.ht(e),m=e.nt,b=e.We,f=n.ot,y=n.ct,g=n.write,k=g<n.read?n.read-g-1:n.end-g,0===h){s=0;break}s=7;case 7:if(n.write=g,t=n.wt(e,t),g=n.write,k=g<n.read?n.read-g-1:n.end-g,n.read!=n.write)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);s=8;case 8:return t=1,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);case 9:return t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);default:return t=Xe,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t)}}},n.ht=e=>{n.reset(e,null),n.lt=null,d=null},n.yt=(e,t,r)=>{n.lt.set(e.subarray(t,t+r),0),n.read=n.write=r},n.bt=()=>1==s?1:0}const lt=13,ut=[0,0,255,255];function wt(){const e=this;function t(e){return e&&e.gt?(e.qe=e.Ge=0,e.Le=null,e.gt.mode=7,e.gt.kt.reset(e,null),0):Xe}e.mode=0,e.method=0,e.vt=[0],e.St=0,e.marker=0,e.zt=0,e.Ct=t=>(e.kt&&e.kt.ht(t),e.kt=null,0),e.xt=(n,r)=>(n.Le=null,e.kt=null,8>r||r>15?(e.Ct(n),Xe):(e.zt=r,n.gt.kt=new at(n,1<<r),t(n),0)),e._t=(e,t)=>{let n,r;if(!e||!e.gt||!e.et)return Xe;const s=e.gt;for(t=4==t?Ze:0,n=Ze;;)switch(s.mode){case 0:if(0===e.We)return n;if(n=t,e.We--,e.qe++,8!=(15&(s.method=e.ft(e.nt++)))){s.mode=lt,e.Le="unknown compression method",s.marker=5;break}if(8+(s.method>>4)>s.zt){s.mode=lt,e.Le="invalid win size",s.marker=5;break}s.mode=1;case 1:if(0===e.We)return n;if(n=t,e.We--,e.qe++,r=255&e.ft(e.nt++),((s.method<<8)+r)%31!=0){s.mode=lt,e.Le="incorrect header check",s.marker=5;break}if(0==(32&r)){s.mode=7;break}s.mode=2;case 2:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St=(255&e.ft(e.nt++))<<24&4278190080,s.mode=3;case 3:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St+=(255&e.ft(e.nt++))<<16&16711680,s.mode=4;case 4:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St+=(255&e.ft(e.nt++))<<8&65280,s.mode=5;case 5:return 0===e.We?n:(n=t,e.We--,e.qe++,s.St+=255&e.ft(e.nt++),s.mode=6,2);case 6:return s.mode=lt,e.Le="need dictionary",s.marker=0,Xe;case 7:if(n=s.kt.ut(e,n),n==Ye){s.mode=lt,s.marker=0;break}if(0==n&&(n=t),1!=n)return n;n=t,s.kt.reset(e,s.vt),s.mode=12;case 12:return e.We=0,1;case lt:return Ye;default:return Xe}},e.At=(e,t,n)=>{let r=0,s=n;if(!e||!e.gt||6!=e.gt.mode)return Xe;const i=e.gt;return s<1<<i.zt||(s=(1<<i.zt)-1,r=n-s),i.kt.yt(t,r,s),i.mode=7,0},e.It=e=>{let n,r,s,i,o;if(!e||!e.gt)return Xe;const c=e.gt;if(c.mode!=lt&&(c.mode=lt,c.marker=0),0===(n=e.We))return Ze;for(r=e.nt,s=c.marker;0!==n&&4>s;)e.ft(r)==ut[s]?s++:s=0!==e.ft(r)?0:4-s,r++,n--;return e.qe+=r-e.nt,e.nt=r,e.We=n,c.marker=s,4!=s?Ye:(i=e.qe,o=e.Ge,t(e),e.qe=i,e.Ge=o,c.mode=7,0)},e.Dt=e=>e&&e.gt&&e.gt.kt?e.gt.kt.bt():Xe}function ht(){}function dt(e){const t=new ht,n=e&&e.chunkSize?r.floor(2*e.chunkSize):131072,o=new i(n);let c=!1;t.xt(),t.$e=o,this.append=(e,r)=>{const f=[];let a,l,u=0,w=0,h=0;if(0!==e.length){t.nt=0,t.et=e,t.We=e.length;do{if(t.rt=0,t.tt=n,0!==t.We||c||(t.nt=0,c=!0),a=t._t(0),c&&a===Ze){if(0!==t.We)throw new s("inflating: bad input")}else if(0!==a&&1!==a)throw new s("inflating: "+t.Le);if((c||1===a)&&t.We===e.length)throw new s("inflating: bad input");t.rt&&(t.rt===n?f.push(new i(o)):f.push(o.slice(0,t.rt))),h+=t.rt,r&&t.nt>0&&t.nt!=u&&(r(t.nt),u=t.nt)}while(t.We>0||0===t.tt);return f.length>1?(l=new i(h),f.forEach((e=>{l.set(e,w),w+=e.length}))):l=f[0]||new i,l}},this.flush=()=>{t.Ct()}}ht.prototype={xt(e){const t=this;return t.gt=new wt,e||(e=15),t.gt.xt(t,e)},_t(e){const t=this;return t.gt?t.gt._t(t,e):Xe},Ct(){const e=this;if(!e.gt)return Xe;const t=e.gt.Ct(e);return e.gt=null,t},It(){const e=this;return e.gt?e.gt.It(e):Xe},At(e,t){const n=this;return n.gt?n.gt.At(n,e,t):Xe},ft(e){return this.et[e]},je(e,t){return this.et.subarray(e,e+t)}},self.initCodec=()=>{self.Deflate=Qe,self.Inflate=dt};\n'],{type:"text/javascript"}));e({workerScripts:{inflate:[t],deflate:[t]}})}(configure),exports.BlobReader=BlobReader,exports.BlobWriter=BlobWriter,exports.Data64URIReader=class extends Reader{constructor(dataURI){super();let dataEnd=dataURI.length;for(;"="==dataURI.charAt(dataEnd-1);)dataEnd--;const dataStart=dataURI.indexOf(",")+1;Object.assign(this,{dataURI:dataURI,dataStart:dataStart,size:Math.floor(.75*(dataEnd-dataStart))})}readUint8Array(offset,length){const{dataStart:dataStart,dataURI:dataURI}=this,dataArray=new Uint8Array(length),start=4*Math.floor(offset/3),bytes=atob(dataURI.substring(start+dataStart,4*Math.ceil((offset+length)/3)+dataStart)),delta=offset-3*Math.floor(start/4);for(let indexByte=delta;indexByte<delta+length;indexByte++)dataArray[indexByte-delta]=bytes.charCodeAt(indexByte);return dataArray}},exports.Data64URIWriter=class extends Writer{constructor(contentType){super(),Object.assign(this,{data:"data:"+(contentType||"")+";base64,",pending:[]})}writeUint8Array(array){const writer=this;let indexArray=0,dataString=writer.pending;const delta=writer.pending.length;for(writer.pending="",indexArray=0;indexArray<3*Math.floor((delta+array.length)/3)-delta;indexArray++)dataString+=String.fromCharCode(array[indexArray]);for(;indexArray<array.length;indexArray++)writer.pending+=String.fromCharCode(array[indexArray]);dataString.length>2?writer.data+=btoa(dataString):writer.pending=dataString}getData(){return this.data+btoa(this.pending)}},exports.ERR_BAD_FORMAT=ERR_BAD_FORMAT,exports.ERR_CENTRAL_DIRECTORY_NOT_FOUND="Central directory header not found",exports.ERR_DUPLICATED_NAME="File already exists",exports.ERR_ENCRYPTED="File contains encrypted entry",exports.ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND="End of Zip64 central directory locator not found",exports.ERR_EOCDR_NOT_FOUND="End of central directory not found",exports.ERR_EOCDR_ZIP64_NOT_FOUND="End of Zip64 central directory not found",exports.ERR_EXTRAFIELD_ZIP64_NOT_FOUND=ERR_EXTRAFIELD_ZIP64_NOT_FOUND,exports.ERR_HTTP_RANGE=ERR_HTTP_RANGE,exports.ERR_INVALID_COMMENT="Zip file comment exceeds 64KB",exports.ERR_INVALID_ENCRYPTION_STRENGTH="The strength must equal 1, 2, or 3",exports.ERR_INVALID_ENTRY_COMMENT="File entry comment exceeds 64KB",exports.ERR_INVALID_ENTRY_NAME="File entry name exceeds 64KB",exports.ERR_INVALID_EXTRAFIELD_DATA="Extra field data exceeds 64KB",exports.ERR_INVALID_EXTRAFIELD_TYPE="Extra field type exceeds 65535",exports.ERR_INVALID_PASSWORD="Invalid password",exports.ERR_INVALID_SIGNATURE="Invalid signature",exports.ERR_INVALID_VERSION="Version exceeds 65535",exports.ERR_ITERATOR_COMPLETED_TOO_SOON="Writer iterator completed too soon",exports.ERR_LOCAL_FILE_HEADER_NOT_FOUND="Local file header not found",exports.ERR_SPLIT_ZIP_FILE="Split zip file",exports.ERR_UNSUPPORTED_COMPRESSION="Compression method not supported",exports.ERR_UNSUPPORTED_ENCRYPTION="Encryption method not supported",exports.ERR_UNSUPPORTED_FORMAT=ERR_UNSUPPORTED_FORMAT,exports.HttpRangeReader=class extends HttpReader{constructor(url){let options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};options.useRangeHeader=!0,super(url,options)}},exports.HttpReader=HttpReader,exports.Reader=Reader,exports.SplitDataReader=SplitDataReader,exports.SplitDataWriter=SplitDataWriter,exports.SplitZipReader=SplitZipReader,exports.SplitZipWriter=SplitZipWriter,exports.TextReader=class extends BlobReader{constructor(text){super(new Blob([text],{type:"text/plain"}))}},exports.TextWriter=class extends BlobWriter{constructor(encoding){super(encoding),Object.assign(this,{encoding:encoding,utf8:!encoding||"utf-8"==encoding.toLowerCase()})}async getData(){const{encoding:encoding,utf8:utf8}=this,blob=await super.getData();if(blob.text&&utf8)return blob.text();{const reader=new FileReader;return new Promise(((resolve,reject)=>{Object.assign(reader,{onload:_ref15=>{let{target:target}=_ref15;return resolve(target.result)},onerror:()=>reject(reader.error)}),reader.readAsText(blob,encoding)}))}}},exports.Uint8ArrayReader=class extends Reader{constructor(array){super(),Object.assign(this,{array:array,size:array.length})}readUint8Array(index,length){return this.array.slice(index,index+length)}},exports.Uint8ArrayWriter=class extends Writer{init(){let initSize=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;Object.assign(this,{offset:0,array:new Uint8Array(initSize)}),super.init()}writeUint8Array(array){const writer=this;if(writer.offset+array.length>writer.array.length){const previousArray=writer.array;writer.array=new Uint8Array(previousArray.length+array.length),writer.array.set(previousArray)}writer.array.set(array,writer.offset),writer.offset+=array.length}getData(){return this.array}},exports.Writer=Writer,exports.ZipReader=class{constructor(reader){let options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Object.assign(this,{reader:initReader(reader),options:options,config:getConfiguration()})}async*getEntriesGenerator(){let options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const zipReader=this;let{reader:reader}=zipReader;const{config:config}=zipReader;if(await initStream(reader),reader.size!==UNDEFINED_VALUE&&reader.readUint8Array||(reader=new BlobReader(await new Response(reader.readable).blob()),await initStream(reader)),reader.size<22)throw new Error(ERR_BAD_FORMAT);reader.chunkSize=getChunkSize(config);const endOfDirectoryInfo=await async function(reader,signature,startOffset,minimumBytes,maximumLength){const signatureArray=new Uint8Array(4);!function(view,offset,value){view.setUint32(offset,value,!0)}(getDataView$1(signatureArray),0,signature);const maximumBytes=minimumBytes+maximumLength;return await seek(minimumBytes)||await seek(Math.min(maximumBytes,startOffset));async function seek(length){const offset=startOffset-length,bytes=await readUint8Array(reader,offset,length);for(let indexByte=bytes.length-minimumBytes;indexByte>=0;indexByte--)if(bytes[indexByte]==signatureArray[0]&&bytes[indexByte+1]==signatureArray[1]&&bytes[indexByte+2]==signatureArray[2]&&bytes[indexByte+3]==signatureArray[3])return{offset:offset+indexByte,buffer:bytes.slice(indexByte,indexByte+minimumBytes).buffer}}}(reader,101010256,reader.size,22,1048560);if(!endOfDirectoryInfo)throw getUint32(getDataView$1(await readUint8Array(reader,0,4)))==SPLIT_ZIP_FILE_SIGNATURE?new Error("Split zip file"):new Error("End of central directory not found");const endOfDirectoryView=getDataView$1(endOfDirectoryInfo);let directoryDataLength=getUint32(endOfDirectoryView,12),directoryDataOffset=getUint32(endOfDirectoryView,16);const commentOffset=endOfDirectoryInfo.offset,commentLength=getUint16(endOfDirectoryView,20),appendedDataOffset=commentOffset+22+commentLength;let lastDiskNumber=getUint16(endOfDirectoryView,4);const expectedLastDiskNumber=reader.lastDiskNumber||0;let diskNumber=getUint16(endOfDirectoryView,6),filesLength=getUint16(endOfDirectoryView,8),prependedDataLength=0,startOffset=0;if(directoryDataOffset==MAX_32_BITS||directoryDataLength==MAX_32_BITS||65535==filesLength||65535==diskNumber){const endOfDirectoryLocatorView=getDataView$1(await readUint8Array(reader,endOfDirectoryInfo.offset-20,20));if(117853008!=getUint32(endOfDirectoryLocatorView,0))throw new Error("End of Zip64 central directory not found");directoryDataOffset=getBigUint64(endOfDirectoryLocatorView,8);let endOfDirectoryArray=await readUint8Array(reader,directoryDataOffset,56,-1),endOfDirectoryView=getDataView$1(endOfDirectoryArray);const expectedDirectoryDataOffset=endOfDirectoryInfo.offset-20-56;if(101075792!=getUint32(endOfDirectoryView,0)&&directoryDataOffset!=expectedDirectoryDataOffset){const originalDirectoryDataOffset=directoryDataOffset;directoryDataOffset=expectedDirectoryDataOffset,prependedDataLength=directoryDataOffset-originalDirectoryDataOffset,endOfDirectoryArray=await readUint8Array(reader,directoryDataOffset,56,-1),endOfDirectoryView=getDataView$1(endOfDirectoryArray)}if(101075792!=getUint32(endOfDirectoryView,0))throw new Error("End of Zip64 central directory locator not found");65535==lastDiskNumber&&(lastDiskNumber=getUint32(endOfDirectoryView,16)),65535==diskNumber&&(diskNumber=getUint32(endOfDirectoryView,20)),65535==filesLength&&(filesLength=getBigUint64(endOfDirectoryView,32)),directoryDataLength==MAX_32_BITS&&(directoryDataLength=getBigUint64(endOfDirectoryView,40)),directoryDataOffset-=directoryDataLength}if(expectedLastDiskNumber!=lastDiskNumber)throw new Error("Split zip file");if(directoryDataOffset<0||directoryDataOffset>=reader.size)throw new Error(ERR_BAD_FORMAT);let offset=0,directoryArray=await readUint8Array(reader,directoryDataOffset,directoryDataLength,diskNumber),directoryView=getDataView$1(directoryArray);if(directoryDataLength){const expectedDirectoryDataOffset=endOfDirectoryInfo.offset-directoryDataLength;if(33639248!=getUint32(directoryView,offset)&&directoryDataOffset!=expectedDirectoryDataOffset){const originalDirectoryDataOffset=directoryDataOffset;directoryDataOffset=expectedDirectoryDataOffset,prependedDataLength=directoryDataOffset-originalDirectoryDataOffset,directoryArray=await readUint8Array(reader,directoryDataOffset,directoryDataLength,diskNumber),directoryView=getDataView$1(directoryArray)}}if(directoryDataOffset<0||directoryDataOffset>=reader.size)throw new Error(ERR_BAD_FORMAT);const filenameEncoding=getOptionValue$1(zipReader,options,"filenameEncoding"),commentEncoding=getOptionValue$1(zipReader,options,"commentEncoding");for(let indexFile=0;indexFile<filesLength;indexFile++){const fileEntry=new ZipEntry(reader,config,zipReader.options);if(33639248!=getUint32(directoryView,offset))throw new Error("Central directory header not found");readCommonHeader(fileEntry,directoryView,offset+6);const languageEncodingFlag=Boolean(fileEntry.bitFlag.languageEncodingFlag),filenameOffset=offset+46,extraFieldOffset=filenameOffset+fileEntry.filenameLength,commentOffset=extraFieldOffset+fileEntry.extraFieldLength,versionMadeBy=getUint16(directoryView,offset+4),msDosCompatible=0==(0&versionMadeBy),rawFilename=directoryArray.subarray(filenameOffset,extraFieldOffset),commentLength=getUint16(directoryView,offset+32),endOffset=commentOffset+commentLength,rawComment=directoryArray.subarray(commentOffset,endOffset),filenameUTF8=languageEncodingFlag,commentUTF8=languageEncodingFlag,directory=msDosCompatible&&16==(16&getUint8(directoryView,offset+38)),offsetFileEntry=getUint32(directoryView,offset+42)+prependedDataLength;Object.assign(fileEntry,{versionMadeBy:versionMadeBy,msDosCompatible:msDosCompatible,compressedSize:0,uncompressedSize:0,commentLength:commentLength,directory:directory,offset:offsetFileEntry,diskNumberStart:getUint16(directoryView,offset+34),internalFileAttribute:getUint16(directoryView,offset+36),externalFileAttribute:getUint32(directoryView,offset+38),rawFilename:rawFilename,filenameUTF8:filenameUTF8,commentUTF8:commentUTF8,rawExtraField:directoryArray.subarray(extraFieldOffset,commentOffset)});const[filename,comment]=await Promise.all([decodeText(rawFilename,filenameUTF8?"utf-8":filenameEncoding||"cp437"),decodeText(rawComment,commentUTF8?"utf-8":commentEncoding||"cp437")]);Object.assign(fileEntry,{rawComment:rawComment,filename:filename,comment:comment,directory:directory||filename.endsWith("/")}),startOffset=Math.max(offsetFileEntry,startOffset),await readCommonFooter(fileEntry,fileEntry,directoryView,offset+6);const entry=new Entry(fileEntry);entry.getData=(writer,options)=>fileEntry.getData(writer,entry,options),offset=endOffset;const{onprogress:onprogress}=options;if(onprogress)try{await onprogress(indexFile+1,filesLength,new Entry(fileEntry))}catch(_error){}yield entry}const extractPrependedData=getOptionValue$1(zipReader,options,"extractPrependedData"),extractAppendedData=getOptionValue$1(zipReader,options,"extractAppendedData");return extractPrependedData&&(zipReader.prependedData=startOffset>0?await readUint8Array(reader,0,startOffset):new Uint8Array),zipReader.comment=commentLength?await readUint8Array(reader,commentOffset+22,commentLength):new Uint8Array,extractAppendedData&&(zipReader.appendedData=appendedDataOffset<reader.size?await readUint8Array(reader,appendedDataOffset,reader.size-appendedDataOffset):new Uint8Array),!0}async getEntries(){let options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const entries=[];for await(const entry of this.getEntriesGenerator(options))entries.push(entry);return entries}async close(){}},exports.ZipWriter=class{constructor(writer){let options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};writer=initWriter(writer),Object.assign(this,{writer:writer,addSplitZipSignature:writer instanceof SplitDataWriter,options:options,config:getConfiguration(),files:new Map,filenames:new Set,offset:writer.writable.size,pendingEntriesSize:0,pendingAddFileCalls:new Set,bufferedWrites:0})}async add(){let name=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",reader=arguments.length>1?arguments[1]:void 0,options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const zipWriter=this,{pendingAddFileCalls:pendingAddFileCalls,config:config}=zipWriter;let promiseAddFile;workers<config.maxWorkers?workers++:await new Promise((resolve=>pendingEntries.push(resolve)));try{if(name=name.trim(),zipWriter.filenames.has(name))throw new Error("File already exists");return zipWriter.filenames.add(name),promiseAddFile=async function(zipWriter,name,reader,options){name=name.trim(),options.directory&&!name.endsWith("/")?name+="/":options.directory=name.endsWith("/");const rawFilename=encodeText(name);if(getLength(rawFilename)>65535)throw new Error("File entry name exceeds 64KB");const comment=options.comment||"",rawComment=encodeText(comment);if(getLength(rawComment)>65535)throw new Error("File entry comment exceeds 64KB");const version=getOptionValue(zipWriter,options,"version",20);if(version>65535)throw new Error("Version exceeds 65535");const versionMadeBy=getOptionValue(zipWriter,options,"versionMadeBy",20);if(versionMadeBy>65535)throw new Error("Version exceeds 65535");const lastModDate=getOptionValue(zipWriter,options,PROPERTY_NAME_LAST_MODIFICATION_DATE,new Date),lastAccessDate=getOptionValue(zipWriter,options,PROPERTY_NAME_LAST_ACCESS_DATE),creationDate=getOptionValue(zipWriter,options,PROPERTY_NAME_CREATION_DATE),msDosCompatible=getOptionValue(zipWriter,options,"msDosCompatible",!0),internalFileAttribute=getOptionValue(zipWriter,options,"internalFileAttribute",0),externalFileAttribute=getOptionValue(zipWriter,options,"externalFileAttribute",0),password=getOptionValue(zipWriter,options,"password"),encryptionStrength=getOptionValue(zipWriter,options,"encryptionStrength",3),zipCrypto=getOptionValue(zipWriter,options,"zipCrypto"),extendedTimestamp=getOptionValue(zipWriter,options,"extendedTimestamp",!0),keepOrder=getOptionValue(zipWriter,options,"keepOrder",!0),level=getOptionValue(zipWriter,options,"level"),useWebWorkers=getOptionValue(zipWriter,options,"useWebWorkers"),bufferedWrite=getOptionValue(zipWriter,options,"bufferedWrite"),dataDescriptorSignature=getOptionValue(zipWriter,options,"dataDescriptorSignature",!1),signal=getOptionValue(zipWriter,options,"signal"),useCompressionStream=getOptionValue(zipWriter,options,"useCompressionStream");let dataDescriptor=getOptionValue(zipWriter,options,"dataDescriptor",!0),zip64=getOptionValue(zipWriter,options,"zip64");if(password!==UNDEFINED_VALUE&&encryptionStrength!==UNDEFINED_VALUE&&(encryptionStrength<1||encryptionStrength>3))throw new Error("The strength must equal 1, 2, or 3");let rawExtraField=new Uint8Array;const{extraField:extraField}=options;if(extraField){let extraFieldSize=0,offset=0;extraField.forEach((data=>extraFieldSize+=4+getLength(data))),rawExtraField=new Uint8Array(extraFieldSize),extraField.forEach(((data,type)=>{if(type>65535)throw new Error("Extra field type exceeds 65535");if(getLength(data)>65535)throw new Error("Extra field data exceeds 64KB");arraySet(rawExtraField,new Uint16Array([type]),offset),arraySet(rawExtraField,new Uint16Array([getLength(data)]),offset+2),arraySet(rawExtraField,data,offset+4),offset+=4+getLength(data)}))}let maximumCompressedSize=0,maximumEntrySize=0,uncompressedSize=0;const zip64Enabled=!0===zip64;reader&&(reader=initReader(reader),await initStream(reader),reader.size===UNDEFINED_VALUE?(dataDescriptor=!0,(zip64||zip64===UNDEFINED_VALUE)&&(zip64=!0,maximumCompressedSize=MAX_32_BITS)):(uncompressedSize=reader.size,maximumCompressedSize=function(uncompressedSize){return uncompressedSize+5*(Math.floor(uncompressedSize/16383)+1)}(uncompressedSize)));const{diskOffset:diskOffset,diskNumber:diskNumber,maxSize:maxSize}=zipWriter.writer,zip64UncompressedSize=zip64Enabled||uncompressedSize>=MAX_32_BITS,zip64CompressedSize=zip64Enabled||maximumCompressedSize>=MAX_32_BITS,zip64Offset=zip64Enabled||zipWriter.offset+zipWriter.pendingEntriesSize-diskOffset>=MAX_32_BITS,supportZip64SplitFile=getOptionValue(zipWriter,options,"supportZip64SplitFile",!0),zip64DiskNumberStart=supportZip64SplitFile&&zip64Enabled||diskNumber+Math.ceil(zipWriter.pendingEntriesSize/maxSize)>=65535;if(zip64Offset||zip64UncompressedSize||zip64CompressedSize||zip64DiskNumberStart){if(!1===zip64||!keepOrder)throw new Error(ERR_UNSUPPORTED_FORMAT);zip64=!0}zip64=zip64||!1;const headerInfo=function(options){const{rawFilename:rawFilename,lastModDate:lastModDate,lastAccessDate:lastAccessDate,creationDate:creationDate,password:password,level:level,zip64:zip64,zipCrypto:zipCrypto,dataDescriptor:dataDescriptor,directory:directory,rawExtraField:rawExtraField,encryptionStrength:encryptionStrength,extendedTimestamp:extendedTimestamp}=options,compressed=0!==level&&!directory,encrypted=Boolean(password&&getLength(password));let rawExtraFieldAES,rawExtraFieldNTFS,rawExtraFieldExtendedTimestamp,version=options.version;if(encrypted&&!zipCrypto){rawExtraFieldAES=new Uint8Array(getLength(EXTRAFIELD_DATA_AES)+2);const extraFieldAESView=getDataView(rawExtraFieldAES);setUint16(extraFieldAESView,0,EXTRAFIELD_TYPE_AES),arraySet(rawExtraFieldAES,EXTRAFIELD_DATA_AES,2),setUint8(extraFieldAESView,8,encryptionStrength)}else rawExtraFieldAES=new Uint8Array;if(extendedTimestamp){rawExtraFieldExtendedTimestamp=new Uint8Array(9+(lastAccessDate?4:0)+(creationDate?4:0));const extraFieldExtendedTimestampView=getDataView(rawExtraFieldExtendedTimestamp);setUint16(extraFieldExtendedTimestampView,0,EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP),setUint16(extraFieldExtendedTimestampView,2,getLength(rawExtraFieldExtendedTimestamp)-4),setUint8(extraFieldExtendedTimestampView,4,1+(lastAccessDate?2:0)+(creationDate?4:0)),setUint32(extraFieldExtendedTimestampView,5,Math.floor(lastModDate.getTime()/1e3)),lastAccessDate&&setUint32(extraFieldExtendedTimestampView,9,Math.floor(lastAccessDate.getTime()/1e3)),creationDate&&setUint32(extraFieldExtendedTimestampView,13,Math.floor(creationDate.getTime()/1e3));try{rawExtraFieldNTFS=new Uint8Array(36);const extraFieldNTFSView=getDataView(rawExtraFieldNTFS),lastModTimeNTFS=getTimeNTFS(lastModDate);setUint16(extraFieldNTFSView,0,EXTRAFIELD_TYPE_NTFS),setUint16(extraFieldNTFSView,2,32),setUint16(extraFieldNTFSView,8,EXTRAFIELD_TYPE_NTFS_TAG1),setUint16(extraFieldNTFSView,10,24),setBigUint64(extraFieldNTFSView,12,lastModTimeNTFS),setBigUint64(extraFieldNTFSView,20,getTimeNTFS(lastAccessDate)||lastModTimeNTFS),setBigUint64(extraFieldNTFSView,28,getTimeNTFS(creationDate)||lastModTimeNTFS)}catch(_error){rawExtraFieldNTFS=new Uint8Array}}else rawExtraFieldNTFS=rawExtraFieldExtendedTimestamp=new Uint8Array;let bitFlag=BITFLAG_LANG_ENCODING_FLAG;dataDescriptor&&(bitFlag|=BITFLAG_DATA_DESCRIPTOR);let compressionMethod=COMPRESSION_METHOD_STORE;compressed&&(compressionMethod=COMPRESSION_METHOD_DEFLATE),zip64&&(version=version>VERSION_ZIP64?version:VERSION_ZIP64),encrypted&&(bitFlag|=BITFLAG_ENCRYPTED,zipCrypto||(version=version>VERSION_AES?version:VERSION_AES,compressionMethod=COMPRESSION_METHOD_AES,compressed&&(rawExtraFieldAES[9]=COMPRESSION_METHOD_DEFLATE)));const headerArray=new Uint8Array(26),headerView=getDataView(headerArray);setUint16(headerView,0,version),setUint16(headerView,2,bitFlag),setUint16(headerView,4,compressionMethod);const dateArray=new Uint32Array(1),dateView=getDataView(dateArray);let lastModDateMsDos;lastModDateMsDos=lastModDate<MIN_DATE?MIN_DATE:lastModDate>MAX_DATE?MAX_DATE:lastModDate,setUint16(dateView,0,(lastModDateMsDos.getHours()<<6|lastModDateMsDos.getMinutes())<<5|lastModDateMsDos.getSeconds()/2),setUint16(dateView,2,(lastModDateMsDos.getFullYear()-1980<<4|lastModDateMsDos.getMonth()+1)<<5|lastModDateMsDos.getDate());const rawLastModDate=dateArray[0];setUint32(headerView,6,rawLastModDate),setUint16(headerView,22,getLength(rawFilename));const extraFieldLength=getLength(rawExtraFieldAES,rawExtraFieldExtendedTimestamp,rawExtraFieldNTFS,rawExtraField);setUint16(headerView,24,extraFieldLength);const localHeaderArray=new Uint8Array(30+getLength(rawFilename)+extraFieldLength);return setUint32(getDataView(localHeaderArray),0,LOCAL_FILE_HEADER_SIGNATURE),arraySet(localHeaderArray,headerArray,4),arraySet(localHeaderArray,rawFilename,30),arraySet(localHeaderArray,rawExtraFieldAES,30+getLength(rawFilename)),arraySet(localHeaderArray,rawExtraFieldExtendedTimestamp,30+getLength(rawFilename,rawExtraFieldAES)),arraySet(localHeaderArray,rawExtraFieldNTFS,30+getLength(rawFilename,rawExtraFieldAES,rawExtraFieldExtendedTimestamp)),arraySet(localHeaderArray,rawExtraField,30+getLength(rawFilename,rawExtraFieldAES,rawExtraFieldExtendedTimestamp,rawExtraFieldNTFS)),{localHeaderArray:localHeaderArray,headerArray:headerArray,headerView:headerView,lastModDate:lastModDate,rawLastModDate:rawLastModDate,encrypted:encrypted,compressed:compressed,version:version,compressionMethod:compressionMethod,rawExtraFieldExtendedTimestamp:rawExtraFieldExtendedTimestamp,rawExtraFieldNTFS:rawExtraFieldNTFS,rawExtraFieldAES:rawExtraFieldAES}}(options=Object.assign({},options,{rawFilename:rawFilename,rawComment:rawComment,version:version,versionMadeBy:versionMadeBy,lastModDate:lastModDate,lastAccessDate:lastAccessDate,creationDate:creationDate,rawExtraField:rawExtraField,zip64:zip64,zip64UncompressedSize:zip64UncompressedSize,zip64CompressedSize:zip64CompressedSize,zip64Offset:zip64Offset,zip64DiskNumberStart:zip64DiskNumberStart,password:password,level:level,useWebWorkers:useWebWorkers,encryptionStrength:encryptionStrength,extendedTimestamp:extendedTimestamp,zipCrypto:zipCrypto,bufferedWrite:bufferedWrite,keepOrder:keepOrder,dataDescriptor:dataDescriptor,dataDescriptorSignature:dataDescriptorSignature,signal:signal,msDosCompatible:msDosCompatible,internalFileAttribute:internalFileAttribute,externalFileAttribute:externalFileAttribute,useCompressionStream:useCompressionStream})),dataDescriptorInfo=function(options){const{zip64:zip64,dataDescriptor:dataDescriptor,dataDescriptorSignature:dataDescriptorSignature}=options;let dataDescriptorView,dataDescriptorArray=new Uint8Array,dataDescriptorOffset=0;return dataDescriptor&&(dataDescriptorArray=new Uint8Array(zip64?dataDescriptorSignature?24:20:dataDescriptorSignature?16:12),dataDescriptorView=getDataView(dataDescriptorArray),dataDescriptorSignature&&(dataDescriptorOffset=4,setUint32(dataDescriptorView,0,DATA_DESCRIPTOR_RECORD_SIGNATURE))),{dataDescriptorArray:dataDescriptorArray,dataDescriptorView:dataDescriptorView,dataDescriptorOffset:dataDescriptorOffset}}(options);let fileEntry;maximumEntrySize=getLength(headerInfo.localHeaderArray,dataDescriptorInfo.dataDescriptorArray)+maximumCompressedSize,zipWriter.pendingEntriesSize+=maximumEntrySize;try{fileEntry=await async function(zipWriter,name,reader,entryInfo,options){const{files:files,writer:writer}=zipWriter,{keepOrder:keepOrder,dataDescriptor:dataDescriptor,signal:signal}=options,{headerInfo:headerInfo}=entryInfo,previousFileEntry=Array.from(files.values()).pop();let bufferedWrite,releaseLockWriter,releaseLockCurrentFileEntry,writingBufferedEntryData,writingEntryData,fileWriter,fileEntry={};files.set(name,fileEntry);try{let lockPreviousFileEntry;keepOrder&&(lockPreviousFileEntry=previousFileEntry&&previousFileEntry.lock,requestLockCurrentFileEntry()),options.bufferedWrite||zipWriter.writerLocked||zipWriter.bufferedWrites&&keepOrder||!dataDescriptor?(fileWriter=new BlobWriter,fileWriter.writable.size=0,bufferedWrite=!0,zipWriter.bufferedWrites++,await initStream(writer)):(fileWriter=writer,await requestLockWriter()),await initStream(fileWriter);const{writable:writable}=writer;let{diskOffset:diskOffset}=writer;if(zipWriter.addSplitZipSignature){delete zipWriter.addSplitZipSignature;const signatureArray=new Uint8Array(4);setUint32(getDataView(signatureArray),0,SPLIT_ZIP_FILE_SIGNATURE),await writeData(writable,signatureArray),zipWriter.offset+=4}bufferedWrite||(await lockPreviousFileEntry,await skipDiskIfNeeded(writable));const{diskNumber:diskNumber}=writer;if(writingEntryData=!0,fileEntry.diskNumberStart=diskNumber,fileEntry=await async function(reader,writer,_ref20,entryInfo,config,options){let{diskNumberStart:diskNumberStart,lock:lock}=_ref20;const{headerInfo:headerInfo,dataDescriptorInfo:dataDescriptorInfo}=entryInfo,{localHeaderArray:localHeaderArray,headerArray:headerArray,lastModDate:lastModDate,rawLastModDate:rawLastModDate,encrypted:encrypted,compressed:compressed,version:version,compressionMethod:compressionMethod,rawExtraFieldExtendedTimestamp:rawExtraFieldExtendedTimestamp,rawExtraFieldNTFS:rawExtraFieldNTFS,rawExtraFieldAES:rawExtraFieldAES}=headerInfo,{dataDescriptorArray:dataDescriptorArray}=dataDescriptorInfo,{rawFilename:rawFilename,lastAccessDate:lastAccessDate,creationDate:creationDate,password:password,level:level,zip64:zip64,zip64UncompressedSize:zip64UncompressedSize,zip64CompressedSize:zip64CompressedSize,zip64Offset:zip64Offset,zip64DiskNumberStart:zip64DiskNumberStart,zipCrypto:zipCrypto,dataDescriptor:dataDescriptor,directory:directory,versionMadeBy:versionMadeBy,rawComment:rawComment,rawExtraField:rawExtraField,useWebWorkers:useWebWorkers,onstart:onstart,onprogress:onprogress,onend:onend,signal:signal,encryptionStrength:encryptionStrength,extendedTimestamp:extendedTimestamp,msDosCompatible:msDosCompatible,internalFileAttribute:internalFileAttribute,externalFileAttribute:externalFileAttribute,useCompressionStream:useCompressionStream}=options,fileEntry={lock:lock,versionMadeBy:versionMadeBy,zip64:zip64,directory:Boolean(directory),filenameUTF8:!0,rawFilename:rawFilename,commentUTF8:!0,rawComment:rawComment,rawExtraFieldExtendedTimestamp:rawExtraFieldExtendedTimestamp,rawExtraFieldNTFS:rawExtraFieldNTFS,rawExtraFieldAES:rawExtraFieldAES,rawExtraField:rawExtraField,extendedTimestamp:extendedTimestamp,msDosCompatible:msDosCompatible,internalFileAttribute:internalFileAttribute,externalFileAttribute:externalFileAttribute,diskNumberStart:diskNumberStart};let signature,compressedSize=0,uncompressedSize=0;const{writable:writable}=writer;if(reader){reader.chunkSize=getChunkSize(config),await writeData(writable,localHeaderArray);const readable=reader.readable,size=readable.size=reader.size,workerOptions={options:{codecType:CODEC_DEFLATE,level:level,password:password,encryptionStrength:encryptionStrength,zipCrypto:encrypted&&zipCrypto,passwordVerification:encrypted&&zipCrypto&&rawLastModDate>>8&255,signed:!0,compressed:compressed,encrypted:encrypted,useWebWorkers:useWebWorkers,useCompressionStream:useCompressionStream,transferStreams:!1},config:config,streamOptions:{signal:signal,size:size,onstart:onstart,onprogress:onprogress,onend:onend}},result=await runWorker({readable:readable,writable:writable},workerOptions);writable.size+=result.size,signature=result.signature,uncompressedSize=reader.size=readable.size,compressedSize=result.size}else await writeData(writable,localHeaderArray);let rawExtraFieldZip64;if(zip64){let rawExtraFieldZip64Length=4;zip64UncompressedSize&&(rawExtraFieldZip64Length+=8),zip64CompressedSize&&(rawExtraFieldZip64Length+=8),zip64Offset&&(rawExtraFieldZip64Length+=8),zip64DiskNumberStart&&(rawExtraFieldZip64Length+=4),rawExtraFieldZip64=new Uint8Array(rawExtraFieldZip64Length)}else rawExtraFieldZip64=new Uint8Array;return function(entryInfo,options){const{signature:signature,rawExtraFieldZip64:rawExtraFieldZip64,compressedSize:compressedSize,uncompressedSize:uncompressedSize,headerInfo:headerInfo,dataDescriptorInfo:dataDescriptorInfo}=entryInfo,{headerView:headerView,encrypted:encrypted}=headerInfo,{dataDescriptorView:dataDescriptorView,dataDescriptorOffset:dataDescriptorOffset}=dataDescriptorInfo,{zip64:zip64,zip64UncompressedSize:zip64UncompressedSize,zip64CompressedSize:zip64CompressedSize,zipCrypto:zipCrypto,dataDescriptor:dataDescriptor}=options;if(encrypted&&!zipCrypto||signature===UNDEFINED_VALUE||(setUint32(headerView,10,signature),dataDescriptor&&setUint32(dataDescriptorView,dataDescriptorOffset,signature)),zip64){const rawExtraFieldZip64View=getDataView(rawExtraFieldZip64);setUint16(rawExtraFieldZip64View,0,EXTRAFIELD_TYPE_ZIP64),setUint16(rawExtraFieldZip64View,2,rawExtraFieldZip64.length-4);let rawExtraFieldZip64Offset=4;zip64UncompressedSize&&(setUint32(headerView,18,MAX_32_BITS),setBigUint64(rawExtraFieldZip64View,rawExtraFieldZip64Offset,BigInt(uncompressedSize)),rawExtraFieldZip64Offset+=8),zip64CompressedSize&&(setUint32(headerView,14,MAX_32_BITS),setBigUint64(rawExtraFieldZip64View,rawExtraFieldZip64Offset,BigInt(compressedSize))),dataDescriptor&&(setBigUint64(dataDescriptorView,dataDescriptorOffset+4,BigInt(compressedSize)),setBigUint64(dataDescriptorView,dataDescriptorOffset+12,BigInt(uncompressedSize)))}else setUint32(headerView,14,compressedSize),setUint32(headerView,18,uncompressedSize),dataDescriptor&&(setUint32(dataDescriptorView,dataDescriptorOffset+4,compressedSize),setUint32(dataDescriptorView,dataDescriptorOffset+8,uncompressedSize))}({signature:signature,rawExtraFieldZip64:rawExtraFieldZip64,compressedSize:compressedSize,uncompressedSize:uncompressedSize,headerInfo:headerInfo,dataDescriptorInfo:dataDescriptorInfo},options),dataDescriptor&&await writeData(writable,dataDescriptorArray),Object.assign(fileEntry,{uncompressedSize:uncompressedSize,compressedSize:compressedSize,lastModDate:lastModDate,rawLastModDate:rawLastModDate,creationDate:creationDate,lastAccessDate:lastAccessDate,encrypted:encrypted,length:getLength(localHeaderArray,dataDescriptorArray)+compressedSize,compressionMethod:compressionMethod,version:version,headerArray:headerArray,signature:signature,rawExtraFieldZip64:rawExtraFieldZip64,zip64UncompressedSize:zip64UncompressedSize,zip64CompressedSize:zip64CompressedSize,zip64Offset:zip64Offset,zip64DiskNumberStart:zip64DiskNumberStart}),fileEntry}(reader,fileWriter,fileEntry,entryInfo,zipWriter.config,options),writingEntryData=!1,files.set(name,fileEntry),fileEntry.filename=name,bufferedWrite){await fileWriter.writable.close();let blob=await fileWriter.getData();await lockPreviousFileEntry,await requestLockWriter(),writingBufferedEntryData=!0,dataDescriptor||(blob=await async function(fileEntry,entryData,writable,_ref21){let{zipCrypto:zipCrypto}=_ref21;const arrayBuffer=await function(blob,start,end){return start||end?blob.slice(start,end).arrayBuffer():blob.arrayBuffer()}(entryData,0,26),arrayBufferView=new DataView(arrayBuffer);return fileEntry.encrypted&&!zipCrypto||setUint32(arrayBufferView,14,fileEntry.signature),fileEntry.zip64?(setUint32(arrayBufferView,18,MAX_32_BITS),setUint32(arrayBufferView,22,MAX_32_BITS)):(setUint32(arrayBufferView,18,fileEntry.compressedSize),setUint32(arrayBufferView,22,fileEntry.uncompressedSize)),await writeData(writable,new Uint8Array(arrayBuffer)),entryData.slice(arrayBuffer.byteLength)}(fileEntry,blob,writable,options)),await skipDiskIfNeeded(writable),fileEntry.diskNumberStart=writer.diskNumber,diskOffset=writer.diskOffset,await blob.stream().pipeTo(writable,{preventClose:!0,preventAbort:!0,signal:signal}),writable.size+=blob.size,writingBufferedEntryData=!1}if(fileEntry.offset=zipWriter.offset-diskOffset,fileEntry.zip64)!function(fileEntry,options){const{rawExtraFieldZip64:rawExtraFieldZip64,offset:offset,diskNumberStart:diskNumberStart}=fileEntry,{zip64UncompressedSize:zip64UncompressedSize,zip64CompressedSize:zip64CompressedSize,zip64Offset:zip64Offset,zip64DiskNumberStart:zip64DiskNumberStart}=options,rawExtraFieldZip64View=getDataView(rawExtraFieldZip64);let rawExtraFieldZip64Offset=4;zip64UncompressedSize&&(rawExtraFieldZip64Offset+=8),zip64CompressedSize&&(rawExtraFieldZip64Offset+=8),zip64Offset&&(setBigUint64(rawExtraFieldZip64View,rawExtraFieldZip64Offset,BigInt(offset)),rawExtraFieldZip64Offset+=8),zip64DiskNumberStart&&setUint32(rawExtraFieldZip64View,rawExtraFieldZip64Offset,diskNumberStart)}(fileEntry,options);else if(fileEntry.offset>=MAX_32_BITS)throw new Error(ERR_UNSUPPORTED_FORMAT);return zipWriter.offset+=fileEntry.length,fileEntry}catch(error){if(bufferedWrite&&writingBufferedEntryData||!bufferedWrite&&writingEntryData){if(zipWriter.hasCorruptedEntries=!0,error)try{error.corruptedEntry=!0}catch(_error){}bufferedWrite?zipWriter.offset+=fileWriter.writable.size:zipWriter.offset=fileWriter.writable.size}throw files.delete(name),error}finally{bufferedWrite&&zipWriter.bufferedWrites--,releaseLockCurrentFileEntry&&releaseLockCurrentFileEntry(),releaseLockWriter&&releaseLockWriter()}function requestLockCurrentFileEntry(){fileEntry.lock=new Promise((resolve=>releaseLockCurrentFileEntry=resolve))}async function requestLockWriter(){zipWriter.writerLocked=!0;const{lockWriter:lockWriter}=zipWriter;zipWriter.lockWriter=new Promise((resolve=>releaseLockWriter=()=>{zipWriter.writerLocked=!1,resolve()})),await lockWriter}async function skipDiskIfNeeded(writable){headerInfo.localHeaderArray.length>writer.availableSize&&(writer.availableSize=0,await writeData(writable,new Uint8Array))}}(zipWriter,name,reader,{headerInfo:headerInfo,dataDescriptorInfo:dataDescriptorInfo},options)}finally{zipWriter.pendingEntriesSize-=maximumEntrySize}return Object.assign(fileEntry,{name:name,comment:comment,extraField:extraField}),new Entry(fileEntry)}(zipWriter,name,reader,options),pendingAddFileCalls.add(promiseAddFile),await promiseAddFile}catch(error){throw zipWriter.filenames.delete(name),error}finally{pendingAddFileCalls.delete(promiseAddFile);const pendingEntry=pendingEntries.shift();pendingEntry?pendingEntry():workers--}}async close(){let comment=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Uint8Array,options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{pendingAddFileCalls:pendingAddFileCalls,writer:writer}=this,{writable:writable}=writer;for(;pendingAddFileCalls.size;)await Promise.all(Array.from(pendingAddFileCalls));return await async function(zipWriter,comment,options){const{files:files,writer:writer}=zipWriter,{diskOffset:diskOffset,writable:writable}=writer;let{diskNumber:diskNumber}=writer,offset=0,directoryDataLength=0,directoryOffset=zipWriter.offset-diskOffset,filesLength=files.size;for(const[,{rawFilename:rawFilename,rawExtraFieldZip64:rawExtraFieldZip64,rawExtraFieldAES:rawExtraFieldAES,rawExtraField:rawExtraField,rawComment:rawComment,rawExtraFieldExtendedTimestamp:rawExtraFieldExtendedTimestamp,rawExtraFieldNTFS:rawExtraFieldNTFS}]of files)directoryDataLength+=46+getLength(rawFilename,rawComment,rawExtraFieldZip64,rawExtraFieldAES,rawExtraFieldExtendedTimestamp,rawExtraFieldNTFS,rawExtraField);const directoryArray=new Uint8Array(directoryDataLength),directoryView=getDataView(directoryArray);await initStream(writer);let directoryDiskOffset=0;for(const[indexFileEntry,fileEntry]of Array.from(files.values()).entries()){const{offset:fileEntryOffset,rawFilename:rawFilename,rawExtraFieldZip64:rawExtraFieldZip64,rawExtraFieldAES:rawExtraFieldAES,rawExtraFieldNTFS:rawExtraFieldNTFS,rawExtraField:rawExtraField,rawComment:rawComment,versionMadeBy:versionMadeBy,headerArray:headerArray,directory:directory,zip64:zip64,zip64UncompressedSize:zip64UncompressedSize,zip64CompressedSize:zip64CompressedSize,zip64DiskNumberStart:zip64DiskNumberStart,zip64Offset:zip64Offset,msDosCompatible:msDosCompatible,internalFileAttribute:internalFileAttribute,externalFileAttribute:externalFileAttribute,extendedTimestamp:extendedTimestamp,lastModDate:lastModDate,diskNumberStart:diskNumberStart,uncompressedSize:uncompressedSize,compressedSize:compressedSize}=fileEntry;let rawExtraFieldExtendedTimestamp;if(extendedTimestamp){rawExtraFieldExtendedTimestamp=new Uint8Array(9);const extraFieldExtendedTimestampView=getDataView(rawExtraFieldExtendedTimestamp);setUint16(extraFieldExtendedTimestampView,0,EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP),setUint16(extraFieldExtendedTimestampView,2,getLength(rawExtraFieldExtendedTimestamp)-4),setUint8(extraFieldExtendedTimestampView,4,1),setUint32(extraFieldExtendedTimestampView,5,Math.floor(lastModDate.getTime()/1e3))}else rawExtraFieldExtendedTimestamp=new Uint8Array;const extraFieldLength=getLength(rawExtraFieldZip64,rawExtraFieldAES,rawExtraFieldExtendedTimestamp,rawExtraFieldNTFS,rawExtraField);setUint32(directoryView,offset,33639248),setUint16(directoryView,offset+4,versionMadeBy);const headerView=getDataView(headerArray);zip64UncompressedSize||setUint32(headerView,18,uncompressedSize),zip64CompressedSize||setUint32(headerView,14,compressedSize),arraySet(directoryArray,headerArray,offset+6),setUint16(directoryView,offset+30,extraFieldLength),setUint16(directoryView,offset+32,getLength(rawComment)),setUint16(directoryView,offset+34,zip64&&zip64DiskNumberStart?65535:diskNumberStart),setUint16(directoryView,offset+36,internalFileAttribute),externalFileAttribute?setUint32(directoryView,offset+38,externalFileAttribute):directory&&msDosCompatible&&setUint8(directoryView,offset+38,16),setUint32(directoryView,offset+42,zip64&&zip64Offset?MAX_32_BITS:fileEntryOffset),arraySet(directoryArray,rawFilename,offset+46),arraySet(directoryArray,rawExtraFieldZip64,offset+46+getLength(rawFilename)),arraySet(directoryArray,rawExtraFieldAES,offset+46+getLength(rawFilename,rawExtraFieldZip64)),arraySet(directoryArray,rawExtraFieldExtendedTimestamp,offset+46+getLength(rawFilename,rawExtraFieldZip64,rawExtraFieldAES)),arraySet(directoryArray,rawExtraFieldNTFS,offset+46+getLength(rawFilename,rawExtraFieldZip64,rawExtraFieldAES,rawExtraFieldExtendedTimestamp)),arraySet(directoryArray,rawExtraField,offset+46+getLength(rawFilename,rawExtraFieldZip64,rawExtraFieldAES,rawExtraFieldExtendedTimestamp,rawExtraFieldNTFS)),arraySet(directoryArray,rawComment,offset+46+getLength(rawFilename)+extraFieldLength);const directoryEntryLength=46+getLength(rawFilename,rawComment)+extraFieldLength;if(offset-directoryDiskOffset>writer.availableSize&&(writer.availableSize=0,await writeData(writable,directoryArray.slice(directoryDiskOffset,offset)),directoryDiskOffset=offset),offset+=directoryEntryLength,options.onprogress)try{await options.onprogress(indexFileEntry+1,files.size,new Entry(fileEntry))}catch(_error){}}await writeData(writable,directoryDiskOffset?directoryArray.slice(directoryDiskOffset):directoryArray);let lastDiskNumber=writer.diskNumber;const{availableSize:availableSize}=writer;availableSize<22&&lastDiskNumber++;let zip64=getOptionValue(zipWriter,options,"zip64");if(directoryOffset>=MAX_32_BITS||directoryDataLength>=MAX_32_BITS||filesLength>=65535||lastDiskNumber>=65535){if(!1===zip64)throw new Error(ERR_UNSUPPORTED_FORMAT);zip64=!0}const endOfdirectoryArray=new Uint8Array(zip64?98:22),endOfdirectoryView=getDataView(endOfdirectoryArray);offset=0,zip64&&(setUint32(endOfdirectoryView,0,101075792),setBigUint64(endOfdirectoryView,4,BigInt(44)),setUint16(endOfdirectoryView,12,45),setUint16(endOfdirectoryView,14,45),setUint32(endOfdirectoryView,16,lastDiskNumber),setUint32(endOfdirectoryView,20,diskNumber),setBigUint64(endOfdirectoryView,24,BigInt(filesLength)),setBigUint64(endOfdirectoryView,32,BigInt(filesLength)),setBigUint64(endOfdirectoryView,40,BigInt(directoryDataLength)),setBigUint64(endOfdirectoryView,48,BigInt(directoryOffset)),setUint32(endOfdirectoryView,56,117853008),setBigUint64(endOfdirectoryView,64,BigInt(directoryOffset)+BigInt(directoryDataLength)),setUint32(endOfdirectoryView,72,lastDiskNumber+1),getOptionValue(zipWriter,options,"supportZip64SplitFile",!0)&&(lastDiskNumber=65535,diskNumber=65535),filesLength=65535,directoryOffset=MAX_32_BITS,directoryDataLength=MAX_32_BITS,offset+=76),setUint32(endOfdirectoryView,offset,101010256),setUint16(endOfdirectoryView,offset+4,lastDiskNumber),setUint16(endOfdirectoryView,offset+6,diskNumber),setUint16(endOfdirectoryView,offset+8,filesLength),setUint16(endOfdirectoryView,offset+10,filesLength),setUint32(endOfdirectoryView,offset+12,directoryDataLength),setUint32(endOfdirectoryView,offset+16,directoryOffset);const commentLength=getLength(comment);if(commentLength){if(!(commentLength<=65535))throw new Error("Zip file comment exceeds 64KB");setUint16(endOfdirectoryView,offset+20,commentLength)}await writeData(writable,endOfdirectoryArray),commentLength&&await writeData(writable,comment)}(this,comment,options),getOptionValue(this,options,"preventClose")||await writable.close(),writer.getData?writer.getData():writable}},exports.configure=configure,exports.getMimeType=function(){return"application/octet-stream"},exports.initReader=initReader,exports.initShimAsyncCodec=function(library){let options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},registerDataHandler=arguments.length>2?arguments[2]:void 0;return{Deflate:createCodecClass(library.Deflate,options.deflate,registerDataHandler),Inflate:createCodecClass(library.Inflate,options.inflate,registerDataHandler)}},exports.initStream=initStream,exports.initWriter=initWriter,exports.readUint8Array=readUint8Array,exports.terminateWorkers=function(){pool.forEach((workerData=>{clearTerminateTimeout(workerData),workerData.terminate()}))},Object.defineProperty(exports,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?factory(exports):"function"==typeof define&&define.amd?define("qtype_proforma/zip/zip",["exports"],factory):factory((global="undefined"!=typeof globalThis?globalThis:global||self).zip={});

//# sourceMappingURL=zip.min.js.map