{"version":3,"sources":["../src/clike.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","Context","indented","column","type","info","align","prev","pushContext","state","col","indent","context","popContext","t","typeBefore","stream","pos","prevToken","test","string","slice","typeAtEndOfLine","indentation","isTopScope","defineMode","config","parserConfig","indentUnit","statementIndentUnit","dontAlignCalls","keywords","types","builtin","blockKeywords","defKeywords","atoms","hooks","multiLineStrings","indentStatements","indentSwitch","namespaceSeparator","isPunctuationChar","numberStart","number","isOperatorChar","isIdentifierChar","isReservedIdentifier","curPunc","isDefKeyword","tokenBase","ch","next","result","tokenize","tokenString","backUp","match","eat","tokenComment","skipToEnd","eatWhile","cur","current","contains","quote","escaped","end","maybeEnd","maybeEOL","typeFirstDefinitions","eol","startState","basecolumn","startOfLine","token","ctx","sol","eatSpace","style","start","styleDefs","textAfter","Pass","firstChar","charAt","closing","dontIndentStatements","hook","switchBlock","allmanIndentation","electricInput","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","words","str","obj","split","i","length","word","propertyIsEnumerable","cppKeywords","objCKeywords","objCBuiltins","basicCTypes","basicObjCTypes","cTypes","identifier","objCTypes","cDefKeywords","cppHook","peek","pointerHook","_stream","cIsReservedIdentifier","toLowerCase","cpp14Literal","cpp11StringHook","cpp11RawStringDelim","tokenRawString","cppLooksLikeConstructor","lastTwo","exec","tokenAtString","delim","replace","RegExp","def","mimes","mode","add","prop","hasOwnProperty","push","helperType","registerHelper","defineMIME","name","modeProps","tokenTripleString","tokenNestedComment","depth","cx","closeBrackets","pairs","triples","tokenKotlinString","tripleString","skipTo","intendSwitch","stringTokenizer","tokenCeylonString","first","toUpperCase"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"qtype_proforma/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"qtype_proforma/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction Context(indented, column, type, info, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.info = info;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type, info) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\" && type != \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, info, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\nfunction typeBefore(stream, state, pos) {\n  if (state.prevToken == \"variable\" || state.prevToken == \"type\") return true;\n  if (/\\S(?:[^- ]>|[*\\]])\\s*$|\\*$/.test(stream.string.slice(0, pos))) return true;\n  if (state.typeAtEndOfLine && stream.column() == stream.indentation()) return true;\n}\n\nfunction isTopScope(context) {\n  for (;;) {\n    if (!context || context.type == \"top\") return true;\n    if (context.type == \"}\" && context.prev.info != \"namespace\") return false;\n    context = context.prev;\n  }\n}\n\nCodeMirror.defineMode(\"clike\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      types = parserConfig.types || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      defKeywords = parserConfig.defKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false,\n      indentSwitch = parserConfig.indentSwitch !== false,\n      namespaceSeparator = parserConfig.namespaceSeparator,\n      isPunctuationChar = parserConfig.isPunctuationChar || /[\\[\\]{}\\(\\),;\\:\\.]/,\n      numberStart = parserConfig.numberStart || /[\\d\\.]/,\n      number = parserConfig.number || /^(?:0x[a-f\\d]+|0b[01]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:e[-+]?\\d+)?)(u|ll?|l|f)?/i,\n      isOperatorChar = parserConfig.isOperatorChar || /[+\\-*&%=<>!?|\\/]/,\n      isIdentifierChar = parserConfig.isIdentifierChar || /[\\w\\$_\\xa1-\\uffff]/,\n      // An optional function that takes a {string} token and returns true if it\n      // should be treated as a builtin.\n      isReservedIdentifier = parserConfig.isReservedIdentifier || false;\n\n  var curPunc, isDefKeyword;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (isPunctuationChar.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (numberStart.test(ch)) {\n      stream.backUp(1)\n      if (stream.match(number)) return \"number\"\n      stream.next()\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      while (!stream.match(/^\\/[\\/*]/, false) && stream.eat(isOperatorChar)) {}\n      return \"operator\";\n    }\n    stream.eatWhile(isIdentifierChar);\n    if (namespaceSeparator) while (stream.match(namespaceSeparator))\n      stream.eatWhile(isIdentifierChar);\n\n    var cur = stream.current();\n    if (contains(keywords, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      if (contains(defKeywords, cur)) isDefKeyword = true;\n      return \"keyword\";\n    }\n    if (contains(types, cur)) return \"type\";\n    if (contains(builtin, cur)\n        || (isReservedIdentifier && isReservedIdentifier(cur))) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (contains(atoms, cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function maybeEOL(stream, state) {\n    if (parserConfig.typeFirstDefinitions && stream.eol() && isTopScope(state.context))\n      state.typeAtEndOfLine = typeBefore(stream, state, stream.pos)\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", null, false),\n        indented: 0,\n        startOfLine: true,\n        prevToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) { maybeEOL(stream, state); return null; }\n      curPunc = isDefKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \";\" || curPunc == \":\" || (curPunc == \",\" && stream.match(/^\\s*(?:\\/\\/.*)?$/, false)))\n        while (state.context.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (indentStatements &&\n               (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != \";\") ||\n                (ctx.type == \"statement\" && curPunc == \"newstatement\"))) {\n        pushContext(state, stream.column(), \"statement\", stream.current());\n      }\n\n      if (style == \"variable\" &&\n          ((state.prevToken == \"def\" ||\n            (parserConfig.typeFirstDefinitions && typeBefore(stream, state, stream.start) &&\n             isTopScope(state.context) && stream.match(/^\\s*\\(/, false)))))\n        style = \"def\";\n\n      if (hooks.token) {\n        var result = hooks.token(stream, state, style);\n        if (result !== undefined) style = result;\n      }\n\n      if (style == \"def\" && parserConfig.styleDefs === false) style = \"variable\";\n\n      state.startOfLine = false;\n      state.prevToken = isDefKeyword ? \"def\" : style || curPunc;\n      maybeEOL(stream, state);\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null || state.typeAtEndOfLine) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      if (parserConfig.dontIndentStatements)\n        while (ctx.type == \"statement\" && parserConfig.dontIndentStatements.test(ctx.info))\n          ctx = ctx.prev\n      if (hooks.indent) {\n        var hook = hooks.indent(state, ctx, textAfter, indentUnit);\n        if (typeof hook == \"number\") return hook\n      }\n      var switchBlock = ctx.prev && ctx.prev.info == \"switch\";\n      if (parserConfig.allmanIndentation && /[{(]/.test(firstChar)) {\n        while (ctx.type != \"top\" && ctx.type != \"}\") ctx = ctx.prev\n        return ctx.indented\n      }\n      if (ctx.type == \"statement\")\n        return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      if (ctx.align && (!dontAlignCalls || ctx.type != \")\"))\n        return ctx.column + (closing ? 0 : 1);\n      if (ctx.type == \")\" && !closing)\n        return ctx.indented + statementIndentUnit;\n\n      return ctx.indented + (closing ? 0 : indentUnit) +\n        (!closing && switchBlock && !/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 0);\n    },\n\n    electricInput: indentSwitch ? /^\\s*(?:case .*?:|default:|\\{\\}?|\\})$/ : /^\\s*[{}]$/,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    blockCommentContinue: \" * \",\n    lineComment: \"//\",\n    fold: \"brace\"\n  };\n});\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  function contains(words, word) {\n    if (typeof words === \"function\") {\n      return words(word);\n    } else {\n      return words.propertyIsEnumerable(word);\n    }\n  }\n  var cKeywords = \"auto if break case register continue return default do sizeof \" +\n    \"static else struct switch extern typedef union for goto while enum const \" +\n    \"volatile inline restrict asm fortran\";\n\n  // Keywords from https://en.cppreference.com/w/cpp/keyword includes C++20.\n  var cppKeywords = \"alignas alignof and and_eq audit axiom bitand bitor catch \" +\n  \"class compl concept constexpr const_cast decltype delete dynamic_cast \" +\n  \"explicit export final friend import module mutable namespace new noexcept \" +\n  \"not not_eq operator or or_eq override private protected public \" +\n  \"reinterpret_cast requires static_assert static_cast template this \" +\n  \"thread_local throw try typeid typename using virtual xor xor_eq\";\n\n  var objCKeywords = \"bycopy byref in inout oneway out self super atomic nonatomic retain copy \" +\n  \"readwrite readonly strong weak assign typeof nullable nonnull null_resettable _cmd \" +\n  \"@interface @implementation @end @protocol @encode @property @synthesize @dynamic @class \" +\n  \"@public @package @private @protected @required @optional @try @catch @finally @import \" +\n  \"@selector @encode @defs @synchronized @autoreleasepool @compatibility_alias @available\";\n\n  var objCBuiltins = \"FOUNDATION_EXPORT FOUNDATION_EXTERN NS_INLINE NS_FORMAT_FUNCTION \" +\n  \" NS_RETURNS_RETAINEDNS_ERROR_ENUM NS_RETURNS_NOT_RETAINED NS_RETURNS_INNER_POINTER \" +\n  \"NS_DESIGNATED_INITIALIZER NS_ENUM NS_OPTIONS NS_REQUIRES_NIL_TERMINATION \" +\n  \"NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_SWIFT_NAME NS_REFINED_FOR_SWIFT\"\n\n  // Do not use this. Use the cTypes function below. This is global just to avoid\n  // excessive calls when cTypes is being called multiple times during a parse.\n  var basicCTypes = words(\"int long char short double float unsigned signed \" +\n    \"void bool\");\n\n  // Do not use this. Use the objCTypes function below. This is global just to avoid\n  // excessive calls when objCTypes is being called multiple times during a parse.\n  var basicObjCTypes = words(\"SEL instancetype id Class Protocol BOOL\");\n\n  // Returns true if identifier is a \"C\" type.\n  // C type is defined as those that are reserved by the compiler (basicTypes),\n  // and those that end in _t (Reserved by POSIX for types)\n  // http://www.gnu.org/software/libc/manual/html_node/Reserved-Names.html\n  function cTypes(identifier) {\n    return contains(basicCTypes, identifier) || /.+_t$/.test(identifier);\n  }\n\n  // Returns true if identifier is a \"Objective C\" type.\n  function objCTypes(identifier) {\n    return cTypes(identifier) || contains(basicObjCTypes, identifier);\n  }\n\n  var cBlockKeywords = \"case do else for if switch while struct enum union\";\n  var cDefKeywords = \"struct enum union\";\n\n  function cppHook(stream, state) {\n    if (!state.startOfLine) return false\n    for (var ch, next = null; ch = stream.peek();) {\n      if (ch == \"\\\\\" && stream.match(/^.$/)) {\n        next = cppHook\n        break\n      } else if (ch == \"/\" && stream.match(/^\\/[\\/\\*]/, false)) {\n        break\n      }\n      stream.next()\n    }\n    state.tokenize = next\n    return \"meta\"\n  }\n\n  function pointerHook(_stream, state) {\n    if (state.prevToken == \"type\") return \"type\";\n    return false;\n  }\n\n  // For C and C++ (and ObjC): identifiers starting with __\n  // or _ followed by a capital letter are reserved for the compiler.\n  function cIsReservedIdentifier(token) {\n    if (!token || token.length < 2) return false;\n    if (token[0] != '_') return false;\n    return (token[1] == '_') || (token[1] !== token[1].toLowerCase());\n  }\n\n  function cpp14Literal(stream) {\n    stream.eatWhile(/[\\w\\.']/);\n    return \"number\";\n  }\n\n  function cpp11StringHook(stream, state) {\n    stream.backUp(1);\n    // Raw strings.\n    if (stream.match(/(R|u8R|uR|UR|LR)/)) {\n      var match = stream.match(/\"([^\\s\\\\()]{0,16})\\(/);\n      if (!match) {\n        return false;\n      }\n      state.cpp11RawStringDelim = match[1];\n      state.tokenize = tokenRawString;\n      return tokenRawString(stream, state);\n    }\n    // Unicode strings/chars.\n    if (stream.match(/(u8|u|U|L)/)) {\n      if (stream.match(/[\"']/, /* eat */ false)) {\n        return \"string\";\n      }\n      return false;\n    }\n    // Ignore this hook.\n    stream.next();\n    return false;\n  }\n\n  function cppLooksLikeConstructor(word) {\n    var lastTwo = /(\\w+)::~?(\\w+)$/.exec(word);\n    return lastTwo && lastTwo[1] == lastTwo[2];\n  }\n\n  // C#-style strings where \"\" escapes a quote.\n  function tokenAtString(stream, state) {\n    var next;\n    while ((next = stream.next()) != null) {\n      if (next == '\"' && !stream.eat('\"')) {\n        state.tokenize = null;\n        break;\n      }\n    }\n    return \"string\";\n  }\n\n  // C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n  // <delim> can be a string up to 16 characters long.\n  function tokenRawString(stream, state) {\n    // Escape characters that have special regex meanings.\n    var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n    var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n    if (match)\n      state.tokenize = null;\n    else\n      stream.skipToEnd();\n    return \"string\";\n  }\n\n  function def(mimes, mode) {\n    if (typeof mimes == \"string\") mimes = [mimes];\n    var words = [];\n    function add(obj) {\n      if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop))\n        words.push(prop);\n    }\n    add(mode.keywords);\n    add(mode.types);\n    add(mode.builtin);\n    add(mode.atoms);\n    if (words.length) {\n      mode.helperType = mimes[0];\n      CodeMirror.registerHelper(\"hintWords\", mimes[0], words);\n    }\n\n    for (var i = 0; i < mimes.length; ++i)\n      CodeMirror.defineMIME(mimes[i], mode);\n  }\n\n  def([\"text/x-csrc\", \"text/x-c\", \"text/x-chdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords),\n    defKeywords: words(cDefKeywords),\n    typeFirstDefinitions: true,\n    atoms: words(\"NULL true false\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n    },\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def([\"text/x-c++src\", \"text/x-c++hdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + cppKeywords),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords + \" class try catch\"),\n    defKeywords: words(cDefKeywords + \" class namespace\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false NULL nullptr\"),\n    dontIndentStatements: /^template$/,\n    isIdentifierChar: /[\\w\\$_~\\xa1-\\uffff]/,\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function(stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" &&\n            (state.prevToken == \";\" || state.prevToken == null ||\n             state.prevToken == \"}\") &&\n            cppLooksLikeConstructor(stream.current()))\n          return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-java\", {\n    name: \"clike\",\n    keywords: words(\"abstract assert break case catch class const continue default \" +\n                    \"do else enum extends final finally for goto if implements import \" +\n                    \"instanceof interface native new package private protected public \" +\n                    \"return static strictfp super switch synchronized this throw throws transient \" +\n                    \"try volatile while @interface\"),\n    types: words(\"byte short int long float double boolean char void Boolean Byte Character Double Float \" +\n                 \"Integer Long Number Object Short String StringBuffer StringBuilder Void\"),\n    blockKeywords: words(\"catch class do else finally for if switch try while\"),\n    defKeywords: words(\"class interface enum @interface\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    hooks: {\n      \"@\": function(stream) {\n        // Don't match the @interface keyword.\n        if (stream.match('interface', false)) return false;\n\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    },\n    modeProps: {fold: [\"brace\", \"import\"]}\n  });\n\n  def(\"text/x-csharp\", {\n    name: \"clike\",\n    keywords: words(\"abstract as async await base break case catch checked class const continue\" +\n                    \" default delegate do else enum event explicit extern finally fixed for\" +\n                    \" foreach goto if implicit in interface internal is lock namespace new\" +\n                    \" operator out override params private protected public readonly ref return sealed\" +\n                    \" sizeof stackalloc static struct switch this throw try typeof unchecked\" +\n                    \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" +\n                    \" global group into join let orderby partial remove select set value var yield\"),\n    types: words(\"Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func\" +\n                 \" Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32\" +\n                 \" UInt64 bool byte char decimal double short int long object\"  +\n                 \" sbyte float string ushort uint ulong\"),\n    blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n    defKeywords: words(\"class interface namespace struct var\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\n      \"@\": function(stream, state) {\n        if (stream.eat('\"')) {\n          state.tokenize = tokenAtString;\n          return tokenAtString(stream, state);\n        }\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n\n  function tokenTripleString(stream, state) {\n    var escaped = false;\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"\"\"')) {\n        state.tokenize = null;\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  function tokenNestedComment(depth) {\n    return function (stream, state) {\n      var ch\n      while (ch = stream.next()) {\n        if (ch == \"*\" && stream.eat(\"/\")) {\n          if (depth == 1) {\n            state.tokenize = null\n            break\n          } else {\n            state.tokenize = tokenNestedComment(depth - 1)\n            return state.tokenize(stream, state)\n          }\n        } else if (ch == \"/\" && stream.eat(\"*\")) {\n          state.tokenize = tokenNestedComment(depth + 1)\n          return state.tokenize(stream, state)\n        }\n      }\n      return \"comment\"\n    }\n  }\n\n  def(\"text/x-scala\", {\n    name: \"clike\",\n    keywords: words(\n      /* scala */\n      \"abstract case catch class def do else extends final finally for forSome if \" +\n      \"implicit import lazy match new null object override package private protected return \" +\n      \"sealed super this throw trait try type val var while with yield _ \" +\n\n      /* package scala */\n      \"assert assume require print println printf readLine readBoolean readByte readShort \" +\n      \"readChar readInt readLong readFloat readDouble\"\n    ),\n    types: words(\n      \"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" +\n      \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable \" +\n      \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" +\n      \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" +\n      \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector \" +\n\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n    ),\n    multiLineStrings: true,\n    blockKeywords: words(\"catch class enum do else finally for forSome if match switch try while\"),\n    defKeywords: words(\"class enum def object package trait type val var\"),\n    atoms: words(\"true false null\"),\n    indentStatements: false,\n    indentSwitch: false,\n    isOperatorChar: /[+\\-*&%=<>!?|\\/#:@]/,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n        if (!stream.match('\"\"')) return false;\n        state.tokenize = tokenTripleString;\n        return state.tokenize(stream, state);\n      },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      \"=\": function(stream, state) {\n        var cx = state.context\n        if (cx.type == \"}\" && cx.align && stream.eat(\">\")) {\n          state.context = new Context(cx.indented, cx.column, cx.type, cx.info, null, cx.prev)\n          return \"operator\"\n        } else {\n          return false\n        }\n      },\n\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false\n        state.tokenize = tokenNestedComment(1)\n        return state.tokenize(stream, state)\n      }\n    },\n    modeProps: {closeBrackets: {pairs: '()[]{}\"\"', triples: '\"'}}\n  });\n\n  function tokenKotlinString(tripleString){\n    return function (stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!tripleString && !escaped && stream.match('\"') ) {end = true; break;}\n        if (tripleString && stream.match('\"\"\"')) {end = true; break;}\n        next = stream.next();\n        if(!escaped && next == \"$\" && stream.match('{'))\n          stream.skipTo(\"}\");\n        escaped = !escaped && next == \"\\\\\" && !tripleString;\n      }\n      if (end || !tripleString)\n        state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-kotlin\", {\n    name: \"clike\",\n    keywords: words(\n      /*keywords*/\n      \"package as typealias class interface this super val operator \" +\n      \"var fun for is in This throw return annotation \" +\n      \"break continue object if else while do try when !in !is as? \" +\n\n      /*soft keywords*/\n      \"file import where by get set abstract enum open inner override private public internal \" +\n      \"protected catch finally out final vararg reified dynamic companion constructor init \" +\n      \"sealed field property receiver param sparam lateinit data inline noinline tailrec \" +\n      \"external annotation crossinline const operator infix suspend actual expect setparam\"\n    ),\n    types: words(\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void Annotation Any BooleanArray \" +\n      \"ByteArray Char CharArray DeprecationLevel DoubleArray Enum FloatArray Function Int IntArray Lazy \" +\n      \"LazyThreadSafetyMode LongArray Nothing ShortArray Unit\"\n    ),\n    intendSwitch: false,\n    indentStatements: false,\n    multiLineStrings: true,\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+(\\.\\d+)?|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    blockKeywords: words(\"catch class do else finally for if where try while enum\"),\n    defKeywords: words(\"class val var object interface fun\"),\n    atoms: words(\"true false null this\"),\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '*': function(_stream, state) {\n        return state.prevToken == '.' ? 'variable' : 'operator';\n      },\n      '\"': function(stream, state) {\n        state.tokenize = tokenKotlinString(stream.match('\"\"'));\n        return state.tokenize(stream, state);\n      },\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenNestedComment(1);\n        return state.tokenize(stream, state)\n      },\n      indent: function(state, ctx, textAfter, indentUnit) {\n        var firstChar = textAfter && textAfter.charAt(0);\n        if ((state.prevToken == \"}\" || state.prevToken == \")\") && textAfter == \"\")\n          return state.indented;\n        if ((state.prevToken == \"operator\" && textAfter != \"}\" && state.context.type != \"}\") ||\n          state.prevToken == \"variable\" && firstChar == \".\" ||\n          (state.prevToken == \"}\" || state.prevToken == \")\") && firstChar == \".\")\n          return indentUnit * 2 + ctx.indented;\n        if (ctx.align && ctx.type == \"}\")\n          return ctx.indented + (state.context.type == (textAfter || \"\").charAt(0) ? 0 : indentUnit);\n      }\n    },\n    modeProps: {closeBrackets: {triples: '\"'}}\n  });\n\n  def([\"x-shader/x-vertex\", \"x-shader/x-fragment\"], {\n    name: \"clike\",\n    keywords: words(\"sampler1D sampler2D sampler3D samplerCube \" +\n                    \"sampler1DShadow sampler2DShadow \" +\n                    \"const attribute uniform varying \" +\n                    \"break continue discard return \" +\n                    \"for while do if else struct \" +\n                    \"in out inout\"),\n    types: words(\"float int bool void \" +\n                 \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" +\n                 \"mat2 mat3 mat4\"),\n    blockKeywords: words(\"for while do if else struct\"),\n    builtin: words(\"radians degrees sin cos tan asin acos atan \" +\n                    \"pow exp log exp2 sqrt inversesqrt \" +\n                    \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" +\n                    \"length distance dot cross normalize ftransform faceforward \" +\n                    \"reflect refract matrixCompMult \" +\n                    \"lessThan lessThanEqual greaterThan greaterThanEqual \" +\n                    \"equal notEqual any all not \" +\n                    \"texture1D texture1DProj texture1DLod texture1DProjLod \" +\n                    \"texture2D texture2DProj texture2DLod texture2DProjLod \" +\n                    \"texture3D texture3DProj texture3DLod texture3DProjLod \" +\n                    \"textureCube textureCubeLod \" +\n                    \"shadow1D shadow2D shadow1DProj shadow2DProj \" +\n                    \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" +\n                    \"dFdx dFdy fwidth \" +\n                    \"noise1 noise2 noise3 noise4\"),\n    atoms: words(\"true false \" +\n                \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" +\n                \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" +\n                \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" +\n                \"gl_FogCoord gl_PointCoord \" +\n                \"gl_Position gl_PointSize gl_ClipVertex \" +\n                \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" +\n                \"gl_TexCoord gl_FogFragCoord \" +\n                \"gl_FragCoord gl_FrontFacing \" +\n                \"gl_FragData gl_FragDepth \" +\n                \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" +\n                \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" +\n                \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" +\n                \"gl_TexureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" +\n                \"gl_ProjectionMatrixInverseTranspose \" +\n                \"gl_ModelViewProjectionMatrixInverseTranspose \" +\n                \"gl_TextureMatrixInverseTranspose \" +\n                \"gl_NormalScale gl_DepthRange gl_ClipPlane \" +\n                \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" +\n                \"gl_FrontLightModelProduct gl_BackLightModelProduct \" +\n                \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" +\n                \"gl_FogParameters \" +\n                \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" +\n                \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" +\n                \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" +\n                \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" +\n                \"gl_MaxDrawBuffers\"),\n    indentSwitch: false,\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-nesc\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" as atomic async call command component components configuration event generic \" +\n                    \"implementation includes interface module new norace nx_struct nx_union post provides \" +\n                    \"signal task uses abstract extends\"),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords),\n    atoms: words(\"null true false\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-objectivec\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + objCKeywords),\n    types: objCTypes,\n    builtin: words(objCBuiltins),\n    blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized\"),\n    defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class\"),\n    dontIndentStatements: /^@.*$/,\n    typeFirstDefinitions: true,\n    atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n    },\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-objectivec++\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + objCKeywords + \" \" + cppKeywords),\n    types: objCTypes,\n    builtin: words(objCBuiltins),\n    blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized class try catch\"),\n    defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class class namespace\"),\n    dontIndentStatements: /^@.*$|^template$/,\n    typeFirstDefinitions: true,\n    atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function(stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" &&\n            (state.prevToken == \";\" || state.prevToken == null ||\n             state.prevToken == \"}\") &&\n            cppLooksLikeConstructor(stream.current()))\n          return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-squirrel\", {\n    name: \"clike\",\n    keywords: words(\"base break clone continue const default delete enum extends function in class\" +\n                    \" foreach local resume return this throw typeof yield constructor instanceof static\"),\n    types: cTypes,\n    blockKeywords: words(\"case catch class else for foreach if switch try while\"),\n    defKeywords: words(\"function local class\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  // Ceylon Strings need to deal with interpolation\n  var stringTokenizer = null;\n  function tokenCeylonString(type) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!escaped && stream.match('\"') &&\n              (type == \"single\" || stream.match('\"\"'))) {\n          end = true;\n          break;\n        }\n        if (!escaped && stream.match('``')) {\n          stringTokenizer = tokenCeylonString(type);\n          end = true;\n          break;\n        }\n        next = stream.next();\n        escaped = type == \"single\" && !escaped && next == \"\\\\\";\n      }\n      if (end)\n          state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-ceylon\", {\n    name: \"clike\",\n    keywords: words(\"abstracts alias assembly assert assign break case catch class continue dynamic else\" +\n                    \" exists extends finally for function given if import in interface is let module new\" +\n                    \" nonempty object of out outer package return satisfies super switch then this throw\" +\n                    \" try value void while\"),\n    types: function(word) {\n        // In Ceylon all identifiers that start with an uppercase are types\n        var first = word.charAt(0);\n        return (first === first.toUpperCase() && first !== first.toLowerCase());\n    },\n    blockKeywords: words(\"case catch class dynamic else finally for function if interface module new object switch try while\"),\n    defKeywords: words(\"class dynamic function interface module object package value\"),\n    builtin: words(\"abstract actual aliased annotation by default deprecated doc final formal late license\" +\n                   \" native optional sealed see serializable shared suppressWarnings tagged throws variable\"),\n    isPunctuationChar: /[\\[\\]{}\\(\\),;\\:\\.`]/,\n    isOperatorChar: /[+\\-*&%=<>!?|^~:\\/]/,\n    numberStart: /[\\d#$]/,\n    number: /^(?:#[\\da-fA-F_]+|\\$[01_]+|[\\d_]+[kMGTPmunpf]?|[\\d_]+\\.[\\d_]+(?:[eE][-+]?\\d+|[kMGTPmunpf]|)|)/i,\n    multiLineStrings: true,\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null larger smaller equal empty finished\"),\n    indentSwitch: false,\n    styleDefs: false,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n          state.tokenize = tokenCeylonString(stream.match('\"\"') ? \"triple\" : \"single\");\n          return state.tokenize(stream, state);\n        },\n      '`': function(stream, state) {\n          if (!stringTokenizer || !stream.match('`')) return false;\n          state.tokenize = stringTokenizer;\n          stringTokenizer = null;\n          return state.tokenize(stream, state);\n        },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      token: function(_stream, state, style) {\n          if ((style == \"variable\" || style == \"type\") &&\n              state.prevToken == \".\") {\n            return \"variable-2\";\n          }\n        }\n    },\n    modeProps: {\n        fold: [\"brace\", \"import\"],\n        closeBrackets: {triples: '\"'}\n    }\n  });\n\n});\n"],"file":"clike.min.js"}