define("qtype_proforma/taskeditor/dynamic-list",["exports","jquery","core/templates"],(function(_exports,_jquery,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
  * Class for extendable list
  *
  * @package    qtype
  * @subpackage proforma
  * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften
  * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  * @author     eCULT-Team of Ostfalia University, K.Borm
  */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.DynamicList=void 0,_jquery=_interopRequireDefault(_jquery),_templates=_interopRequireDefault(_templates);_exports.DynamicList=class{constructor(classFilename,css_classname,jsClassName,label,help,mandatory,extra_css_class){this.classFilename="xml_fileref_filename",this.classAddItem="add_fileref",this.classRemoveItem="remove_item",this.help=help,this.createTableString(jsClassName,mandatory),this.rowTemplateHtml=null}getClassFilename(){return this.classFilename}createRowFromTemplate(){if(this.rowTemplateHtml)return Promise.resolve(this.rowTemplateHtml);return _templates.default.renderForPromise("qtype_proforma/taskeditor_fileref_row",{filenamelabel:"???"}).then((_ref=>{let{html:html,js:js}=_ref;return this.rowTemplateHtml=html,html}))}createTableString(className,mandatory){this.className=className,this.mandatory=mandatory}addItem(element){let table_body=element.closest("tbody"),label=table_body.find("label").first().html(),newRow=document.createElement("tr");return table_body.append(newRow),element.hide(),this.createRowFromTemplate().then((html=>(newRow.innerHTML=html,(0,_jquery.default)(newRow).find("label").first().hide(),(0,_jquery.default)(newRow).find("label").first().html(label),table_body.find("."+this.classRemoveItem).show(),table_body.find("."+this.classAddItem).hide(),(0,_jquery.default)(newRow).find("."+this.classAddItem).show(),(0,_jquery.default)(newRow))))}getPreviousItem(tr){return tr.prev("tr")}getItemCount(table_body){return table_body.find("tr").length}removeItem(element){let tr=element.parent().parent(),table_body=tr.closest("tbody"),previousRow=this.getPreviousItem(tr),hasNextTr=tr.nextAll("tr"),hasPrevTr=tr.prevAll("tr");tr.remove(),0===hasNextTr.length&&(console.log("row to be deleted is last row then add +-button to last row"),previousRow.find("."+this.classAddItem).show()),0===hasPrevTr.length&&(console.log("row to be deleted is first row => add filename label to first column"),table_body.find("label").first().show());table_body.find("tr")[0];1===this.getItemCount(table_body)&&(console.log("table has exactly one row left => hide all remove file buttons"),table_body.find("."+this.classRemoveItem).hide())}}}));

//# sourceMappingURL=dynamic-list.min.js.map