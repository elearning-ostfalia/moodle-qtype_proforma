define("qtype_proforma/taskeditor/file",["exports","jquery","./util","./config","./java","./filereflist","core/templates","../codemirror","core/notification","../clike","../python","../xml","core/str"],(function(_exports,_jquery,_util,taskeditorconfig,_java,_filereflist,_templates,CodeMirror,_notification,_clike,_python,_xml,Str){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Helper functions for zipping and unzipping task
   *
   * @package    qtype
   * @subpackage proforma
   * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @author     // This file is part of ProFormA Question Type for Moodle
   //
   // ProFormA Question Type for Moodle is free software:
   // you can redistribute it and/or modify
   // it under the terms of the GNU General Public License as published by
   // the Free Software Foundation, either version 3 of the License, or
   // (at your option) any later version.
   //
   // ProFormA Question Type for Moodle is distributed in the hope that it will be useful,
   // but WITHOUT ANY WARRANTY; without even the implied warranty of
   // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   // GNU General Public License for more details.
   //
   // You should have received a copy of the GNU General Public License
   // along with ProFormA Question Type for Moodle.
   // If not, see <http://www.gnu.org/licenses/>.
  
   /**
   * Classes for dealing with files
   *
   * @package    qtype
   * @subpackage proforma
   * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @author     eCULT-Team of Ostfalia University, K.Borm, Dr.U.Priss
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.fileStorages=_exports.fileIDs=_exports.codemirror=_exports.FileWrapper=_exports.FileStorage=void 0,_jquery=_interopRequireDefault(_jquery),taskeditorconfig=_interopRequireWildcard(taskeditorconfig),_templates=_interopRequireDefault(_templates),CodeMirror=_interopRequireWildcard(CodeMirror),_notification=_interopRequireWildcard(_notification),Str=_interopRequireWildcard(Str);var fileStorages=[];_exports.fileStorages=fileStorages;var fileIDs={};_exports.fileIDs=fileIDs;var codemirror={};_exports.codemirror=codemirror;class FileStorage{constructor(isBinary,mimetype,content,filename){this.isBinary=isBinary,this.mimetype=mimetype,this.content=content,this.originalFilename=this.filename=filename,this.storeAsFile=isBinary,this.byZipper=!1}setSize(size){this.size=size}setZipperFlag(){this.byZipper=!0}}_exports.FileStorage=FileStorage;class FileWrapper{static uploadFileWhenDropped(files,fileBox){if(files.length>1)return void alert("You have dragged more than one file. You must drop exactly one file!");const fileId=(0,_jquery.default)(fileBox).find(".xml_file_id").val();readAndCreateFileData(files[0],fileId)}static constructFromId(id){let file=new FileWrapper;if(file._root=(0,_jquery.default)("#file_"+id),0!==file.root.length)return file}static constructFromRoot(root){let file=new FileWrapper;return file._root=root,file}static constructFromFilename(filename){let file=new FileWrapper;if(_jquery.default.each((0,_jquery.default)(".xml_file_filename"),(function(index,item){filename===item.value&&(file._root=(0,_jquery.default)(item).first().parent())})),file._root)return file;console.error("FileWrapper.constructFromFilename cannot find root for filename "+filename)}getValue(member,xmlClass){return member||(member=this.root.find(xmlClass).first()),member.val()}get root(){return this._root}get id(){return this.getValue(this._id,".xml_file_id")}get filename(){return this.getValue(this._filename,".xml_file_filename")}get type(){return this.getValue(this._type,".xml_file_type")}get comment(){return this.getValue(this._comment,".xml_internal_description")}get mimetype(){return fileStorages[this.id].mimetype}get isBinary(){return fileStorages[this.id].isBinary}get storeAsFile(){return fileStorages[this.id].storeAsFile}get content(){return fileStorages[this.id].content}get size(){return this.isBinary?fileStorages[this.id].size:this.text.length}get originalFilename(){return fileStorages[this.id].originalFilename}get text(){return taskeditorconfig.useCodemirror?codemirror[this.id].getValue():this._root.find(".xml_file_text").val()}set text(newText){if(taskeditorconfig.useCodemirror){codemirror[this.id].setValue(newText);fileStorages[this.id];codemirror[this.id].setOption("mode",this.getCodemirrorMode())}else this._root.find(".xml_file_text").val(newText)}set filename(name){this._filename||(this._filename=this.root.find(".xml_file_filename").first()),this._filename.val(name),this.filenameHeader=name,fileStorages[this.id].filename=name,taskeditorconfig.useCodemirror&&(console.log("change mode depending on new filename"),codemirror[this.id].setOption("mode",this.getCodemirrorMode())),_filereflist.FileReferenceList.updateAllFilenameLists(this.id,name)}set filenameHeader(name){}set comment(newComment){this._root.find(".xml_internal_description").val(newComment)}set type(newType){this.type;switch(this._type||(this._type=this.root.find(".xml_file_type").first()),this._type.val(newType),this.isBinary&&this._type.attr("disabled","file"===newType),newType){case"file":this.root.find(".xml_file_binary").show(),this.root.find(".xml_file_non_binary").hide();let xml_file_size=this.root.find(".xml_file_size"),filesize=this.size;filesize=filesize?filesize.toLocaleString():"???",xml_file_size.first().text("File size: "+filesize+", File type: "+this.mimetype);break;case"embedded":this.root.find(".xml_file_binary").hide(),this.root.find(".xml_file_non_binary").show()}}set content(binaryFileContent){fileStorages[this.id].content=binaryFileContent}set mimetype(mimetype){fileStorages[this.id].mimetype=mimetype}set storeAsFile(storeAsFile){fileStorages[this.id].storeAsFile=storeAsFile}set originalFilename(filename){fileStorages[this.id].originalFilename=filename}set size(size){fileStorages[this.id].size=size}set isBinary(isBinary){fileStorages[this.id].isBinary=isBinary,isBinary&&console.log("set binary=true for "+this.filename)}delete(){this.root.remove(),delete fileIDs[this.id],_filereflist.FileReferenceList.updateAllFilenameLists(this.id)}getCodemirrorMode(){switch((0,_util.getExtension)(this.filename)){case"java":return"text/x-java";case"py":return"text/x-python";case"setlx":return"text/text";case"c":case"h":return"text/x-csrc";case"cpp":case"hpp":return"text/x-c++src";case"xml":return"application/xml";case"html":return"text/html";case"sql":return"text/x-sql";case"php":return"text/x-php";case"js":return"text/javascript";case"kt":return"text/java";case"css":return"text/css"}return""}static onFilenameChanged(ui_file){let changedId;if(ui_file){if("java"===(0,_util.getExtension)(ui_file.filename)){let text=ui_file.text;const actualFilename=ui_file.filename,expectedFilename=_java.javaParser.getFilenameWithPackage(text,actualFilename);expectedFilename!==actualFilename&&".java"!==expectedFilename&&Str.get_string("changejavafilename","qtype_proforma",expectedFilename).then((localtext=>{confirm(localtext)&&(ui_file.filename=expectedFilename)}))}ui_file.filenameHeader=ui_file.filename,changedId=ui_file.id,taskeditorconfig.useCodemirror&&codemirror[ui_file.id].setOption("mode",ui_file.getCodemirrorMode())}_filereflist.FileReferenceList.updateAllFilenameLists(changedId,ui_file.filename)}static doesFilenameExist(filename){let found=!1;return _jquery.default.each((0,_jquery.default)(".xml_file_filename"),(function(index,item){if(item.value===filename)return found=!0,!1})),found}static removeFile(button){let ui_file=FileWrapper.constructFromRoot(button.closest(".xml_file"));const filedata={id:ui_file.id,filename:ui_file.filename};_filereflist.FileReferenceList.getCountFileIdReferenced(ui_file.id)?Str.get_string("confirmdeletefile1","qtype_proforma",filedata).then((localtext=>{window.confirm(localtext)&&ui_file.delete()})):Str.get_string("confirmdeletefile2","qtype_proforma",filedata).then((localtext=>{window.confirm(localtext)&&ui_file.delete()}))}static showHideEditor(button,ui_file_no_button,show){let ui_file;if(ui_file=ui_file_no_button||FileWrapper.constructFromRoot(button.closest(".xml_file")),taskeditorconfig.useCodemirror){let editor=codemirror[ui_file.id];show?(0,_jquery.default)(editor.getWrapperElement()).show():(0,_jquery.default)(editor.getWrapperElement()).hide(),editor.refresh()}else show?ui_file.root.find(".xml_file_text").show():ui_file.root.find(".xml_file_text").hide();show?(ui_file.root.find(".xml_file_editor_close").show(),ui_file.root.find(".xml_file_edit").hide()):(ui_file.root.find(".xml_file_editor_close").hide(),ui_file.root.find(".xml_file_edit").show())}static showEditor(button,ui_file_no_button){FileWrapper.showHideEditor(button,ui_file_no_button,!0)}static hideEditor(button,ui_file_no_button){FileWrapper.showHideEditor(button,ui_file_no_button,!1)}static doOnAllFiles(callback){_jquery.default.each((0,_jquery.default)(".xml_file_id"),(function(indexOpt,item){let uifile=FileWrapper.constructFromId(item.value);callback(uifile)}))}static onFilenameChangedCallback(filenamebox){let ui_file=FileWrapper.constructFromRoot((0,_jquery.default)(filenamebox).closest(".xml_file"));FileWrapper.onFilenameChanged(ui_file)}static onFiletypeChanged(selectfield){if(selectfield){let ui_file=FileWrapper.constructFromRoot((0,_jquery.default)(selectfield).closest(".xml_file"));const newtype=ui_file.type;if("file"===newtype){const fileId=ui_file.id,filename=ui_file.filename,text=ui_file.text;"TextEncoder"in window||alert("Sorry, this browser does not support TextEncoder...");let enc=new TextEncoder("utf-8"),fileobject=fileStorages[fileId];fileobject||(fileobject=new FileStorage(!0,"","",filename),fileStorages[fileId]=fileobject),(0,_util.getExtension)(fileobject.filename)!==(0,_util.getExtension)(filename)&&(fileobject.mimetype="",fileobject.filename=filename),fileobject.storeAsFile=!0,fileobject.content=enc.encode(text),fileobject.setSize(text.length)}ui_file.type=newtype}}static addCodemirrorElement(cmID){let langmode=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"text/x-java";codemirror[cmID]=CodeMirror.fromTextArea(FileWrapper.constructFromId(cmID).root.find(".xml_file_text")[0],{mode:langmode,indentUnit:4,lineNumbers:!0,matchBrackets:!0,tabMode:"shift",styleActiveLine:!0,autoCloseBrackets:!0,dragDrop:!1});let editor=codemirror[cmID];(0,_jquery.default)(editor.getWrapperElement()).resizable({handles:"s",resize:function(){editor.refresh()}}),editor.on("drop",(function(editor,e){console.log("codemirror drop: "+e)}))}static createFromTemplate(id){let fileid=id;fileid?fileIDs[fileid]=1:fileid=(0,_util.setcounter)(fileIDs);let context={fileid:fileid,filesize:"???"};return _templates.default.renderForPromise("qtype_proforma/taskeditor_file",context).then((_ref=>{let{html:html,js:js}=_ref;_templates.default.appendNodeContents("#proforma-files-section",html,js);let ui_file=FileWrapper.constructFromId(fileid);return void 0===fileStorages[fileid]&&(fileStorages[fileid]=new FileStorage(!1,"","","")),ui_file.root.find(".xml_file_binary").hide(),_util.DEBUG_MODE||(ui_file.root.find(".xml_file_id").hide(),ui_file.root.find("label[for='xml_file_id']").hide(),ui_file.root.find(".xml_file_class").hide(),ui_file.root.find("label[for='xml_file_class']").hide()),ui_file.root.find("button").first().on("click",(function(event){event.preventDefault(),FileWrapper.removeFile((0,_jquery.default)(this))})),ui_file.root.find(".xml_file_filename").on("change",(function(event){event.preventDefault(),FileWrapper.onFilenameChangedCallback(this)})),ui_file.root.find(".xml_file_type").on("change",(function(event){event.preventDefault(),FileWrapper.onFiletypeChanged(this)})),ui_file.root.find(".xml_file_edit").on("click",(function(event){event.preventDefault(),FileWrapper.showEditor((0,_jquery.default)(this))})),ui_file.root.find(".xml_file_editor_close").on("click",(function(event){event.preventDefault(),FileWrapper.hideEditor((0,_jquery.default)(this))})),ui_file.root.on({dragover:function(e){e.preventDefault(),e.stopPropagation()},dragenter:function(e){e.preventDefault(),e.stopPropagation()},drop:function(e){e.originalEvent.dataTransfer&&e.originalEvent.dataTransfer.files.length&&(e.preventDefault(),e.stopPropagation(),FileWrapper.uploadFileWhenDropped(e.originalEvent.dataTransfer.files,e.currentTarget))}}),FileWrapper.addCodemirrorElement(fileid,ui_file.getCodemirrorMode()),FileWrapper.hideEditor(void 0,ui_file),ui_file})).catch((error=>{(0,_notification.exception)(error)}))}}_exports.FileWrapper=FileWrapper}));

//# sourceMappingURL=file.min.js.map