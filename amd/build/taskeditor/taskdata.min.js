define("qtype_proforma/taskeditor/taskdata",["exports","./helper","./config","./file"],(function(_exports,_helper,taskeditorconfig,_file){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.TaskTest=_exports.TaskModelSolution=_exports.TaskFileRestriction=_exports.TaskFileRef=_exports.TaskFile=_exports.TaskClass=_exports.T_VISIBLE=_exports.T_LMS_USAGE=_exports.T_FILERESTRICTION_FORMAT=void 0,taskeditorconfig=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}
/**
  * Helper functions for reading and writen task
  *
  * @package    qtype
  * @subpackage proforma
  * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften
  * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  * @author     eCULT-Team of Ostfalia University, K.Borm
  */(taskeditorconfig);const T_LMS_USAGE={DISPLAY:"display",DOWNLOAD:"download",EDIT:"edit"};_exports.T_LMS_USAGE=T_LMS_USAGE;const T_VISIBLE={YES:"yes",NO:"no",DELAYED:"delayed"};_exports.T_VISIBLE=T_VISIBLE;_exports.T_FILERESTRICTION_FORMAT={POSIX:"posix-ere",NONE:"none"};class XmlReader{constructor(xmlText){if(this.xmlDoc=(new DOMParser).parseFromString(xmlText,"text/xml"),!this.xmlDoc.evaluate)return void alert("XPATH not supported");this.defaultns=this.xmlDoc.lookupNamespaceURI(null),this.rootNode=this.xmlDoc;const defaultns=this.defaultns;this.nsResolver=function(prefix){return"dns"===prefix?defaultns:taskeditorconfig.resolveNamespace(prefix,defaultns)}}setRootNode(node){this.rootNode=node}readSingleNode(xpath,node){let contextNode=node||this.rootNode;if(!contextNode)return console.error("No node for "+xpath),null;return this.xmlDoc.evaluate(xpath,contextNode,this.nsResolver,XPathResult.UNORDERED_NODE_ITERATOR_TYPE,null).iterateNext()}readSingleText(xpath,node,defaultValue){const nodes=this.xmlDoc.evaluate(xpath,node||this.rootNode,this.nsResolver,XPathResult.FIRST_ORDERED_NODE_TYPE,null);return nodes.singleNodeValue?nodes.singleNodeValue.textContent.trim():void 0!==defaultValue?defaultValue:null}readNodes(xpath,node){return this.xmlDoc.evaluate(xpath,node||this.rootNode,this.nsResolver,XPathResult.UNORDERED_NODE_ITERATOR_TYPE,null)}}class XmlWriter{constructor(xmlDoc,ns){this.xmlDoc=xmlDoc,this.ns=ns}createCDataElement(node,tag,value){let ns=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0,newTag=this.xmlDoc.createElementNS(ns||this.ns,tag);return newTag.appendChild(this.xmlDoc.createCDATASection(value)),node.appendChild(newTag),newTag}createTextElement(node,tag,value){let ns=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0,cdata=arguments.length>4&&void 0!==arguments[4]&&arguments[4],newTag=this.xmlDoc.createElementNS(ns||this.ns,tag);if(cdata)throw newTag.appendChild(this.xmlDoc.createCDATASection(value)),new SyntaxError("cdata not supported, use createCDataElement");return newTag.appendChild(this.xmlDoc.createTextNode(value)),node.appendChild(newTag),newTag}createOptionalTextElement(node,tag,value){let ns=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0,cdata=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(cdata)throw new SyntaxError("cdata not supported, use createOptionalTextElement");if(""!==value)return this.createTextElement(node,tag,value,ns,cdata)}createOptionalCDataElement(node,tag,value){let ns=arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0;if(""!==value)return this.createCDataElement(node,tag,value,ns)}}class TaskFileRef{constructor(id){this.refid=id}}_exports.TaskFileRef=TaskFileRef;class TaskFile{constructor(){this.filename="",this.usedByGrader=!1,this.usageInLms=null,this.visible=T_VISIBLE.NO,this.id=null,this.filetype=null,this.comment=null,this.content=null,this.binary=null}}_exports.TaskFile=TaskFile;class TaskFileRestriction{constructor(filename,required,format){this.restriction=filename,this.required=required,this.format=format}}_exports.TaskFileRestriction=TaskFileRestriction;class TaskModelSolution{constructor(){this.id=null,this.description="",this.comment="",this.filerefs=[]}}_exports.TaskModelSolution=TaskModelSolution;class TaskTest{constructor(){this.id=null,this.title=null,this.description="",this.comment="",this.testtype=null,this.filerefs=[],this.writeCallback=null,this.uiElement=null,this.framework=null}}_exports.TaskTest=TaskTest;_exports.TaskClass=class{constructor(){this.title="",this.description="",this.comment="",this.proglang="",this.proglangVersion="",this.parentuuid=null,this.uuid=null,this.lang="de",this.sizeSubmission=0,this.filenameRegExpSubmission="",this.codeskeleton="",this.fileRestrictions=[],this.files=[],this.modelsolutions=[],this.tests=[],this.gradinghints=[]}findFilenameForId(id){let filename;return this.files.forEach((function(item){item.id===id&&(filename=item.filename)})),filename}readTestConfig(xmlfile,testid,configItem,context){try{let xmlReader=new XmlReader(xmlfile);const textnode=xmlReader.readSingleNode('/dns:task/dns:tests/dns:test[@id="'+testid+'"]');if(!textnode)throw new Error('XML: Missing node for test "'+testid+'" under task/tests');xmlReader.setRootNode(textnode);let configNodeNode=xmlReader.readSingleNode("dns:test-configuration");if(!configNodeNode)throw new Error('XML: Missing node for test-configuration under test "'+testid+'"');configItem.onReadXml(this.tests[testid],xmlReader,configNodeNode,context)}catch(err){console.error(err);alert("Error while parsing test configuration in xml file:\n\n"+err)}}readXmlVersion101(xmlfile){let template_id=null,template_referenced=!1;function readFileRefs(xmlReader,element,thisNode,visibility,task){let fileRefIterator=xmlReader.readNodes("dns:filerefs/dns:fileref",thisNode),fileRefNode=fileRefIterator.iterateNext(),counter=0;for(;fileRefNode;){let fileRef=new TaskFileRef;if(fileRef.refid=xmlReader.readSingleText("@refid",fileRefNode),template_id&&template_id===fileRef.refid&&(template_referenced=!0),element.filerefs[counter++]=fileRef,fileRefNode=fileRefIterator.iterateNext(),null!=visibility)switch(task.files[fileRef.refid].visible){case T_VISIBLE.NO:task.files[fileRef.refid].visible=visibility;break;case T_VISIBLE.YES:break;case T_VISIBLE.DELAYED:visibility===T_VISIBLE.YES&&(task.files[fileRef.refid].visible=visibility)}}}try{let xmlReader=new XmlReader(xmlfile);xmlReader.setRootNode(xmlReader.readSingleNode("/dns:task")),this.title=xmlReader.readSingleText("dns:meta-data/dns:title"),this.description=xmlReader.readSingleText("dns:description"),this.proglang=xmlReader.readSingleText("dns:proglang"),this.proglangVersion=xmlReader.readSingleText("dns:proglang/@version"),this.uuid=xmlReader.readSingleText("@uuid"),this.lang=xmlReader.readSingleText("@lang"),this.sizeSubmission=xmlReader.readSingleText("dns:submission-restrictions/dns:regexp-restriction/@max-size"),""!==this.sizeSubmission&&(this.sizeSubmission=1e3*this.sizeSubmission);let iterator=xmlReader.readNodes("dns:files/dns:file"),thisNode=iterator.iterateNext();for(;thisNode;){let taskfile=new TaskFile;taskfile.id=xmlReader.readSingleText("@id",thisNode);switch(xmlReader.readSingleText("@class",thisNode)){case"internal":case"internal-library":taskfile.usedByGrader=!0,taskfile.usageInLms=null,taskfile.visible=T_VISIBLE.NO;break;case"template":""===this.codeskeleton?(template_id=taskfile.id,this.codeskeleton=thisNode.textContent,taskfile.usedByGrader=!1,taskfile.usageInLms=T_LMS_USAGE.EDIT,taskfile.visible=T_VISIBLE.YES):(taskfile.usedByGrader=!1,taskfile.usageInLms=T_LMS_USAGE.DOWNLOAD,taskfile.visible=T_VISIBLE.YES);break;case"instruction":taskfile.usedByGrader=!1,taskfile.usageInLms=T_LMS_USAGE.DOWNLOAD,taskfile.visible=T_VISIBLE.YES;break;case"library":taskfile.usedByGrader=!0,taskfile.usageInLms=T_LMS_USAGE.DOWNLOAD,taskfile.visible=T_VISIBLE.YES}taskfile.comment=xmlReader.readSingleText("@comment",thisNode),taskfile.filetype=xmlReader.readSingleText("@type",thisNode),taskfile.filename=xmlReader.readSingleText("@filename",thisNode),taskfile.content=thisNode.textContent,this.files[taskfile.id]=taskfile,thisNode=iterator.iterateNext()}for(iterator=xmlReader.readNodes("dns:model-solutions/dns:model-solution"),thisNode=iterator.iterateNext();thisNode;){let modelSolution=new TaskModelSolution;modelSolution.id=xmlReader.readSingleText("@id",thisNode),modelSolution.comment=xmlReader.readSingleText("@comment",thisNode),readFileRefs(xmlReader,modelSolution,thisNode,T_VISIBLE.DELAYED,this),this.modelsolutions[modelSolution.id]=modelSolution,thisNode=iterator.iterateNext()}iterator=xmlReader.readNodes("dns:tests/dns:test"),thisNode=iterator.iterateNext();let counter=0;for(;thisNode;){let test=new TaskTest;test.id=xmlReader.readSingleText("@id",thisNode),test.title=xmlReader.readSingleText("dns:title",thisNode),test.testtype=xmlReader.readSingleText("dns:test-type",thisNode);let configIterator=xmlReader.readNodes("dns:test-configuration",thisNode);readFileRefs(xmlReader,test,configIterator.iterateNext()),this.tests[counter]=test,counter++,thisNode=iterator.iterateNext()}template_referenced||delete this.files[template_id]}catch(err){(0,_helper.setErrorMessage)("Error while parsing the xml file. The file has not been imported.",err)}}readXmlVersion2(xmlfile){function readFileRefs(xmlReader,element,thisNode){let fileRefIterator=xmlReader.readNodes("dns:filerefs/dns:fileref",thisNode),fileRefNode=fileRefIterator.iterateNext(),counter=0;for(;fileRefNode;){let fileRef=new TaskFileRef;fileRef.refid=xmlReader.readSingleText("@refid",fileRefNode),element.filerefs[counter++]=fileRef,fileRefNode=fileRefIterator.iterateNext()}}try{let xmlReader=new XmlReader(xmlfile);xmlReader.setRootNode(xmlReader.readSingleNode("/dns:task")),this.title=xmlReader.readSingleText("dns:title"),this.description=xmlReader.readSingleText("dns:description"),this.comment=xmlReader.readSingleText("dns:internal-description"),this.proglang=xmlReader.readSingleText("dns:proglang"),this.proglangVersion=xmlReader.readSingleText("dns:proglang/@version"),this.uuid=xmlReader.readSingleText("@uuid"),this.lang=xmlReader.readSingleText("@lang"),this.sizeSubmission=xmlReader.readSingleText("dns:submission-restrictions/@max-size");let iterator=xmlReader.readNodes("dns:submission-restrictions/dns:file-restriction"),thisNode=iterator.iterateNext(),editCounter=0;for(;thisNode;){this.fileRestrictions[editCounter++]=new TaskFileRestriction(thisNode.textContent,"true"===xmlReader.readSingleText("@required",thisNode,"true"),xmlReader.readSingleText("@pattern-format",thisNode));thisNode=iterator.iterateNext()}for(iterator=xmlReader.readNodes("dns:files/dns:file"),thisNode=iterator.iterateNext(),editCounter=0;thisNode;){let taskfile=new TaskFile;taskfile.id=xmlReader.readSingleText("@id",thisNode),taskfile.usedByGrader="yes"===xmlReader.readSingleText("@used-by-grader",thisNode),taskfile.usageInLms=xmlReader.readSingleText("@usage-by-lms",thisNode),taskfile.visible=xmlReader.readSingleText("@visible",thisNode),taskfile.comment=xmlReader.readSingleText("dns:internal-description",thisNode);let content=xmlReader.readSingleNode("*",thisNode);if(content)switch(content.nodeName){case"embedded-txt-file":taskfile.filetype="embedded",taskfile.filename=xmlReader.readSingleText("@filename",content),taskfile.content=content.textContent,taskfile.binary=!1;break;case"embedded-bin-file":taskfile.filetype="file",taskfile.filename=xmlReader.readSingleText("@filename",content);const filecontent=(encoded=content.textContent,Uint8Array.from(atob(encoded),(c=>c.charCodeAt(0))));taskfile.content=filecontent,taskfile.binary=!0;const mimetype=(0,_helper.getMimeType)("",taskfile.filename);let fileObject=new _file.FileStorage(!0,mimetype,filecontent,taskfile.filename);fileObject.setSize(filecontent.length),_file.fileStorages[taskfile.id]=fileObject;break;case"attached-bin-file":taskfile.filetype="file",taskfile.filename=content.textContent,taskfile.binary=!0;break;default:(0,_helper.setErrorMessage)("Unknown file type for file #".taskfile.id)}else(0,_helper.setErrorMessage)("No file content for file #".taskfile.id);xmlReader.readSingleText("@usage-by-lms",thisNode);taskfile.usageInLms===T_LMS_USAGE.EDIT?(0===editCounter?this.codeskeleton=taskfile.content:this.files[taskfile.id]=taskfile,editCounter++):this.files[taskfile.id]=taskfile,thisNode=iterator.iterateNext()}for(iterator=xmlReader.readNodes("dns:model-solutions/dns:model-solution"),thisNode=iterator.iterateNext();thisNode;){let modelSolution=new TaskModelSolution;modelSolution.id=xmlReader.readSingleText("@id",thisNode),modelSolution.description=xmlReader.readSingleText("dns:description",thisNode),modelSolution.comment=xmlReader.readSingleText("dns:internal-description",thisNode),readFileRefs(xmlReader,modelSolution,thisNode),this.modelsolutions[modelSolution.id]=modelSolution,thisNode=iterator.iterateNext()}iterator=xmlReader.readNodes("dns:tests/dns:test"),thisNode=iterator.iterateNext();let counter=0;for(;thisNode;){let test=new TaskTest;test.id=xmlReader.readSingleText("@id",thisNode),test.title=xmlReader.readSingleText("dns:title",thisNode),test.description=xmlReader.readSingleText("dns:description",thisNode),test.comment=xmlReader.readSingleText("dns:internal-description",thisNode),test.testtype=xmlReader.readSingleText("dns:test-type",thisNode);let configNode=xmlReader.readNodes("dns:test-configuration",thisNode).iterateNext();if("unittest"===test.testtype.toLowerCase()){let unitNode=xmlReader.readSingleNode("unit:unittest",configNode);if(unitNode){let framework=xmlReader.readSingleText("@framework",unitNode);framework&&(test.framework=framework)}}readFileRefs(xmlReader,test,configNode),this.tests[counter]=test,counter++,thisNode=iterator.iterateNext()}const gradingfunction=xmlReader.readSingleText("dns:grading-hints/dns:root/@function");for(gradingfunction&&"sum"!==gradingfunction&&(0,_helper.setErrorMessage)("Grading hints function "+gradingfunction+" is not supported"),iterator=xmlReader.readNodes("dns:grading-hints/dns:root/dns:test-ref"),thisNode=iterator.iterateNext();thisNode;){const id=xmlReader.readSingleText("@ref",thisNode);this.tests.forEach((function(test){test.id===id&&(test.weight=xmlReader.readSingleText("@weight",thisNode))})),thisNode=iterator.iterateNext()}}catch(err){(0,_helper.setErrorMessage)("Error while parsing the xml file. The file has not been imported.",err)}var encoded}readXml(xmlfile){let xmlReader=new XmlReader(xmlfile);switch(xmlReader.defaultns){case"urn:proforma:task:v1.0.1":return this.readXmlVersion101(xmlfile);case"urn:proforma:v2.0":return this.readXmlVersion2(xmlfile);default:(0,_helper.setErrorMessage)("Unsupported ProFormA version "+xmlReader.defaultns)}}writeXml(topLevelDoc,rootNode){console.log("*** TaskClass.writeXml");let xmlDoc=null,files=null,fileRestrictions=null,modelsolutions=null,tests=null,gradingRoot=null,xmlWriter=null;const xmlns="urn:proforma:v2.0";let task=null;try{xmlDoc=document.implementation.createDocument(xmlns,"task",null),task=xmlDoc.documentElement,task.setAttribute("lang",this.lang),task.setAttribute("uuid",this.uuid),xmlWriter=new XmlWriter(xmlDoc,xmlns),xmlWriter.createTextElement(task,"title",this.title),xmlWriter.createCDataElement(task,"description",this.description),xmlWriter.createOptionalCDataElement(task,"internal-description",this.comment),xmlWriter.createTextElement(task,"proglang",this.proglang).setAttribute("version",this.proglangVersion),fileRestrictions=xmlDoc.createElementNS(xmlns,"submission-restrictions"),this.sizeSubmission&&fileRestrictions.setAttribute("max-size",this.sizeSubmission),task.appendChild(fileRestrictions),this.fileRestrictions.forEach((function(item,index){let fileElem=xmlWriter.createOptionalTextElement(fileRestrictions,"file-restriction",item.restriction,xmlns);item.required||fileElem.setAttribute("required",item.required),item.format&&fileElem.setAttribute("pattern-format",item.format)})),files=xmlDoc.createElementNS(xmlns,"files"),task.appendChild(files),function(task,id){if(task.codeskeleton){let fileElem=xmlDoc.createElementNS(xmlns,"file");fileElem.setAttribute("id",id),fileElem.setAttribute("used-by-grader","false"),fileElem.setAttribute("usage-by-lms",T_LMS_USAGE.EDIT),fileElem.setAttribute("visible",T_VISIBLE.YES),files.appendChild(fileElem);let fileContentElem=xmlDoc.createElementNS(xmlns,"embedded-txt-file");fileContentElem.setAttribute("filename","code.txt"),fileContentElem.appendChild(xmlDoc.createCDATASection(task.codeskeleton)),fileElem.appendChild(fileContentElem),xmlWriter.createOptionalTextElement(fileElem,"internal-description","Code Skeleton for Editor")}}(this,"codeskeleton"),this.files.forEach((function(item,index){let fileElem=xmlDoc.createElementNS(xmlns,"file");if(fileElem.setAttribute("id",item.id),fileElem.setAttribute("used-by-grader",item.usedByGrader),item.usageInLms&&fileElem.setAttribute("usage-by-lms",item.usageInLms),fileElem.setAttribute("visible",item.visible),files.appendChild(fileElem),"embedded"===item.filetype){let fileContentElem=xmlDoc.createElementNS(xmlns,"embedded-txt-file");fileContentElem.setAttribute("filename",item.filename),fileContentElem.appendChild(xmlDoc.createCDATASection(item.content)),fileElem.appendChild(fileContentElem)}else xmlWriter.createTextElement(fileElem,"attached-bin-file",item.filename);xmlWriter.createOptionalTextElement(fileElem,"internal-description",item.comment)})),modelsolutions=xmlDoc.createElementNS(xmlns,"model-solutions"),task.appendChild(modelsolutions),this.modelsolutions.forEach((function(item,index){let msElem=xmlDoc.createElementNS(xmlns,"model-solution");msElem.setAttribute("id",item.id),modelsolutions.appendChild(msElem);let filerefs=xmlDoc.createElementNS(xmlns,"filerefs");msElem.appendChild(filerefs),item.filerefs.forEach((function(file,index){if(file.refid){let fileref=xmlDoc.createElementNS(xmlns,"fileref");fileref.setAttribute("refid",file.refid),filerefs.appendChild(fileref)}})),0===filerefs.getElementsByTagName("fileref").length&&msElem.removeChild(filerefs),xmlWriter.createOptionalTextElement(msElem,"description",item.description),xmlWriter.createOptionalTextElement(msElem,"internal-description",item.comment)})),tests=xmlDoc.createElementNS(xmlns,"tests"),task.appendChild(tests);this.tests.length;this.tests.forEach((function(item,index){console.log("*** TaskClass.writeTest"),console.log(item);let testElem=xmlDoc.createElementNS(xmlns,"test");testElem.setAttribute("id",item.id),xmlWriter.createTextElement(testElem,"title",item.title),xmlWriter.createOptionalTextElement(testElem,"description",item.description),xmlWriter.createOptionalTextElement(testElem,"internal-description",item.comment),xmlWriter.createTextElement(testElem,"test-type",item.testtype);let config=xmlDoc.createElementNS(xmlns,"test-configuration");testElem.appendChild(config);let filerefs=xmlDoc.createElementNS(xmlns,"filerefs");config.appendChild(filerefs),item.filerefs.forEach((function(file,index){if(file.refid){let fileref=xmlDoc.createElementNS(xmlns,"fileref");fileref.setAttribute("refid",file.refid),filerefs.appendChild(fileref)}})),0===filerefs.getElementsByTagName("fileref").length&&config.removeChild(filerefs),tests.appendChild(testElem),item.configItem&&(console.log("*** item.configItem.onWriteXml"),item.configItem.onWriteXml(item,config,xmlDoc,xmlWriter,task))}));let gradinghints=xmlDoc.createElementNS(xmlns,"grading-hints");task.appendChild(gradinghints),gradingRoot=xmlDoc.createElementNS(xmlns,"root"),gradingRoot.setAttribute("function","sum"),gradinghints.appendChild(gradingRoot),this.tests.forEach((function(item,index){let testElem=xmlDoc.createElementNS(xmlns,"test-ref");testElem.setAttribute("weight",item.weight),testElem.setAttribute("ref",item.id),gradingRoot.appendChild(testElem)}));let metadata=xmlDoc.createElementNS(xmlns,"meta-data");task.appendChild(metadata);let result=(new XMLSerializer).serializeToString(xmlDoc);"<?xml"!==result.substring(0,5)&&(result='<?xml version="1.0"?>'+result);let xsds=["xsd/proforma.xsd"];return xsds=xsds.concat(taskeditorconfig.xsds),result}catch(err){return(0,_helper.setErrorMessage)("Error creating task xml file.",err),""}}}}));

//# sourceMappingURL=taskdata.min.js.map