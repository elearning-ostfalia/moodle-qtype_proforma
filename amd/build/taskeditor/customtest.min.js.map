{"version":3,"file":"customtest.min.js","sources":["../../src/taskeditor/customtest.js"],"sourcesContent":["// This file is part of ProFormA Question Type for Moodle\n//\n// ProFormA Question Type for Moodle is free software:\n// you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// ProFormA Question Type for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with ProFormA Question Type for Moodle.\n// If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Base class for configuration classes\n *\n * @package    qtype\n * @subpackage proforma\n * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author     eCULT-Team of Ostfalia University, Dr.U.Priss, K.Borm\n */\n\n//////////////////////////////////////////////////////////////////////////////\n// configuration support\n//////////////////////////////////////////////////////////////////////////////\n\nexport class CustomTest {\n\n    constructor(title, testType, template, proglang) {\n        this.defaultTitle = title;\n        this.title = title; // title in html output\n        this.testType = testType; // test type in XML\n        this.helptext = undefined; // help text for this test\n        this.entrypointhelp = undefined;\n        if (template) {\n            this.mustacheTemplate = template; // html extra input elements\n        } else {\n            this.mustacheTemplate = 'qtype_proforma/taskeditor_test';\n        }\n        this.proglang = proglang; // array of programming languages that the test can be used with\n\n        this.withFileRef = true; // default: with test script(s)\n\n        this.gradingWeight = 1; // default weight\n\n        // this.fileRefLabel = 'File'; // default label\n        this.manadatoryFile = true;\n        this.alternativeTesttypes = [];\n\n        // derived member variables\n        const compactName = title.replace(/ /g, \"\");\n        this.xmlTemplateName = compactName;\n        this.buttonJQueryId = \"add\" + compactName;\n        this.frameworkRequired = false;\n        this.framework = undefined;\n        this.frameworks = undefined;\n    }\n\n    matches(item, proglang) {\n        if (this.testType !== item.testtype) {\n            return false;\n        }\n        // Check if proglang is set in configured test. If true then compare\n        if (this.proglang !== undefined) {\n            if (!this.proglang.includes(proglang)) {\n                // Language does not match\n                return false;\n            }\n        }\n        // Distinguish between CUnit and Google test with C++ by framework\n        if (this.frameworks !== undefined && item.framework !== undefined) {\n            if (!this.frameworks.includes(item.framework.toLowerCase())) {\n                // console.log(item.framework + ' is not in ')\n                // console.log(configItem.frameworks);\n                // Framework does not match\n                return false;\n            }\n        }\n        return true;\n    }\n    // override\n    onCreate(testId) {}\n    onReadXml(test, xmlReader, testConfigNode, context) {}\n    onWriteXml(test, testConfigNode, xmlDoc, xmlWriter, task) {}\n    getFramework() {return undefined;}\n    getMustacheTemplate() { return this.mustacheTemplate; }\n\n    getTemplateContext() {\n        let result = {\n            'testtitle' : this.title,\n            // 'filenamelabel' : this.fileRefLabel,\n            'testtype': this.testType,\n            'testheader': this.defaultTitle,\n            'filemandatory': this.manadatoryFile,\n            'weight': this.gradingWeight,\n/*            'info': {\n                \"text\": this.helptext\n            }*/\n        };\n        if (this.helptext) {\n            result['info'] = {\n                \"text\": this.helptext\n            };\n        }\n        if (this.framework) {\n            result['framework'] = this.framework;\n        }\n        if (this.frameworkRequired) {\n            result['framework_version'] = {\n                \"selected\": true,\n                \"value\": '',\n                \"name\": ''\n            };\n        }\n        if (this.entrypointhelp) {\n            result['entrypointinfo'] = {\n                \"text\": this.entrypointhelp\n            };\n        }\n        return result;\n    }\n}\n\n"],"names":["constructor","title","testType","template","proglang","defaultTitle","helptext","undefined","entrypointhelp","mustacheTemplate","withFileRef","gradingWeight","manadatoryFile","alternativeTesttypes","compactName","replace","xmlTemplateName","buttonJQueryId","frameworkRequired","framework","frameworks","matches","item","this","testtype","includes","toLowerCase","onCreate","testId","onReadXml","test","xmlReader","testConfigNode","context","onWriteXml","xmlDoc","xmlWriter","task","getFramework","getMustacheTemplate","getTemplateContext","result"],"mappings":";;;;;;;;;;MAiCIA,YAAYC,MAAOC,SAAUC,SAAUC,eAC9BC,aAAeJ,WACfA,MAAQA,WACRC,SAAWA,cACXI,cAAWC,OACXC,oBAAiBD,OAEbE,iBADLN,UAGwB,sCAEvBC,SAAWA,cAEXM,aAAc,OAEdC,cAAgB,OAGhBC,gBAAiB,OACjBC,qBAAuB,SAGtBC,YAAcb,MAAMc,QAAQ,KAAM,SACnCC,gBAAkBF,iBAClBG,eAAiB,MAAQH,iBACzBI,mBAAoB,OACpBC,eAAYZ,OACZa,gBAAab,EAGtBc,QAAQC,KAAMlB,iBACNmB,KAAKrB,WAAaoB,KAAKE,kBAILjB,IAAlBgB,KAAKnB,WACAmB,KAAKnB,SAASqB,SAASrB,mBAMRG,IAApBgB,KAAKH,iBAA+Cb,IAAnBe,KAAKH,YACjCI,KAAKH,WAAWK,SAASH,KAAKH,UAAUO,iBAUrDC,SAASC,SACTC,UAAUC,KAAMC,UAAWC,eAAgBC,UAC3CC,WAAWJ,KAAME,eAAgBG,OAAQC,UAAWC,OACpDC,gBACAC,6BAA+BhB,KAAKd,iBAEpC+B,yBACQC,OAAS,WACKlB,KAAKtB,eAEPsB,KAAKrB,oBACHqB,KAAKlB,2BACFkB,KAAKX,sBACZW,KAAKZ,sBAKfY,KAAKjB,WACLmC,OAAM,KAAW,MACLlB,KAAKjB,WAGjBiB,KAAKJ,YACLsB,OAAM,UAAgBlB,KAAKJ,WAE3BI,KAAKL,oBACLuB,OAAM,kBAAwB,WACd,QACH,QACD,KAGZlB,KAAKf,iBACLiC,OAAM,eAAqB,MACflB,KAAKf,iBAGdiC"}