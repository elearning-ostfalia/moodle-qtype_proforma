define("qtype_proforma/taskeditor/task",["exports","jquery","./taskdata","./test","./helper","./file","./modelsol","./config","./zipper","./filereflist","core/str","core/notification"],(function(_exports,_jquery,_taskdata,_test,_helper,_file,_modelsol,taskeditorconfig,_zipper,_filereflist,Str,_notification){var obj;
/**
  * Helper functions for reading and writen task
  *
  * @package    qtype
  * @subpackage proforma
  * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften
  * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  * @author     eCULT-Team of Ostfalia University, K.Borm
  */function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.InputError=void 0,_exports.convertToXML=function(){return Promise.resolve(0).then((()=>{const t0=performance.now();let taskXml;if((0,_helper.clearErrorMessage)(),!function(){console.log("check input"),document.querySelectorAll(".proforma-taskeditor .is-invalid").forEach((item=>{item.classList.remove("is-invalid"),item.classList.remove("form-control")})),document.querySelectorAll(".proforma-taskeditor .invalid-feedback").forEach((item=>{item.remove()}));let incomplete=!1;const inputField=document.querySelector("#id_name");if(""===inputField.value.trim()){let header=document.querySelector('a[href="#id_generalheadercontainer"]');header&&"false"===header.getAttribute("aria-expanded")&&header.click(),addRequired(inputField),incomplete=!0}if(document.querySelectorAll(".xml_test").length<1)return Str.get_string("errmissingtest","qtype_proforma").then((localtext=>{alert(localtext)})),!1;if(document.querySelector("#id_responseformat")){const format=document.querySelector("#id_responseformat").value;if(console.log(format),"editor"===format){const filename=document.querySelector("#id_responsefilename");filename?(console.log(filename.value),""===filename.value.trim()&&(addRequired(filename),incomplete=!0)):console.error("cannot find response filename")}}else console.error("cannot find response format select");document.querySelectorAll(".xml_file_filename").forEach((item=>{item.value||(switchToTab("#proforma-files-section"),addRequired(item),incomplete=!0)})),document.querySelectorAll(".xml_test_title").forEach((item=>{item.value||(switchToTab("#proforma-tests-section"),addRequired(item),incomplete=!0)}));let query="#proforma-model-solution-section .xml_fileref_filename";if(document.querySelectorAll(query).forEach((item=>{item.value||(switchToTab("#proforma-model-solution-section"),addRequired(item),incomplete=!0)})),document.querySelectorAll("#proforma-tests-section .xml_test_weight").forEach((item=>{item.value||(switchToTab("#proforma-tests-section"),addRequired(item),incomplete=!0)})),query="#proforma-tests-section .xml_fileref_filename",document.querySelectorAll(query).forEach((item=>{if(!item.value){0!==item.closest("tr").querySelector("label").querySelectorAll(".red").length&&(switchToTab("#proforma-tests-section"),addRequired(item),incomplete=!0)}})),_jquery.default.each((0,_jquery.default)(".xml_entry_point"),(function(index,item){item.value||(switchToTab("#proforma-tests-section"),addRequired(item),incomplete=!0)})),document.querySelectorAll(".xml_pr_CS_warnings").forEach((item=>{item.value||(switchToTab("#proforma-tests-section"),addRequired(item),incomplete=!0)})),incomplete)return!1;let sumweight=0;document.querySelectorAll("#proforma-tests-section .xml_test_weight").forEach((item=>{sumweight+=parseFloat(item.value)})),console.log("sumweight = "+sumweight),sumweight<=0&&(Str.get_string("sumweightzero","qtype_proforma").then((content=>{switchToTab("#proforma-tests-section"),alert(content)})),incomplete=!0);return!incomplete}())throw console.log("input is incomplete => cannot create task.xml"),new InputError("invalid input => cannot create task.xml");console.log("input is ok => create task.xml");let task=new _taskdata.TaskClass;task.title=(0,_jquery.default)("#id_name").val(),task.comment="",task.description=(0,_jquery.default)("#id_questiontexteditable").val(),task.proglang=(0,_jquery.default)("#xml_programming-language").val(),task.proglang=task.proglang.trim(),task.proglangVersion=(0,_jquery.default)("#xml_programming-language-"+task.proglang).val(),task.parentuuid=null,task.uuid=(0,_helper.generateUUID)(),task.lang="en",task.sizeSubmission=0,task.filenameRegExpSubmission="",_file.FileWrapper.doOnAllFiles((function(ui_file){let taskfile=new _taskdata.TaskFile;taskfile.filename=ui_file.filename,taskfile.fileclass=ui_file.class,taskfile.id=ui_file.id,taskfile.filetype=ui_file.type,taskfile.comment=ui_file.comment,taskfile.content=ui_file.text,task.files[taskfile.id]=taskfile})),_modelsol.ModelSolutionWrapper.doOnAll((function(ms){let modelSolution=new _taskdata.TaskModelSolution;modelSolution.id=ms.id,modelSolution.comment=ms.comment,modelSolution.description=ms.description;let counter=0;_filereflist.ModelSolutionFileReference.getInstance().doOnAll((function(id){modelSolution.filerefs[counter++]=new _taskdata.TaskFileRef(id),task.files[id].visible=_taskdata.T_VISIBLE.DELAYED}),ms.root),task.modelsolutions[modelSolution.id]=modelSolution})),_test.TestWrapper.doOnAll((function(uiTest,index){let test=new _taskdata.TaskTest;test.id=uiTest.id,test.title=uiTest.title,test.testtype=uiTest.testtype,test.comment=uiTest.comment,test.description=uiTest.description,test.weight=uiTest.weight,test.framework=uiTest.framework;let counter=0;_filereflist.TestFileReference.getInstance().doOnAll((function(id){id&&(test.filerefs[counter++]=new _taskdata.TaskFileRef(id),task.files[id].usedByGrader=!0)}),uiTest.root),console.log("*** look for test config"),console.log(test),_jquery.default.each(taskeditorconfig.testInfos,(function(index,configItem){if(configItem.matches(test,task.proglang))if(console.log(configItem),void 0===test.configItem||test.configItem===configItem)test.configItem=configItem,test.uiElement=uiTest;else{let params={title:test.title,config:test.configItem.title};Str.get_string("errtestconfigambiguous","qtype_proforma",params).then((content=>alert(content)))}})),console.log("*** config lookup complete"),void 0===test.configItem&&alert('cannot determine test configuration for test "'+test.title+'"'),task.tests[index]=test})),taskXml=task.writeXml();const t1=performance.now();return console.log("Call to convertToXML took "+(t1-t0)+" milliseconds."),console.log("Size of task is "+taskXml.length),taskXml}))},_exports.readAndDisplayXml=async function(taskXml){let task=new _taskdata.TaskClass;if(0===taskXml.length)return void(0,_helper.setErrorMessage)("Task.xml is empty.");(0,_jquery.default)("#templatedropzone"),(0,_jquery.default)("#multimediadropzone"),(0,_jquery.default)("#downloaddropzone"),(0,_jquery.default)("#visiblefiledropzone");task.readXml(taskXml),console.log(task.proglang),console.log(task.proglangVersion);let proglangElement=(0,_jquery.default)("#xml_programming-language");proglangElement.val(task.proglang.toLowerCase()),proglangElement.trigger("change"),proglangElement.prop("disabled",!0);let versionElement=document.getElementById("xml_programming-language-"+task.proglang.toLowerCase());if(versionElement){if(versionElement.options.length>0){if(versionElement.value=task.proglangVersion,versionElement.value!==task.proglangVersion&&(void 0===task.proglangVersion||null===task.proglangVersion||""===task.proglangVersion.trim())&&"python"===task.proglang.toLowerCase())task.proglangVersion="3";versionElement.value!==task.proglangVersion&&Str.get_string("invalidproglang","qtype_proforma").then((content=>alert(content+" "+task.proglangVersion)))}}else console.error("cannot find element #xml_programming-language-"+task.proglang.toLowerCase());let filepromises=[],refpromises=[];return task.files.forEach((file=>{var item;filepromises.push((item=file,_file.FileWrapper.createFromTemplate(item.id).then((ui_file=>(ui_file.filename=item.filename,ui_file.class=item.fileclass,ui_file.type=item.filetype,ui_file.comment=item.comment,"embedded"===ui_file.type&&(ui_file.text=item.content),item.id&&(0,_zipper.relinkFiles)(),ui_file)))))})),Promise.all(filepromises).then((()=>(console.log("** all files are created => create tests"),task.tests.forEach((item=>refpromises.push(function(item,index){let ui_test,the_configitem;return _test.testIDs[item.id]=1,console.log("iterate through all configured test templates, look for "+item.testtype),_jquery.default.each(taskeditorconfig.testInfos,(function(index,configItem){if(!configItem.matches(item,task.proglang))return;if(ui_test){let params={title:item.title,config:the_configitem.title};return Str.get_string("errtestconfigambiguous","qtype_proforma",params).then((content=>alert(content))),null}console.log("found "+configItem.title);let context=configItem.getTemplateContext();context.testtitle=item.title,item.weight&&(context.weight=item.weight),context.description=item.description,context.comment=item.comment,task.readTestConfig(taskXml,item.id,configItem,context),the_configitem=configItem,ui_test=_test.TestWrapper.createFromTemplate(item.id,configItem.getMustacheTemplate(),context,!0,item,task)})),ui_test||((0,_helper.setErrorMessage)("Test '"+item.title+"' not imported, testtype and framework unsupported"),_test.testIDs[item.id]=0,null)}(item)))),console.log("=> create model solution(s)"),task.modelsolutions.forEach((item=>refpromises.push(function(item,index){return _modelsol.ModelSolutionWrapper.createFromTemplate(item.id,item.description,item.comment,item,task)}(item)))),console.log("=> wait"),Promise.all(refpromises)))).then((()=>{console.log("** all tests and model sols are created => add referenced files"),_filereflist.FileReferenceList.updateAllFilenameLists(),console.log("=> finished")}))},_jquery=(obj=_jquery)&&obj.__esModule?obj:{default:obj},taskeditorconfig=_interopRequireWildcard(taskeditorconfig),Str=_interopRequireWildcard(Str),_notification=_interopRequireWildcard(_notification);class InputError extends Error{constructor(message){super(message),this.name="InputError"}}function switchToTab(hash){const tab=document.querySelector('.nav-link[href="'+hash+'"]');tab&&tab.click()}function addRequired(elem){console.log("missing input for required element found"),console.log(elem),elem.focus(),elem.classList.add("is-invalid"),elem.classList.add("form-control");let sibling=document.createElement("div");return sibling.classList.add("form-control-feedback"),sibling.classList.add("invalid-feedback"),elem.after(sibling),Str.get_string("err_required","form").then((string=>{sibling.innerHTML=string}))}_exports.InputError=InputError}));

//# sourceMappingURL=task.min.js.map