define("qtype_proforma/taskeditor/helper",["exports","jquery","./file","./util","./java","./config","./task","core/str"],(function(_exports,_jquery,_file,_util,_java,taskeditorconfig,_task,Str){var obj;
/**
   * Helper functions for zipping and unzipping task
   *
   * @package    qtype
   * @subpackage proforma
   * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @author     // This file is part of ProFormA Question Type for Moodle
   //
   // ProFormA Question Type for Moodle is free software:
   // you can redistribute it and/or modify
   // it under the terms of the GNU General Public License as published by
   // the Free Software Foundation, either version 3 of the License, or
   // (at your option) any later version.
   //
   // ProFormA Question Type for Moodle is distributed in the hope that it will be useful,
   // but WITHOUT ANY WARRANTY; without even the implied warranty of
   // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   // GNU General Public License for more details.
   //
   // You should have received a copy of the GNU General Public License
   // along with ProFormA Question Type for Moodle.
   // If not, see <http://www.gnu.org/licenses/>.
  
   /**
   * Helper functions
   *
   * @package    qtype
   * @subpackage proforma
   * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @author     eCULT-Team of Ostfalia University, K.Borm, Dr.U.Priss
   */function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.readAndCreateFileData=readAndCreateFileData,_exports.readXMLWithLock=function(taskXmlText){_exports.readXmlActive=readXmlActive=!0;try{return(0,_task.readAndDisplayXml)(taskXmlText)}catch(err){(0,_util.setErrorMessage)("uncaught exception",err)}finally{_exports.readXmlActive=readXmlActive=!1}},_exports.testTypes=_exports.readXmlActive=void 0,_jquery=(obj=_jquery)&&obj.__esModule?obj:{default:obj},taskeditorconfig=_interopRequireWildcard(taskeditorconfig),Str=_interopRequireWildcard(Str);var readXmlActive=!1;_exports.readXmlActive=readXmlActive;function readAndCreateFileData(file,fileId,callback){if(!file)return;let filename=file.name;if(_file.FileWrapper.doesFilenameExist(filename))return void Str.get_string("fileexists","qtype_proforma",filename).then((content=>alert(content)));const size=file.size,mimetype=taskeditorconfig.getMimeType(file.type,filename);let isBinaryFile=taskeditorconfig.isBinaryFile(file,mimetype),reader=new FileReader;reader.onload=function(e){function finishFile(ui_file){if(ui_file.filename=filename,isBinaryFile){let fileObject=new _file.FileStorage(isBinaryFile,mimetype,e.target.result,filename);fileObject.setSize(size),_file.fileStorages[ui_file.id]=fileObject,ui_file.type="file"}else{let fileObject=new _file.FileStorage(isBinaryFile,mimetype,"text is in editor",filename);_file.fileStorages[ui_file.id]=fileObject,ui_file.text=e.target.result,ui_file.type="embedded"}callback&&callback(filename,ui_file.id)}if("java"===(0,_util.getExtension)(filename)){const text=e.target.result;filename=_java.javaParser.getFilenameWithPackage(text,filename)}_file.FileWrapper.doesFilenameExist(filename)?Str.get_string("fileexists","qtype_proforma",filename).then((content=>alert(content))):fileId?finishFile(_file.FileWrapper.constructFromId(fileId)):_file.FileWrapper.createFromTemplate().then((ui_file=>{finishFile(ui_file)}))},isBinaryFile?reader.readAsArrayBuffer(file):reader.readAsText(file)}_exports.testTypes="EMPTY LIST"}));

//# sourceMappingURL=helper.min.js.map