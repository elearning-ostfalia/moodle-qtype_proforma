define("qtype_proforma/taskeditor/zipper",["exports","../zip/zip","./file","./filereflist"],(function(_exports,zip,_file,_filereflist){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.relinkFiles=relinkFiles,_exports.taskTitleToFilename=taskTitleToFilename,_exports.unzipme=function(blob,readyCallback){let filesToBeRead,filesRead=0;function onFilesRead(zipReader){relinkFiles()}!function(blob,callbackForTaskXml,callbackForFile){try{const zipFileReader=new zip.BlobReader(blob);let zipReader=new zip.ZipReader(zipFileReader);console.log("unzip"),zipReader.getEntries().then((entries=>{filesToBeRead=entries.length,console.log("filesToBeRead "+filesToBeRead),entries.forEach((function(entry){if(console.log("filename: "+entry.filename),"task.xml"===entry.filename){const taskXmlWriter=new zip.TextWriter;entry.getData(taskXmlWriter).then((xmlContent=>{callbackForTaskXml(xmlContent)}))}else{const blobWriter=new zip.BlobWriter;entry.getData(blobWriter).then((data=>data.arrayBuffer())).then((data=>{callbackForFile(data,entry)}))}}))})).catch((error=>{console.error("error:",error),alert(error)})),zipReader.close()}catch(e){console.error(e)}}(blob,(function(taskXmlContent){taskXmlContent,readyCallback&&readyCallback(taskXmlContent),taskfile_read=!0,filesRead++,filesRead===filesToBeRead&&onFilesRead()}),(function(unzippedBlob,entry){for(var arr=new Uint8Array(unzippedBlob).subarray(0,4),header="",i=0;i<arr.length;i++){let number=arr[i].toString(16);1===number.length&&(number="0"+number),header+=number}let type=unzippedBlob.type;switch(header.toLowerCase()){case"504b0304":type="application/zip";break;case"25504446":type="application/pdf";break;case"89504e47":type="image/png";break;case"47494638":type="image/gif";break;case"ffd8ffe0":case"ffd8ffe1":case"ffd8ffe2":case"ffd8ffe3":case"ffd8ffe8":type="image/jpeg"}unzippedFiles[entry.filename]=new _file.FileStorage(!0,type,unzippedBlob,entry.filename),unzippedFiles[entry.filename].setZipperFlag(),unzippedFiles[entry.filename].setSize(entry.uncompressedSize),filesRead++,filesRead===filesToBeRead&&onFilesRead()}))},_exports.zipme=function(TEXT_CONTENT,startdownload,maxsize){if(!TEXT_CONTENT||0===TEXT_CONTENT.length)return void console.error("zipme called with empty output");const zipname=taskTitleToFilename();return _file.FileWrapper.doOnAllFiles((function(ui_file){"embedded"===!ui_file.type&&(ui_file.storeAsFile=!0,ui_file.isBinary||(ui_file.content=ui_file.text))})),async function(blob){const zipFileWriter=new zip.BlobWriter("application/zip"),zipWriter=new zip.ZipWriter(zipFileWriter);console.log("fileStorages.length is "+_file.fileStorages.length);let f=0;for(;f<_file.fileStorages.length;){const ui_file=_file.FileWrapper.constructFromId(f);if(ui_file&&ui_file.storeAsFile){let fblob=new Blob([ui_file.content],{type:ui_file.mimetype});console.log("add "+ui_file.filename+" to zip file"),await zipWriter.add(ui_file.filename,new zip.BlobReader(fblob))}f++}return console.log("add task.xml to zip file"),await zipWriter.add("task.xml",new zip.BlobReader(blob)),await zipWriter.close(),await zipFileWriter.getData()}(new Blob([TEXT_CONTENT],{type:zip.getMimeType("task.xml")})).then((zippedBlob=>{if(!startdownload)return maxsize>0&&zippedBlob.size>maxsize?Promise.reject("Task size is "+zippedBlob.size+" and exceeds maximum size ("+maxsize+" bytes).\nUploading to the Moodle server is blocked!"):zippedBlob;{const url=window.URL.createObjectURL(zippedBlob);let a=document.createElement("a");document.body.appendChild(a),a.style="display: none",a.download=zipname,a.href=url,a.click()}}))},
/**
   * Helper functions for zipping and unzipping task
   *
   * @package    qtype
   * @subpackage proforma
   * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @author     eCULT-Team of Ostfalia University, K.Borm, Dr. U.Priss
   */
(zip=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(zip)).workerScriptsPath="./js/";let unzippedFiles={},taskfile_read=!1;function relinkFiles(){taskfile_read&&(_file.FileWrapper.doOnAllFiles((function(ui_file){if("file"===ui_file.type){const fileid=ui_file.id,filename=ui_file.filename;unzippedFiles[filename]&&!_file.fileStorages[fileid].byZipper?(_file.fileStorages[fileid]=unzippedFiles[filename],unzippedFiles[filename]=void 0,ui_file.type=ui_file.type):unzippedFiles[filename]&&_file.fileStorages[fileid].byZipper&&(console.error("internal error: file is already relinked! filename "+filename+" -> "+fileid+" "+ui_file.type),alert("internal error: file "+filename+" is already relinked!"))}})),_filereflist.FileReferenceList.updateAllEditorButtons())}function taskTitleToFilename(){let title=$("#id_name").val();return title=title.replace(/(?:^\w|[A-Z]|\b\w)/g,(function(letter,index){return 0===index?letter.toLowerCase():letter.toUpperCase()})).replace(/\s+/g,""),title=title.replace(/[^a-z0-9_\-]/gi,"_"),title+=".zip",title}}));

//# sourceMappingURL=zipper.min.js.map