define("qtype_proforma/taskeditor/taskeditor",["exports","core/notification","core/yui","core/templates","./test","../repository","./helper","./config","./zipper","./task","core/config","./modelsol","./taskdata","./filereflist","./file","../zip/zip","../logmonitor"],(function(_exports,_notification,_yui,_templates,_test,_repository,_helper,taskeditorconfig,_zipper,_task,_config2,_modelsol,_taskdata,_filereflist,_file,zip,logmonitor){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}
/**
   * main function for taskeditor
   *
   * @package    qtype
   * @subpackage proforma
   * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @author     K.Borm
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.checkModelsolution=function(buttonid,containerid){let blobtask,button=document.getElementById(buttonid),container=document.getElementById(containerid),defaultcursor=container.style.cursor,htmlFeedback="",feedbackstarted=!1;function onFeedbackStart(){container.style.display="",container.style.cursor=defaultcursor,htmlFeedback="",feedbackstarted=!0}function onFeedbackData(text){htmlFeedback+=feedbackstarted?text+"\n":text+"<br>"}function onFeedbackEnd(){container.innerHTML=htmlFeedback,document.querySelectorAll("#check-feedback-id .collapsibleregion").forEach((element=>{console.log("create collapsible region for "+element.id),M.util.init_collapsible_region(_yui.default,element.id,"","EIN VERSUCH IST ES WERT")}))}button.onclick=function(e){e.preventDefault(),container.innerHTML="",container.style.cursor="wait",feedbackstarted=!1;const aggstrategy=document.querySelector("select[name='aggregationstrategy']").value;button.disabled=!0,(0,_task.convertToXML)().then((taskxml=>(0,_zipper.zipme)(taskxml,!1,taskmaxbytes))).then((blob=>(console.log("task zip created "),blobtask=blob,createModelSolutionZip()))).then((modelsolutionzip=>{const gradinghints=createGradingHints(!0),proglang=document.getElementById("xml_programming-language").value;console.log("created model solution zip");const url=_config2.default.wwwroot+"/question/type/proforma/checksolution_ajax.php",formData=(document.querySelector("input[name='id']").value,new FormData);return formData.append("sesskey",_config2.default.sesskey),formData.append("task",blobtask,"task.zip"),formData.append("modelsolution",modelsolutionzip,"modelsolution.zip"),formData.append("itemid",modelsolrepositoryparams.checkitemid),formData.append("contextid",modelsolrepositoryparams.contextid),formData.append("coursecontextid",_config2.default.courseContextId),formData.append("gradinghints",gradinghints),formData.append("proglang",proglang),formData.append("aggregationstrategy",aggstrategy),fetch(url,{method:"POST",body:formData})})).then((response=>response.ok?response.json():(console.error(response),Promise.reject(response.statusText)))).then((json=>{if(json.error)return console.log(json),Promise.reject(json.error);let url=_config2.default.wwwroot+"/question/type/proforma/checksolution_ajax.php?runtest=1";url+="&sesskey="+_config2.default.sesskey+"&itemid="+json.itemid+"&contextid="+json.contextid+"&taskfilename="+json.taskfilename+"&proglang="+json.proglang+"&coursecontextid="+_config2.default.courseContextId+"&aggregationstrategy="+aggstrategy+"&modelsolutionfilename="+json.modelsolutionfilename,logmonitor.show("checkmodelsollog",url,onFeedbackStart,onFeedbackData,onFeedbackEnd)})).catch((error=>{error instanceof _task.InputError||(console.log(error),alert(error))})).finally((()=>{button.disabled=!1}))}},_exports.downloadModelsolution=_exports.download=void 0,_exports.edit=async function(buttonid,context,taskrepoparams,msrepoparams,inline){function mergeWithGradingHints(){if(!document.querySelector('input[name="gradinghints"]'))return void console.error("No gradinghints field found => ignore");document.querySelector("#id_aggregationstrategy");const count=document.querySelectorAll(".proforma-taskeditor .xml_test").length;for(let i=0;i<count;i++){const testid=document.getElementById("id_testid_"+i),testweight=document.getElementById("id_testweight_"+i),testtitle=document.getElementById("id_testtitle_"+i),testdescription=document.getElementById("id_testdescription_"+i),testtype=document.getElementById("id_testtype_"+i);if(!testid){console.error("cannot find element with id_testid_"+i);continue}if(!testweight){console.error("cannot find element with id_testweight_"+i);continue}if(!testtitle){console.error("cannot find element with id_testtitle_"+i);continue}if(!testdescription){console.error("cannot find element with id_testdescription_"+i);continue}if(!testtype){console.error("cannot find element with id_testtype_"+i);continue}const ref=testid.value;let ui_test=_test.TestWrapper.constructFromId(ref);ui_test?(ui_test.weight=testweight.value,ui_test.title=testtitle.value,ui_test.description=testdescription.value,testtype.value!==ui_test.testtype&&alert("Task file does not match grading hints in Moodle:\nTesttype for test "+ui_test.id+" does not match testtype from grading hints")):alert("cannot create test "+ref)}const t1=performance.now();console.log("expanding details took "+(t1-t0)+" milliseconds.")}function updateEnvironment(){console.log("*** updateEnvironment"),document.querySelectorAll('[id^="fgroup_id_testoptions_"]').forEach((item=>{item.style.display="None"})),document.querySelectorAll('[id^="fitem_id_testtitle_"]').forEach((item=>{item.style.display="None"})),document.querySelectorAll('[id^="fitem_id_testdescription_"]').forEach((item=>{item.style.display="None"}));document.querySelector("input[name='id']").value;let uuid=document.querySelector("input[name='uuid']");uuid?uuid.value=(0,_helper.generateUUID)():console.error("cannot find uuid element");let proformaversion=document.querySelector("input[name='proformaversion']");proformaversion?proformaversion.value="2.0":console.error("cannot find proformaversion element"),document.getElementById(buttonid).style.display="none",document.getElementById("id_graderoptions_header"),document.getElementById("fitem_id_mslinks")&&(document.getElementById("fitem_id_mslinks").style.display="None"),document.getElementById("fitem_id_task")&&(document.getElementById("fitem_id_task").style.display="None"),document.getElementById("fitem_id_uploadbutton")&&(document.getElementById("fitem_id_uploadbutton").style.display="None");let header=document.querySelector('a[href="#id_graderoptions_headercontainer"]');header&&"true"===header.getAttribute("aria-expanded")&&header.click();document.querySelector('input[name="taskeditor"]').value="1";let updatebutton=document.getElementById("id_updatebutton");if(null!==updatebutton){let realUpdateClick=updatebutton.onclick;updatebutton.onclick=event=>{event.preventDefault(),console.log("save before update"),updatebutton.disabled=!0,saveToServer().then((()=>{updatebutton.disabled=!1,console.log("Task is uploaded to server"),updatebutton.onclick=realUpdateClick,updatebutton.click()})).catch((error=>{error instanceof _task.InputError||(console.log(error),alert(error))})).finally((()=>{updatebutton.disabled=!1}))}}else console.error("Could not find update button");let submitbutton=document.getElementById("id_submitbutton");if(null!==submitbutton){let realSubmitClick=submitbutton.onclick;submitbutton.onclick=event=>{event.preventDefault(),console.log("save before submit"),submitbutton.disabled=!0,saveToServer().then((()=>{console.log("Task is uploaded to server"),submitbutton.disabled=!1,submitbutton.onclick=realSubmitClick,submitbutton.click()})).catch((error=>{error instanceof _task.InputError||(console.log(error),alert(error))})).finally((()=>{submitbutton.disabled=!1}))}}else console.error("Could not find submit button")}function showTaskeditor(){if(t0=performance.now(),draftitemid=document.querySelector("#id_task").value,""===document.querySelector("input[name='id']").value)return console.log("new task"),_modelsol.ModelSolutionWrapper.createFromTemplate(),updateEnvironment(),void(document.querySelector(".proforma-taskeditor").style.display="");let loadingElem=document.createElement("p");_templates.default.render("core/loading",{}).then((html=>{let head=document.getElementById("fitem_id_editdetails");return loadingElem.align="center",loadingElem.innerHTML=html,head.parentNode.insertBefore(loadingElem,head),document.querySelector(".proforma-taskeditor").style.display="None",Promise.resolve(0)})).then((()=>(console.log("download task "+draftitemid),(0,_repository.downloadTask)(draftitemid).then((response=>(console.log(response.fileurl),decodeURIComponent(response.fileurl.split("/").reverse()[0]),response.fileurl?response.fileurl:Promise.reject(new Error("invalid fileurl "+response.fileurl))))).then((url=>fetch(url,{method:"GET"})))))).then((taskresponse=>function(taskresponse){switch((0,_helper.getExtension)(taskresponse.url)){case"zip":return taskresponse.blob().then((blob=>{(0,_zipper.unzipme)(blob,(function(text){(0,_helper.readXMLWithLock)(text).then((()=>mergeWithGradingHints()))}))}));case"xml":return taskresponse.text().then((text=>{(0,_helper.readXMLWithLock)(text).then((()=>mergeWithGradingHints()))}));default:return Promise.resolve("N/A")}}(taskresponse))).then((()=>{updateEnvironment(),loadingElem.remove(),document.querySelector(".proforma-taskeditor").style.display=""})).catch((error=>{loadingElem.remove(),_notification.default.exception}))}taskrepositoryparams=taskrepoparams,modelsolrepositoryparams=msrepoparams,taskmaxbytes=context.taskmaxbytes,console.log("Task max bytes: "+taskmaxbytes);const questionId=document.querySelector("input[name='id']").value,taskeditorRequested=document.querySelector("input[name='taskeditor']");taskeditorconfig.initStrings().then((()=>{""===questionId||taskeditorRequested&&"1"===taskeditorRequested.value?(console.log("show editor"),document.getElementById(buttonid).style.display="none",showTaskeditor()):(console.log("hide editor"),document.querySelector(".proforma-taskeditor").style.display="none",document.getElementById(buttonid).addEventListener("click",(e=>{document.getElementById(buttonid).disabled=!0,showTaskeditor()})))}))},_exports.setJunitVersions=_exports.setCheckstyleVersions=_exports.initproglang=void 0,_exports.uploadTaskToGrader=function(buttonid){let button=document.getElementById(buttonid);if(!button)return void console.error("invalid button id");button.onclick=function(e){e.preventDefault(),button.disabled=!0,(0,_task.convertToXML)().then((context=>(0,_zipper.zipme)(context,!1,taskmaxbytes))).then((blobtask=>{console.log("now let us upload task to grader");const url=_config2.default.wwwroot+"/question/type/proforma/taskeditor_ajax.php",formData=new FormData;return formData.append("sesskey",_config2.default.sesskey),formData.append("task",blobtask,"task.zip"),formData.append("coursecontextid",_config2.default.courseContextId),formData.append("itemid",modelsolrepositoryparams.checkitemid),formData.append("contextid",modelsolrepositoryparams.contextid),fetch(url,{method:"POST",body:formData})})).then((response=>response.ok?response.json():(console.error(response),Promise.reject(response.statusText)))).then((json=>{if(json.error)return console.log(json),Promise.reject(json.error);const questionId=document.querySelector("input[name='id']").value;let url=_config2.default.wwwroot+"/question/type/proforma/upload_sse.php";url+="?sesskey="+_config2.default.sesskey+"&id="+questionId,json.itemid&&(url+="&itemid="+json.itemid+"&contextid="+json.contextid+"&filename="+json.filename+"&coursecontextid="+_config2.default.courseContextId),logmonitor.show("uploadlog",url)})).catch((error=>{error instanceof _task.InputError||(console.log(error),alert(error))})).finally((()=>{button.disabled=!1}))}},_notification=_interopRequireWildcard(_notification),_yui=_interopRequireDefault(_yui),_templates=_interopRequireDefault(_templates),taskeditorconfig=_interopRequireWildcard(taskeditorconfig),_config2=_interopRequireDefault(_config2),zip=_interopRequireWildcard(zip),logmonitor=_interopRequireWildcard(logmonitor);var draftitemid=null,taskrepositoryparams=null;let modelsolrepositoryparams=null;var t0;let taskmaxbytes;function fillSelectOptions(id,selectArray,textForError){let selectElem=document.getElementById(id);if(!selectElem)throw new Error("could not find element "+id);if(1===selectElem.options.length){const selectedVersion=selectElem.options[0].value;selectArray.includes(selectedVersion)||(""!==selectedVersion.trim()&&alert("invalid "+textForError+" version "+selectedVersion),selectElem.remove(0))}selectArray.forEach((version=>{if(!Array.from(selectElem.options).map((opt=>opt.value)).includes(version)){let option=document.createElement("option");option.text=version,selectElem.add(option)}}))}_exports.setJunitVersions=id=>{(0,_repository.getJunitVersions)().then((response=>{fillSelectOptions(id,response.junitversions,"JUnit")})).fail(_notification.default.exception)};function createTestForm(testconfig){_test.TestWrapper.createFromTemplate(null,testconfig.mustacheTemplate,testconfig.getTemplateContext(),testconfig.withFileRef)}_exports.setCheckstyleVersions=id=>{(0,_repository.getCheckstyleVersions)().then((response=>{fillSelectOptions(id,response.checkstyleversions,"CheckStyle")})).fail(_notification.default.exception)};_exports.initproglang=(proglangdiv,buttondiv,langselect)=>{let langselectelem=document.getElementById(langselect);const lang=langselectelem.value;document.querySelector("#xml_programming-language-"+lang).style.display="",document.querySelectorAll("#"+buttondiv+" ."+lang).forEach((e=>{e.style.display=""})),langselectelem.onchange=function(){const lang=langselectelem.value;let highlight=document.getElementById("id_programminglanguage");highlight&&(highlight.value=lang);let versionElement=document.getElementById("xml_programming-language-"+lang);versionElement.disabled=0===versionElement.options.length,versionElement.style.display="",document.querySelectorAll("#"+buttondiv+" ."+lang).forEach((e=>e.style.display="")),document.querySelectorAll("#"+proglangdiv+" select:not(#xml_programming-language-"+lang+")").forEach((e=>e.style.display="None")),document.querySelectorAll("#"+buttondiv+" :not(."+lang+")").forEach((e=>e.style.display="None"))},taskeditorconfig.initStrings().then((()=>(document.querySelector("#addJUnitTest").onclick=function(e){e.preventDefault(),createTestForm(taskeditorconfig.infoJavaJUnit)},document.querySelector("#addCheckStyleTest").onclick=function(e){e.preventDefault(),createTestForm(taskeditorconfig.infoCheckStyle)},document.querySelector("#addCompilerTest").onclick=function(e){e.preventDefault(),createTestForm(taskeditorconfig.infoJavaComp)},document.querySelector("#addGoogleTest").onclick=function(e){e.preventDefault(),createTestForm(taskeditorconfig.infoGoogleTest)},document.querySelector("#addCUnitTest").onclick=function(e){e.preventDefault(),createTestForm(taskeditorconfig.infoCUnit)},document.querySelector("#addPythonUnittest").onclick=function(e){e.preventDefault(),createTestForm(taskeditorconfig.infoPythonUnittest)},void(document.querySelector("#addPythonDocTest").onclick=function(e){e.preventDefault(),createTestForm(taskeditorconfig.infoPythonDoctest)}))))};_exports.download=buttonid=>{document.getElementById(buttonid).onclick=function(e){e.preventDefault(),(0,_task.convertToXML)().then((context=>{(0,_zipper.zipme)(context,!0,taskmaxbytes)})).catch((error=>{error instanceof _task.InputError||console.error(error)}))}};function createGradingHints(){let temporary=arguments.length>0&&void 0!==arguments[0]&&arguments[0],doc=document.implementation.createDocument(null,null,null),gh=doc.createElement("grading-hints"),root=doc.createElement("root");root.setAttribute("function","sum"),gh.appendChild(root),_test.TestWrapper.doOnAll((ui_test=>{let test=doc.createElement("test-ref");root.appendChild(test),test.setAttribute("ref",ui_test.id),test.setAttribute("weight",ui_test.weight);let title=doc.createElement("title");title.innerHTML=ui_test.title,test.appendChild(title);let description=doc.createElement("description");description.innerHTML=ui_test.description,test.appendChild(description);let testtype=doc.createElement("test-type");testtype.innerHTML=ui_test.testtype,test.appendChild(testtype)})),console.log("create new grading hints");const gradinghints=document.querySelector('input[name="gradinghints"]');if(!gradinghints)return void console.error("No gradinghints field found => ignore");let result=(new XMLSerializer).serializeToString(gh);return"<?xml"!==result.substring(0,5)&&(result='<?xml version="1.0"?>'+result),console.log(result),temporary||(gradinghints.value=encodeURIComponent(result)),console.log("grading hints are finished"),encodeURIComponent(result)}function uploadModelSolutionToServer(){const draftitemid=modelsolrepositoryparams.newitemid;console.log("draftid for model sol is "+draftitemid),console.log("now let us model solution in Moodle server"),_modelsol.ModelSolutionWrapper.doOnAll((function(ms){let modelSolution=new _taskdata.TaskModelSolution;modelSolution.id=ms.id;let counter=0;_filereflist.ModelSolutionFileReference.getInstance().doOnAll((function(id){modelSolution.filerefs[counter++]=new _taskdata.TaskFileRef(id);let file=_file.FileWrapper.constructFromId(id);const formData=new FormData;console.log(_file.fileStorages),formData.append("sesskey",_config2.default.sesskey),formData.append("client_id",modelsolrepositoryparams.client_id),formData.append("overwrite",!0),formData.append("repo_id",modelsolrepositoryparams.repo_id),formData.append("itemid",draftitemid);let filename=_file.fileStorages[id].filename.split("/").pop(),length=_file.fileStorages[id].filename.length-filename.length,filepath=_file.fileStorages[id].filename.substring(0,length);if(formData.append("title",filename),_file.fileStorages[id].isBinary){let blob=new Blob([_file.fileStorages[id].content],{type:_file.fileStorages[id].mimetype});formData.append("repo_upload_file",blob)}else{let content=file.text;formData.append("repo_upload_file",new Blob([content],{type:"plain/text"}))}formData.append("filepath","/"),formData.append("savepath",filepath),console.log(formData),function(formData){const url=_config2.default.wwwroot+"/repository/repository_ajax.php";let request=new XMLHttpRequest;request.open("POST",url+"?action=upload",!1),console.log("send");try{request.send(formData),200!==request.status?alert("Error ".concat(request.status,": ").concat(request.statusText)):console.log(request.response)}catch(err){alert("Request failed")}console.log("parse repsonse");const jsonResponse=JSON.parse(request.responseText);console.log("response from Moodle"),console.log(jsonResponse),void 0!==jsonResponse.error&&(console.error(request.responseText),alert(jsonResponse.error))}(formData)}),ms.root)})),document.querySelector("input[name='modelsol']").value=draftitemid}async function createModelSolutionZip(){const zipFileWriter=new zip.BlobWriter("application/zip"),zipWriter=new zip.ZipWriter(zipFileWriter);return _modelsol.ModelSolutionWrapper.doOnAll((function(ms){(new _taskdata.TaskModelSolution).id=ms.id,_filereflist.ModelSolutionFileReference.getInstance().doOnAll((async function(id){const filename=_file.fileStorages[id].filename;let content=null;if(_file.fileStorages[id].isBinary)content=new Blob([_file.fileStorages[id].content]);else{let file=_file.FileWrapper.constructFromId(id);content=new Blob([file.text],{type:"plain/text"})}await zipWriter.add(filename,new zip.BlobReader(content))}),ms.root)})),await zipWriter.close(),zipFileWriter.getData()}function saveToServer(){return(0,_task.convertToXML)().then((context=>{createGradingHints(),uploadModelSolutionToServer();let uuid=document.querySelector("input[name='uuid']");uuid?(uuid.disabled=!1,uuid.value=(0,_helper.generateUUID)()):console.error("cannot find uuid element");let proformaversion=document.querySelector("input[name='proformaversion']");return proformaversion?proformaversion.disabled=!1:console.error("cannot find proformaversion element"),(0,_zipper.zipme)(context,!1,taskmaxbytes)})).then((blobtask=>{console.log("now let us update task in  Moodle server: "+draftitemid);const url=_config2.default.wwwroot+"/question/type/proforma/taskeditor_ajax.php",formData=new FormData;formData.append("sesskey",_config2.default.sesskey),formData.append("task",blobtask,(0,_zipper.taskTitleToFilename)());const itemid=document.querySelector("#id_task").value;return formData.append("itemid",itemid),formData.append("contextid",taskrepositoryparams.contextid),formData.append("coursecontextid",_config2.default.courseContextId),fetch(url,{method:"POST",body:formData})})).then((response=>(console.log(response),response.json()))).then((json=>{console.log(json)}))}_exports.downloadModelsolution=buttonid=>{document.getElementById(buttonid).onclick=async function(e){e.preventDefault(),createModelSolutionZip().then((zippedBlob=>{console.log(zippedBlob);const url=window.URL.createObjectURL(zippedBlob);let b=document.createElement("a");b.style="display: none",b.download="modelsolution.zip",b.href=url,document.body.appendChild(b),b.click()}))}}}));

//# sourceMappingURL=taskeditor.min.js.map