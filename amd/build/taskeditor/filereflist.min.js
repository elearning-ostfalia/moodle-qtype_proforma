define("qtype_proforma/taskeditor/filereflist",["exports","./dynamic-list","jquery","./helper","core/notification","core/templates","./file","core/str","./test"],(function(_exports,_dynamicList,_jquery,_helper,_notification,_templates,_file,Str,_test){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
  * Class for dealing with file references in tests or model solution
  *
  * @package    qtype
  * @subpackage proforma
  * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften
  * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  * @author     eCULT-Team of Ostfalia University, K.Borm
  */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.TestFileReference=_exports.ModelSolutionFileReference=_exports.FileReferenceList=void 0,_jquery=_interopRequireDefault(_jquery),_templates=_interopRequireDefault(_templates),Str=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Str);let loadFileOption="<open...>",newFileOption="<new file>";let showEditorText="View",hideEditorText="Hide",filenameClassList=[],filerefClassList=[];class FileReferenceList extends _dynamicList.DynamicList{static getLocalisedStrings(){return Str.get_strings([{key:"taskeditorview",component:"qtype_proforma"},{key:"taskeditorhide",component:"qtype_proforma"},{key:"openfile",component:"qtype_proforma"},{key:"newfile",component:"qtype_proforma"}]).then((results=>{showEditorText=results[0],hideEditorText=results[1],loadFileOption=results[2],newFileOption=results[3]}))}constructor(classFilename,classFileref,jsClassName,label,help,mandatory){super(classFilename,classFileref,jsClassName,label,help,mandatory,"xml_fileref_table"),filenameClassList.push("."+this.classFilename),filerefClassList.push("."+classFileref)}doOnAll(callback,root){root&&console.log("doOnAllIds ios deprecated, use static version instead");let theRoot=root||this.root;_jquery.default.each(theRoot.find(".fileref_fileref"),(function(index,item){const filerefId=item.value;return callback(filerefId)}))}doOnNonEmpty(callback){_jquery.default.each(this.root.find(".fileref_fileref"),(function(index,item){const filerefId=item.value;if(filerefId)return callback(filerefId)}))}static doOnAllIds(root,callback){_jquery.default.each(root.find(".fileref_fileref"),(function(index,item){const filerefId=item.value;return callback(filerefId)}))}static doOnAllElements(root,callback){_jquery.default.each(root.find(".fileref_fileref"),(function(index,item){return callback(item)}))}init(root,DEBUG_MODE){this.root||(this.root=root),FileReferenceList.updateFilenameList(root.find("."+this.classFilename).last()),FileReferenceList.rowEnableEditorButton(root,!1),DEBUG_MODE||(root.find(".fileref_fileref").hide(),root.find("label[for='fileref_fileref']").hide()),root.on({dragover:function(e){e.preventDefault(),e.stopPropagation()},dragenter:function(e){e.preventDefault(),e.stopPropagation()}})}setFilenameOnCreation(box,index,filename){if(index>0)return this.addItem(box.find("."+this.classAddItem).first()).then((()=>{let element=box.find("."+this.classFilename);FileReferenceList.updateFilenameList(element.eq(index)),element.eq(index).val(filename).change()}));{let element=box.find("."+this.classFilename);FileReferenceList.updateFilenameList(element.eq(index)),element.eq(index).val(filename).change()}}getCountFilerefs(root){let counter=0;return this.doOnAll((function(){counter++}),root),counter}getNumberOfExtraColumns(){return 0}toggleEditor(element){let tr=element.parent().parent();const fileid=tr.find(".fileref_fileref")[0].value;let ui_file=_file.FileWrapper.constructFromId(fileid);if(element.html()===hideEditorText)element.html(showEditorText),tr.next().remove();else{const numberOfColumns=7+this.getNumberOfExtraColumns();ui_file&&!ui_file.isBinary&&(element.html(hideEditorText),(0,_jquery.default)("<tr>   <td></td>   <td colspan='"+numberOfColumns+"'><textarea disabled cols='80' rows='10' class='fileref_viewer'>"+ui_file.text+"</textarea></td></tr>").insertAfter(tr))}}static rowGetFileId(row){return row.find(".fileref_fileref")[0].value}static rowEnableEditorButton(row,enabled){if(enabled){const fileid=FileReferenceList.rowGetFileId(row);if(!fileid)return;_file.FileWrapper.constructFromId(fileid).isBinary&&(enabled=!1)}row.find(".taskeditor-collapse").last().prop("disabled",!enabled)}addItem(element){let table_body=element.parent().parent().parent();return super.addItem(element).then((newRow=>{FileReferenceList.rowEnableEditorButton(newRow,!1),FileReferenceList.updateFilenameList(table_body.find("."+this.classFilename).last()),_helper.DEBUG_MODE||(table_body.find(".fileref_fileref").hide(),table_body.find("label[for='fileref_fileref']").hide()),FileReferenceList.addCallbacks(newRow[0])}))}getItemCount(table_body){let count=0;return _jquery.default.each(table_body.find("tr"),(function(index,item){(0,_jquery.default)(item).find("td").length>2&&count++})),count}getPreviousItem(tr){let previousRow=tr.prev("tr");return 1===previousRow.find("td").length&&(previousRow=previousRow.prev("tr")),previousRow}removeItem(element){let td=element.parent(),tr=td.parent();const fileid=FileReferenceList.rowGetFileId(tr);td.prev().find("button").html()===hideEditorText&&tr.next().remove(),super.removeItem(element),fileid&&FileReferenceList.deleteFile(fileid)}static deleteFile(fileid){let ui_file=_file.FileWrapper.constructFromId(fileid);0===FileReferenceList.getCountFileIdReferenced(fileid)&&ui_file.delete()}static removeContent(filenameItem,removeItemIfPossible){(0,_jquery.default)(filenameItem).val(" ");let tr=(0,_jquery.default)(filenameItem).closest("tr");tr.find(".fileref_fileref").first().val("");let button=tr.find(".taskeditor-collapse");if(button.html()===hideEditorText&&(button.html(showEditorText),tr.next().remove()),removeItemIfPossible){let removeButton=tr.find(".remove_item").first();"none"===removeButton.css("display")||removeButton.click()}}static getCountFileIdReferenced(fileId){let count=0;return _jquery.default.each((0,_jquery.default)(".fileref_fileref"),(function(index,item){item.value===fileId&&count++})),count}checkForExclusiveUse(ui_file,fileid,otherFileRefList,listname){_jquery.default.each(otherFileRefList.root.find(".fileref_fileref"),(function(index,item){item.value===fileid&&(alert("file class for file '"+ui_file.filename+"' will be no longer a "+listname+" file"),FileReferenceList.removeContent(item,!0))}))}onFileUpload(filename,uploadBox){let done=!1;_jquery.default.each((0,_jquery.default)(uploadBox).find("."+this.classFilename),(function(index,element){if(done)return!1;const currentFilename=(0,_jquery.default)(element).val();currentFilename&&0!==currentFilename.length||((0,_jquery.default)(element).val(filename).change(),done=!0)})),done||this.addItem((0,_jquery.default)(uploadBox).find("."+this.classAddItem).last()).then((newRow=>{(0,_jquery.default)(uploadBox).find("."+this.classFilename).last().val(filename).change()}))}onFilerefChanged(ui_file,fileid){}onFileSelectionChanged(tempSelElem){const selectedFilename=(0,_jquery.default)(tempSelElem).val(),nextTd=(0,_jquery.default)(tempSelElem).parent().next("td"),row=(0,_jquery.default)(tempSelElem).closest("tr"),oldFileId=nextTd.find(".fileref_fileref")[0].value;switch(FileReferenceList.rowEnableEditorButton(row,!1),selectedFilename){case newFileOption:_file.FileWrapper.createFromTemplate().then((ui_file=>{const newFilename="new file "+ui_file.id;ui_file.filename=newFilename,(0,_jquery.default)(tempSelElem)&&((0,_jquery.default)(tempSelElem).val(newFilename).change(),FileReferenceList.rowEnableEditorButton(row,!0))}));const hash="#proforma-files-section",tab=document.querySelector('.nav-link[href="'+hash+'"]');tab&&tab.click();break;case loadFileOption:FileReferenceList.removeContent(tempSelElem,!1);let dummybutton=(0,_jquery.default)("#dummy_file_upload_button").first();return dummybutton.unbind("change"),dummybutton.change((function(){let filenew=(0,_jquery.default)("#dummy_file_upload_button")[0].files[0];filenew?(0,_helper.readAndCreateFileData)(filenew,void 0,(function(newFilename,fileId){(0,_jquery.default)(tempSelElem)&&((0,_jquery.default)(tempSelElem).val(newFilename).change(),FileReferenceList.rowEnableEditorButton(row,!0))})):console.log("no file selected -> cancel")})),void dummybutton.click();case" ":case" ".trim():nextTd.find(".fileref_fileref")[0].value="";break;default:if(selectedFilename&&selectedFilename.trim().length){let ui_file=_file.FileWrapper.constructFromFilename(selectedFilename);if(ui_file){const fileid=ui_file.id;if(function(fileid){const filerefs=(0,_jquery.default)(tempSelElem).closest("table").find(".fileref_fileref");let found=!1;return _jquery.default.each(filerefs,(function(index,item){if(item.value===fileid)return found=!0,!1})),found}(fileid))return Str.get_string("fileexists","qtype_proforma",ui_file.filename).then((content=>alert(content))),void FileReferenceList.removeContent(tempSelElem,!1);nextTd.find(".fileref_fileref")[0].value=fileid,FileReferenceList.rowEnableEditorButton(row,!0),(0,_jquery.default)(tempSelElem).hasClass("xml_fileref_filename")?fileid&&(0,_helper.handleFilenameChangeInTest)(selectedFilename,tempSelElem):this.onFilerefChanged(ui_file,fileid)}}}""!==oldFileId&&FileReferenceList.deleteFile(oldFileId)}static updateAllViews(){_jquery.default.each((0,_jquery.default)(".fileref_viewer"),(function(index,item){const fileid=(0,_jquery.default)(item).closest("tr").prev().find(".fileref_fileref")[0].value;let ui_file=_file.FileWrapper.constructFromId(fileid);(0,_jquery.default)(item).val(ui_file.text)}))}static updateAllEditorButtons(){_jquery.default.each((0,_jquery.default)(".fileref_fileref"),(function(index,item){let row=(0,_jquery.default)(item).parent().parent();FileReferenceList.rowEnableEditorButton(row,!0)}))}static updateAllFilenameLists(changedId,newFilename){_jquery.default.each((0,_jquery.default)(filenameClassList.join(",")),(function(index,item){const text=(0,_jquery.default)("option:selected",item).text();FileReferenceList.updateFilenameList(item);(0,_jquery.default)(item).closest("tr").find(".fileref_fileref").first().val()===changedId&&void 0!==changedId?void 0!==newFilename?(0,_jquery.default)(item).val(newFilename):FileReferenceList.removeContent(item,!0):(0,_jquery.default)(item).val(text)}))}static updateFilenameList(tempSelElem){(0,_jquery.default)(tempSelElem).empty();let tempOption=(0,_jquery.default)("<option> </option>");(0,_jquery.default)(tempSelElem).append(tempOption),_jquery.default.each((0,_jquery.default)(".xml_file_filename"),(function(index,item){item.value.length>0&&(tempOption=(0,_jquery.default)("<option></option>"),tempOption[0].textContent=item.value,(0,_jquery.default)(tempSelElem).append(tempOption))})),tempOption=(0,_jquery.default)("<option></option>"),tempOption[0].textContent=loadFileOption,(0,_jquery.default)(tempSelElem).append(tempOption);let tempOptionNew=(0,_jquery.default)("<option></option>");tempOptionNew[0].textContent=newFileOption,(0,_jquery.default)(tempSelElem).append(tempOptionNew)}static uploadFiles(files,box,instance){_jquery.default.each(files,(function(index,file){(0,_helper.readAndCreateFileData)(file,void 0,(function(filename){instance.onFileUpload(filename,box)}))}))}static init(dropzoneSelector,sectionSelector,classname,dropZoneObject){let root=dropZoneObject;classname.getInstance().init(root,_helper.DEBUG_MODE),root.on({drop:function(e){console.log("ondrop "),console.log(e);let data=e.originalEvent.dataTransfer.getData("text");if(data.startsWith("move_test ")){let result=data.substring(10),thiselement=(_test.TestWrapper.constructFromId(result),e.target.closest(".xml_test")),otherelement=document.getElementById("test_"+result);thiselement.nextElementSibling===otherelement?thiselement.before(otherelement):thiselement.after(otherelement)}else e.originalEvent.dataTransfer&&e.originalEvent.dataTransfer.files.length&&(e.preventDefault(),e.stopPropagation(),FileReferenceList.uploadFiles(e.originalEvent.dataTransfer.files,e.currentTarget,classname.getInstance()))}})}static addCallbacks(rootnode){let subnode=rootnode.querySelector(".add_fileref");subnode?subnode.onclick=function(addevent){addevent.preventDefault(),TestFileReference.getInstance().addItem((0,_jquery.default)(addevent.target))}:console.error("could not find subnode .add_fileref"),subnode=rootnode.querySelector(".remove_item"),subnode?subnode.onclick=function(removeevent){removeevent.preventDefault(),TestFileReference.getInstance().removeItem((0,_jquery.default)(removeevent.target))}:console.error("could not find subnode .remove_item"),subnode=rootnode.querySelector(".fileref_filename"),subnode?subnode.onchange=function(changeevent){changeevent.preventDefault(),TestFileReference.getInstance().onFileSelectionChanged((0,_jquery.default)(changeevent.target))}:console.error("could not find subnode .fileref_filename"),subnode=rootnode.querySelector(".taskeditor-collapse"),subnode?rootnode.querySelector(".taskeditor-collapse").onclick=function(toggleevent){toggleevent.preventDefault(),TestFileReference.getInstance().toggleEditor((0,_jquery.default)(toggleevent.target))}:console.error("could not find subnode .taskeditor-collapse")}}_exports.FileReferenceList=FileReferenceList;class TestFileReference extends FileReferenceList{constructor(){super("xml_fileref_filename","xml_test_fileref","TestFileReference","File","file containing test cases, test configuration, libraries etc.",!0)}static getInstance(){return testFileRefSingleton}}_exports.TestFileReference=TestFileReference;let testFileRefSingleton=new TestFileReference;class ModelSolutionFileReference extends FileReferenceList{constructor(){super("xml_model-solution_filename","xml_model-solution_fileref","ModelSolutionFileReference","File","file belonging to a model solution",!0)}static getInstance(){return modelSolutionFileRefSingleton}}_exports.ModelSolutionFileReference=ModelSolutionFileReference;let modelSolutionFileRefSingleton=new ModelSolutionFileReference}));

//# sourceMappingURL=filereflist.min.js.map