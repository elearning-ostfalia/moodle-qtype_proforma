define("qtype_proforma/taskeditor/modelsol",["exports","./filereflist","./util","core/templates","core/notification","core/str"],(function(_exports,_filereflist,_util,_templates,_notification,Str){var obj;
/**
  * Helper functions for reading and writen task
  *
  * @package    qtype
  * @subpackage proforma
  * @copyright  2023 Ostfalia Hochschule fuer angewandte Wissenschaften
  * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  * @author     eCULT-Team of Ostfalia University, K.Borm, Dr.U.Priss
  */function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.modelSolIDs=_exports.ModelSolutionWrapper=void 0,_templates=(obj=_templates)&&obj.__esModule?obj:{default:obj},Str=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Str);var modelSolIDs={};_exports.modelSolIDs=modelSolIDs;class ModelSolutionWrapper{static constructFromRoot(root){let ms=new ModelSolutionWrapper;return ms._root=root,ms}static constructFromId(id){let ms=new ModelSolutionWrapper;if(ms._root=$("#modelsolution_"+id),0!==ms.root.length)return ms}getValue(member,xmlClass){return member||(member=this.root.find(xmlClass).first()),member.val()}get root(){return this._root}get id(){return this.getValue(this._id,".xml_model-solution_id")}get comment(){return this.getValue(this._comment,".xml_internal_description")}get description(){return this.getValue(this._description,".xml_description")}set comment(newComment){this._root.find(".xml_internal_description").val(newComment)}set description(newDescription){this._root.find(".xml_description").val(newDescription)}static doOnAll(callback){$.each($(".xml_model-solution_id"),(function(indexOpt,item){let modelsolution=ModelSolutionWrapper.constructFromId(item.value);return callback(modelsolution)}))}delete(){_filereflist.FileReferenceList.doOnAllElements(this.root,(function(fileref_element){$(fileref_element).closest("tr").find(".remove_item").first().click()})),delete modelSolIDs[this.id],this.root.remove()}static delete(button){if(1==document.querySelectorAll(".xml_model-solution").length)return void window.alert("There must be at least one model solution");ModelSolutionWrapper.constructFromRoot(button.closest(".xml_model-solution")).delete()}static createFromTemplate(id,description,comment,item,task){comment||(comment=""),description||(description="");let modelsolid=id;modelsolid?modelSolIDs[modelsolid]=1:modelsolid=(0,_util.setcounter)(modelSolIDs);let strings=[{key:"taskeditorfiles",component:"qtype_proforma"},{key:"comment",component:"qtype_proforma"}];return _filereflist.FileReferenceList.getLocalisedStrings().then((()=>Str.get_strings(strings))).then((results=>{let context={msid:modelsolid,testtitle:"TODO Model Solution titel",filenamelabel:results[0],description:description};return _templates.default.renderForPromise("qtype_proforma/taskeditor_modelsol",context)})).then((_ref=>{let{html:html,js:js}=_ref;_templates.default.appendNodeContents("#proforma-model-solution-section",html,js);const msroot=$("#modelsolution_"+modelsolid);let ms=ModelSolutionWrapper.constructFromRoot(msroot);if(_filereflist.FileReferenceList.init(null,null,_filereflist.ModelSolutionFileReference,msroot),_filereflist.FileReferenceList.addCallbacks($(msroot)[0]),msroot.find("button").first().on("click",(function(event){event.preventDefault(),ModelSolutionWrapper.delete($(this))})),_util.DEBUG_MODE||(msroot.find(".xml_model-solution_id").hide(),msroot.find("label[for='xml_model-solution_id']").hide()),item){let counter=0;item.filerefs.forEach((function(itemFileref,indexFileref){let filename=task.findFilenameForId(itemFileref.refid),promiseFactories=[_filereflist.ModelSolutionFileReference.getInstance().setFilenameOnCreation(ms.root,counter++,filename)];Promise.all(promiseFactories).then((()=>{}))}))}})).catch((error=>{(0,_notification.exception)(error)}))}}_exports.ModelSolutionWrapper=ModelSolutionWrapper}));

//# sourceMappingURL=modelsol.min.js.map