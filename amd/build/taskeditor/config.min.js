define("qtype_proforma/taskeditor/config",["exports","./util","./java","./helper","core/str"],(function(_exports,_util,_java,_helper,Str){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getMimeType=function(mimetype,filename){switch(filename.split(".").pop().toLowerCase()){case"h":return"text/x-chdr";case"c":return"text/x-csrc";case"cpp":return"text/x-c++src";case"java":return"text/x-java";case"py":return"text/x-python";case"stlx":return"text/x-setlx";case"xml":return"application/xml";case"html":return"text/html";default:return mimetype}},_exports.handleFilenameChangeInTest=function(newFilename,tempSelElem){(function(newFilename){let testBox=$(tempSelElem).closest(".xml_test");const ui_classname=$(testBox).find(".xml_ju_mainclass");1===ui_classname.length&&""===ui_classname.first().val().trim()&&ui_classname.first().val(_java.javaParser.getFullClassnameFromFilename(newFilename))})(newFilename),function(newFilename){let testBox=$(tempSelElem).closest(".xml_test");const ui_title=$(testBox).find(".xml_test_title");1===ui_title.length&&$.each(ui_title,(function(index,element){let currentTitle=$(element).val();_helper.readXmlActive||currentTitle!==JUnitTest.DefaultTitle||$(element).val("Junit Test "+_java.javaParser.getPureClassnameFromFilename(newFilename)).change()}))}(newFilename)},_exports.infoPythonDoctest=_exports.infoPython=_exports.infoJavaJUnit=_exports.infoJavaComp=_exports.infoGoogleTest=_exports.infoCheckStyle=_exports.infoCUnit=void 0,_exports.initStrings=function(){return Str.get_strings([{key:"gtest_help_short",component:"qtype_proforma"},{key:"cunit_help_short",component:"qtype_proforma"},{key:"makerun_help",component:"qtype_proforma"},{key:"junit_help_short",component:"qtype_proforma"},{key:"junitentry_help",component:"qtype_proforma"}]).then((results=>{console.log("config strings are initialised"),gtest_help=results[0],cunittest_help=results[1],makerun_help=results[2],junit_help=results[3],junitentry_help=results[4],testCUnit=new CUnitTest,testGoogleTest=new GoogleTest,testJavaJUnit=new JUnitTest,_exports.infoGoogleTest=infoGoogleTest=testGoogleTest,_exports.infoCUnit=infoCUnit=testCUnit,_exports.infoJavaJUnit=infoJavaJUnit=testJavaJUnit,_exports.testInfos=testInfos=[testJavaComp,testJavaJUnit,testGoogleTest,testCUnit,testPython,testPythonDoctest,testCheckStyle]}))},_exports.isBinaryFile=function(file,mimetype){if("makefile"===file.name.toLowerCase())return!1;if(mimetype&&mimetype.match(/(text\/)/i))return!1;switch(file.name.split(".").pop().toLowerCase()){case"c":case"h":case"cpp":case"hpp":case"hxx":case"cxx":case"java":case"log":case"py":case"txt":case"xml":case"php":case"js":case"html":case"csv":return!1}return!0},_exports.resolveNamespace=function(prefix,defaultns){switch(defaultns){case"urn:proforma:task:v1.0.1":switch(prefix){case"unit":return unittestns_old;case"praktomat":return praktomatns}return"";case"urn:proforma:v2.0":switch(prefix){case"unit":return unittestns_new;case"cs":return checkstylens}return"";default:return"unsupported namespace"}},_exports.useCodemirror=_exports.testInfos=void 0,Str=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Str);_exports.useCodemirror=!0;const praktomatns="urn:proforma:praktomat:v0.2",unittestns_old="urn:proforma:tests:unittest:v1",unittestns_new="urn:proforma:tests:unittest:v1.1",checkstylens="urn:proforma:tests:java-checkstyle:v1.1";let gtest_help,cunittest_help,makerun_help,junit_help,junitentry_help;class JavaCompilerTest extends _util.CustomTest{constructor(){super("Compiler Test","java-compilation"),this.gradingWeight=0,this.manadatoryFile=!1}}class PythonUnittest extends _util.CustomTest{constructor(){super("Python Unittest","unittest","qtype_proforma/taskeditor_test",["python"])}}class JUnitTest extends _util.CustomTest{constructor(){super(JUnitTest.DefaultTitle,"unittest","qtype_proforma/taskeditor_junit",["java"]),this.helptext=junit_help,this.entrypointhelp=junitentry_help}onReadXml(test,xmlReader,testConfigNode,context){let unitNode=xmlReader.readSingleNode("unit:unittest",testConfigNode);if(!unitNode)throw new Error("element unit:unittest not found in unittest or unittest namespace invalid");switch(unitNode.namespaceURI){case unittestns_old:context.entrypoint=xmlReader.readSingleText("unit:main-class",unitNode);break;case unittestns_new:context.entrypoint=xmlReader.readSingleText("unit:entry-point",unitNode);break;default:throw new Error("unsupported namespace "+xmlReader.defaultns+" in JUnitTest")}context.junit_version=xmlReader.readSingleText("@version",unitNode),context.junit_framework=xmlReader.readSingleText("@framework",unitNode)}onWriteXml(test,testConfigNode,xmlDoc,xmlWriter,task){let root=test.uiElement.root;task.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns:unit",unittestns_new);let unittestNode=xmlDoc.createElementNS(unittestns_new,"unit:unittest");testConfigNode.appendChild(unittestNode),xmlWriter.createTextElement(unittestNode,"unit:entry-point",$(root).find(".xml_ju_mainclass").val(),unittestns_new),unittestNode.setAttribute("framework",$(root).find(".xml_ju_framew").val()),unittestNode.setAttribute("version",$(root).find(".xml_ju_version").val())}}_defineProperty(JUnitTest,"DefaultTitle","JUnit Test");class GeneralUnitTest extends _util.CustomTest{constructor(title,template,proglang,framework){let withRunCommand=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];super(title,"unittest",template,proglang),_defineProperty(this,"withRunCommand",!0),this.framework=framework,this.withRunCommand=withRunCommand}onReadXml(test,xmlReader,testConfigNode,context){let unitNode=xmlReader.readSingleNode("unit:unittest",testConfigNode);if(!unitNode)throw new Error('XML: Test "'+this.title+'": subelement unit:unittest not found in unittest or unittest namespace invalid');if(unitNode.namespaceURI!==unittestns_new)throw new Error('XML: Test "'+this.title+'": unsupported namespace '+xmlReader.defaultns+" in unit test");if(this.withRunCommand&&(context.entrypoint=xmlReader.readSingleText("unit:entry-point",unitNode),""===context.entrypoint.trim()))throw new Error('XML: Test "'+this.title+'": run command is missing');let framework=xmlReader.readSingleText("@framework",unitNode);switch(framework){case"GoogleTest":this.framework="GoogleTest",this.proglang=["c","cpp"];break;case"PythonUnittest":this.framework="PythonUnittest",this.proglang=["python"];break;case"CUnit":this.framework="CUnit",this.proglang=["c"];break;default:framework=this.framework}context.framework_version=xmlReader.readSingleText("@version",unitNode),context.framework=framework}onWriteXml(test,testConfigNode,xmlDoc,xmlWriter,task){let root=test.uiElement.root;task.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns:unit",unittestns_new);let unittestNode=xmlDoc.createElementNS(unittestns_new,"unit:unittest");testConfigNode.appendChild(unittestNode),this.withRunCommand&&xmlWriter.createTextElement(unittestNode,"unit:entry-point",$(root).find(".xml_u_mainclass").val(),unittestns_new),unittestNode.setAttribute("framework",this.framework),unittestNode.setAttribute("version",$(root).find(".xml_u_version").val())}}class GoogleTest extends GeneralUnitTest{constructor(){super("Google Test","qtype_proforma/taskeditor_unittest",["c","cpp"],"GoogleTest"),this.helptext=gtest_help,this.entrypointhelp=makerun_help}}class CUnitTest extends GeneralUnitTest{constructor(){super("CUnit Test","qtype_proforma/taskeditor_unittest",["c"],"CUnit"),this.helptext=cunittest_help,this.entrypointhelp=makerun_help}}class CheckstyleTest extends _util.CustomTest{constructor(){super("CheckStyle Test","java-checkstyle","qtype_proforma/taskeditor_checkstyle"),this.gradingWeight=.2}onReadXml(test,xmlReader,testConfigNode,context){let csNode=xmlReader.readSingleNode("cs:java-checkstyle",testConfigNode);if(csNode){if(csNode.namespaceURI!==checkstylens)throw new Error("unsupported namespace "+xmlReader.defaultns+" in JUnitTest");context.cs_version=xmlReader.readSingleText("@version",csNode),context.warnings=xmlReader.readSingleText("cs:max-checkstyle-warnings",csNode)}else{let praktomatNode=xmlReader.readSingleNode("dns:test-meta-data",testConfigNode);context.warnings=xmlReader.readSingleText("praktomat:max-checkstyle-warnings",praktomatNode),context.cs_version=xmlReader.readSingleText("praktomat:version",testConfigNode)}}onWriteXml(test,testConfigNode,xmlDoc,xmlWriter,task){let root=test.uiElement.root;task.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns:cs",checkstylens);let csNode=xmlDoc.createElementNS(checkstylens,"cs:java-checkstyle");testConfigNode.appendChild(csNode),xmlWriter.createTextElement(csNode,"cs:max-checkstyle-warnings",$(root).find(".xml_pr_CS_warnings").val(),checkstylens),csNode.setAttribute("version",$(root).find(".xml_pr_CS_version").val())}}class PythonDocTest extends _util.CustomTest{constructor(){super("Python DocTest","python-doctest")}}const testJavaComp=new JavaCompilerTest;let testJavaJUnit;const testCheckStyle=new CheckstyleTest;let testCUnit,testGoogleTest;const testPython=new PythonUnittest,testPythonDoctest=new PythonDocTest;let testInfos,infoGoogleTest,infoCUnit,infoJavaJUnit;_exports.testInfos=testInfos,_exports.infoGoogleTest=infoGoogleTest,_exports.infoCUnit=infoCUnit,_exports.infoJavaJUnit=infoJavaJUnit;let infoJavaComp=testJavaComp;_exports.infoJavaComp=infoJavaComp;let infoPython=testPython;_exports.infoPython=infoPython;let infoPythonDoctest=testPythonDoctest;_exports.infoPythonDoctest=infoPythonDoctest;let infoCheckStyle=testCheckStyle;_exports.infoCheckStyle=infoCheckStyle}));

//# sourceMappingURL=config.min.js.map